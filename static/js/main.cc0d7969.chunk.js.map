{"version":3,"sources":["images/logo_google.png","images/pexels-johannes-plenio-1103970.jpg","components/Text/Text.tsx","views/Login/LoginView.tsx","models/authentication/auth.class.ts","models/authentication/auth.json.ts","models/authentication/auth.model.ts","utils/MoneyAmount.ts","models/transactions/transactions.class.ts","utils/groupByDate.ts","utils/compareDate.ts","models/transactions/transactions.filtered.model.ts","models/transactions/transactions.model.ts","models/transactionForm/transactionForm.model.ts","models/interval/interval.model.ts","config.ts","utils/Problem.ts","utils/Result.ts","services/ServiceBase.ts","services/AuthService.ts","models/transactions/transactions.json.ts","services/TransactionService.ts","store.ts","hooks/useRedirect.ts","views/Login/LoginController.tsx","views/Register/RegisterView.tsx","views/Register/RegisterController.tsx","hooks/useMedia.ts","components/AppTabs/AppTabs.tsx","components/TransactionFormModal/TransactionFormModalView.tsx","components/TransactionFormModal/TransactionFormModalController.tsx","hooks/useOnKeyPress.ts","components/AppLayout/AppLayout.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/TransactionListing/TransactionListingView.tsx","components/TransactionListing/TransactionListing.tsx","components/TransactionList/TransactionListView.tsx","components/TransactionList/TransactionList.tsx","components/TransactionListFilters/TransactionListFiltersView.tsx","components/TransactionListFilters/TransactionListFiltersController.tsx","views/DashboardTab/DashboardTabView.tsx","views/DashboardTab/DashboardTabController.tsx","views/SettingsTab/SettingsTabView.tsx","views/SettingsTab/SettingsTabController.tsx","views/AnalyticsTab/AnalyticsTabView.tsx","views/AnalyticsTab/AnalyticsTabController.tsx","views/ForgotPassword/ForgotPasswordView.tsx","views/ForgotPassword/ForgotPasswordController.tsx","Routes.tsx","App.tsx","serviceWorker.ts","styles/theme.ts","index.tsx"],"names":["module","exports","getClassName","defaultClassName","props","cx","className","clickable","onClick","error","weight","padding","color","getHeaderHtmlProps","children","Text","H1","H2","H3","H4","H5","H6","getParagraphHtmlProps","LoginView","useState","passwordVisible","setPasswordVisible","useForm","resolver","yupResolver","loginValidationSchema","register","handleSubmit","errors","formState","emailError","touched","email","message","passwordError","password","noValidate","onSubmit","TextField","id","name","type","inputRef","label","variant","helperText","fullWidth","InputProps","endAdornment","InputAdornment","position","Email","IconButton","_","size","Button","handleGoogleSubmit","startIcon","src","googleLogo","alt","Divider","handleCreateAccount","handleForgotPassword","Auth","json","displayName","photoUrl","googleId","this","undefined","jsonAuthSchema","object","string","required","min","isJsonAuth","arg","isValidSync","authModel","initialized","_setInitialized","action","state","boolean","user","isLoggedIn","computed","Boolean","accessToken","_setAccessToken","newAccessToken","_login","getProfile","thunk","actions","payload","a","injections","authService","profileResult","onSuccess","profile","loginWithGoogle","loginWithEmailPassword","loginWithEmailAndPassword","result","registerWithEmailPassword","registerWithEmailAndPassword","forgotPassword","forgotPasswordResult","logout","MoneyAmount","integer","Math","floor","Error","that","abs","decimal","ceil","euros","toFixed","split","reverse","map","char","i","join","cents","padStart","formatSign","formatEuros","formatCents","sign","values","reduce","sum","value","add","Transaction","date","category","comment","amount","uid","Date","time","integerAmount","uuid","getTime","groupByDate","items","getDate","options","itemsByKey","res","item","key","datefns","getKey","Object","entries","entry","sort","b","compareDate","op","_a","serializeDate","_b","getFullYear","getMonth","filteredTransactionsModel","storeState","transactions","interval","startDate","endDate","filter","itemsByDates","filtered","count","length","sums","incomes","expenses","all","transactionsModel","categories","c","indexOf","getTransactions","transactionService","_getTransactions","jsons","postTransaction","_postTransaction","push","deleteTransaction","_deleteTransaction","putTransaction","_putTransaction","patchTransaction","_patchTransaction","onAuthChanged","thunkOn","store","auth","target","resolvedTargets","loggedOut","loggedIn","_clearTransactions","transactionFormModel","isOpen","setOpen","open","close","intervalModel","setStartDate","setEndDate","setInterval","dates","setPreviousMonthAsDateInterval","startOfActiveMonth","dateInPreviousMonth","setNextMonthAsDateInterval","endOfActiveMonth","dateInNextMonth","dateIntervalIsMonth","dateIntervalMonthString","month","toLocaleDateString","year","Config","Problem","problem","status","code","data","axiosError","response","request","promiseToResult","promise","then","Success","catch","Failure","fallbackValue","callback","fn","success","failure","typeGuard","v","ServiceBase","baseURL","axios","API_URL","Axios","create","withCredentials","path","token","getState","jwt","decode","expiresAt","Number","exp","now","console","warn","force","isAccessTokenValid","url","endpoint","get","getActions","attemptRefreshAccessToken","override","headers","Authorization","config","requestFunction","onBeforeRequest","getConfig","mapFailure","failureValue","fromAxiosError","handleRequest","post","delete","put","patch","AuthService","ensureType","credentials","transform","Empty","window","location","href","jsonTransactionSchema","number","positive","isJsonTransaction","validateSync","isJsonTransactionArray","Array","isArray","every","TransactionService","storeModel","transactionForm","createStore","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","useStore","useRedirect","history","useHistory","routes","yup","defined","max","Login","setError","redirect","dashboard","onFailure","RegisterView","registerValidationSchema","handleLogin","repeatPassword","oneOf","ref","Register","login","useMedia","query","mediaQueryList","useMemo","matchMedia","setValue","changeHandler","useCallback","matches","useEffect","addEventListener","removeEventListener","AppTabs","openTransactionsForm","sidebarView","dashboardMatch","useRouteMatch","analyticsMatch","analytics","budgetMatch","budget","settingsMatch","settings","active","version","x","y","width","height","viewBox","d","svgPath","TransactionFormModalView","transactionFormSchema","integerAmountError","categoryError","commentError","Modal","onClose","handleClose","style","TransactionFormModal","openForm","closeForm","eventHandler","ev","matchTarget","keyCode","shift","shiftKey","altKey","ctrl","ctrlKey","ifPassed","if","ifNotPassed","ifNot","onKeyUp","useOnKeyPress","AppLayout","ProtectedRoute","fallbackRoute","routeProps","defaultFallbackRoute","to","TransactionListingView","signClass","transaction","isPositive","formatFull","TransactionListing","handleDelete","TransactionListView","del","datestring","currentYear","format","log","TransactionList","filteredItemsByDates","bypassFilters","TransactionListFiltersView","ButtonGroup","onPreviousMonth","ChevronLeft","onNextMonth","ChevronRight","TransactionListFilters","styles","DashboardTabView","textureImg","totalHeader","filteredSum","larger","filteredIncomesSum","filteredExpensesSum","DashboardTab","filteredSums","SettingsTabView","handleLogout","SettingsTab","AnalyticsTabView","setData","accept","onChange","e","files","file","reader","FileReader","rows","toString","row","replace","readAsText","t","toDateString","AnalyticsTab","ForgotPasswordView","forgotPasswordValidationSchema","ForgotPassword","setSuccess","approot","Routes","exact","App","hostname","match","cssvar","getComputedStyle","document","documentElement","getPropertyValue","theme","createMuiTheme","palette","primary","colors","deepPurple","main","dark","light","50","100","200","300","400","500","600","700","800","900","contrastText","ReactDOM","render","ThemeProvider","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cc0d7969.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_google.696b80ec.png\";","module.exports = __webpack_public_path__ + \"static/media/pexels-johannes-plenio-1103970.afe78909.jpg\";","import \"./Text.scss\";\r\nimport React from \"react\";\r\nimport cx from \"classnames\"\r\n\r\nexport type TextWeight = \"default\" | \"bold\" | \"light\"\r\n\r\nexport type TextColor = \"primary\" | \"default\" | \"white\" | \"black\"\r\n\r\nexport type TextPadding = \"none\" | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\"\r\n\r\nexport interface AdditionalTextProps {\r\n\terror?: true;\r\n\tweight?: TextWeight;\r\n\tcolor?: TextColor;\r\n\tpadding?: TextPadding;\r\n}\r\n\r\nexport type HTMLHeadingProps = React.DetailedHTMLProps<React.HTMLAttributes<HTMLHeadingElement>, HTMLHeadingElement>\r\nexport type HTMLParagraphProps = React.DetailedHTMLProps<React.HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>\r\nexport type HTMLSpanProps = React.DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\nexport type TextHeaderProps = AdditionalTextProps & HTMLHeadingProps\r\nexport type TextParagraphProps = AdditionalTextProps & HTMLParagraphProps\r\nexport type TextSpanProps = AdditionalTextProps & HTMLSpanProps\r\n\r\nexport type TextProps = TextHeaderProps\r\n\t| TextParagraphProps\r\n\t| TextSpanProps\r\n\r\n/**\r\n * Construct a classname property from the given props\r\n */\r\nfunction getClassName(defaultClassName: string, props: TextProps) {\r\n\treturn cx(\r\n\t\tprops.className,\r\n\t\tdefaultClassName,\r\n\t\t{ clickable: !!props.onClick },\r\n\t\t{ error: !!props.error },\r\n\t\t`weight-${props.weight ?? \"default\"}`,\r\n\t\t`padding-${props.padding ?? \"none\"}`,\r\n\t\t`color-${props.color ?? \"default\"}`,\r\n\t)\r\n}\r\n\r\nfunction getHeaderHtmlProps(props: TextHeaderProps): HTMLHeadingProps {\r\n\tconst { error, weight, color, padding, className, children, ...htmlProps } = props\r\n\treturn htmlProps\r\n}\r\n\r\nfunction getParagraphHtmlProps(props: TextParagraphProps): HTMLParagraphProps {\r\n\tconst { error, weight, color, padding, className, children, ...htmlProps } = props\r\n\treturn htmlProps\r\n}\r\n\r\nfunction getSpanHtmlProps(props: TextSpanProps): HTMLSpanProps {\r\n\tconst { error, weight, color, padding, className, children, ...htmlProps } = props\r\n\treturn htmlProps\r\n}\r\n\r\n/**\r\n * All Text components are defined in this const\r\n */\r\nexport const Text = {\r\n\r\n\t/**\r\n\t * All header components are listed here\r\n\t */\r\n\tHeader: {\r\n\r\n\t\t/**\r\n\t\t * H1 Header Component\r\n\t\t */\r\n\t\tH1(props: TextHeaderProps) {\r\n\t\t\treturn <h1\r\n\t\t\t\t{...getHeaderHtmlProps(props)}\r\n\t\t\t\tclassName={getClassName(\"Text Header H1\", props)}\r\n\t\t\t>{props.children}</h1>\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * H2 Header Component\r\n\t\t */\r\n\t\tH2(props: TextHeaderProps) {\r\n\t\t\treturn <h2\r\n\t\t\t\t{...getHeaderHtmlProps(props)}\r\n\t\t\t\tclassName={getClassName(\"Text Header H2\", props)}\r\n\t\t\t>{props.children}</h2>\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * H3 Header Component\r\n\t\t */\r\n\t\tH3(props: TextHeaderProps) {\r\n\t\t\treturn <h3\r\n\t\t\t\t{...getHeaderHtmlProps(props)}\r\n\t\t\t\tclassName={getClassName(\"Text Header H3\", props)}\r\n\t\t\t>{props.children}</h3>\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * H4 Header Component\r\n\t\t */\r\n\t\tH4(props: TextHeaderProps) {\r\n\t\t\treturn <h4\r\n\t\t\t\t{...getHeaderHtmlProps(props)}\r\n\t\t\t\tclassName={getClassName(\"Text Header H4\", props)}\r\n\t\t\t>{props.children}</h4>\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * H5 Header Component\r\n\t\t */\r\n\t\tH5(props: TextHeaderProps) {\r\n\t\t\treturn <h5\r\n\t\t\t\t{...getHeaderHtmlProps(props)}\r\n\t\t\t\tclassName={getClassName(\"Text Header H5\", props)}\r\n\t\t\t>{props.children}</h5>\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * H6 Header Component\r\n\t\t */\r\n\t\tH6(props: TextHeaderProps) {\r\n\t\t\treturn <h6\r\n\t\t\t\t{...getHeaderHtmlProps(props)}\r\n\t\t\t\tclassName={getClassName(\"Text Header H6\", props)}\r\n\t\t\t>{props.children}</h6>\r\n\t\t},\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Paragraph component\r\n\t */\r\n\tParagraph(props: TextParagraphProps) {\r\n\t\treturn <p\r\n\t\t\t{...getParagraphHtmlProps(props)}\r\n\t\t\tclassName={getClassName(\"Text Paragraph\", props)}\r\n\t\t>{props.children}</p>\r\n\t},\r\n\r\n\t/**\r\n\t * Span component\r\n\t */\r\n\tSpan(props: TextSpanProps) {\r\n\t\treturn <span\r\n\t\t\t{...getSpanHtmlProps(props)}\r\n\t\t\tclassName={getClassName(\"Text Span\", props)}\r\n\t\t>{props.children}</span>\r\n\t},\r\n\r\n} as const","import \"./Login.scss\";\r\nimport React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { loginValidationSchema, LoginFormType } from './LoginController';\r\nimport { yupResolver } from '@hookform/resolvers';\r\nimport { Text } from \"../../components/Text/Text\";\r\nimport { TextField, Button, Divider, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport googleLogo from \"../../images/logo_google.png\"\r\nimport {\r\n\tEmail as EmailIcon,\r\n\tVisibility as PasswordVisibleIcon,\r\n\tVisibilityOff as PasswordInvisibleIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nexport type LoginViewProps = {\r\n\thandleSubmit(values: LoginFormType): Promise<void>;\r\n\thandleGoogleSubmit(): Promise<void>;\r\n\thandleForgotPassword(): Promise<void>;\r\n\thandleCreateAccount(): Promise<void>;\r\n\terror?: string;\r\n}\r\n\r\nexport const LoginView: React.FC<LoginViewProps> = (props) => {\r\n\r\n\t/**\r\n\t * Password visible state\r\n\t */\r\n\tconst [passwordVisible, setPasswordVisible] = useState(false)\r\n\r\n\t/**\r\n\t * React hook form\r\n\t */\r\n\tconst { register, handleSubmit, errors, formState, ...form } = useForm<LoginFormType>({\r\n\t\tresolver: yupResolver(loginValidationSchema),\r\n\t})\r\n\r\n\t/**\r\n\t * Email and password error shorthands for react hook form\r\n\t */\r\n\tconst emailError = formState.touched.email && errors.email?.message\r\n\tconst passwordError = formState.touched.password && errors.password?.message\r\n\r\n\treturn <div className=\"Login AuthView\">\r\n\r\n\t\t<div className=\"container\">\r\n\r\n\t\t\t<header>\r\n\r\n\t\t\t\t<Text.Header.H5 weight=\"bold\" padding=\"sm\" color=\"white\">\r\n\t\t\t\t\t{\"Login to Expence\"}\r\n\t\t\t\t</Text.Header.H5>\r\n\r\n\t\t\t</header>\r\n\r\n\t\t\t<div className=\"content\">\r\n\r\n\t\t\t\t<form noValidate onSubmit={handleSubmit(props.handleSubmit)}>\r\n\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"login-email\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tinputRef={register}\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\terror={!!emailError}\r\n\t\t\t\t\t\thelperText={emailError}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t<EmailIcon />\r\n\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"login-password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\ttype={passwordVisible ? \"text\" : \"password\"}\r\n\t\t\t\t\t\tinputRef={register}\r\n\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\terror={!!passwordError}\r\n\t\t\t\t\t\thelperText={passwordError}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t<IconButton onClick={() => setPasswordVisible(_ => !_)} size=\"small\">\r\n\t\t\t\t\t\t\t\t\t{passwordVisible ? <PasswordVisibleIcon /> : <PasswordInvisibleIcon />}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\"Login\"}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops.error\r\n\t\t\t\t\t\t\t? <Text.Paragraph error>\r\n\t\t\t\t\t\t\t\t{props.error}\r\n\t\t\t\t\t\t\t</Text.Paragraph>\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tonClick={() => props.handleGoogleSubmit()}\r\n\t\t\t\t\t\tstartIcon={<img className=\"logo\" src={googleLogo} alt=\"Google Logo\" />}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\"Log in with Google\"}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t</form >\r\n\r\n\t\t\t\t<Divider />\r\n\r\n\t\t\t\t<div className=\"signInOptions\">\r\n\r\n\t\t\t\t\t<Button onClick={() => props.handleCreateAccount()}>\r\n\t\t\t\t\t\t{\"Create account\"}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t<Button onClick={() => props.handleForgotPassword()}>\r\n\t\t\t\t\t\t{\"Forgot password\"}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\r\n\t</div>\r\n\r\n}\r\n","import { JsonAuth } from \"./auth.json\";\r\n\r\nexport class Auth {\r\n  id: string;\r\n  displayName?: string;\r\n  email?: string;\r\n  photoUrl?: string;\r\n  googleId?: string;\r\n\r\n  constructor(json: JsonAuth) {\r\n    this.id = json.id;\r\n    this.displayName = json.displayName ?? undefined;\r\n    this.email = json.email ?? undefined;\r\n    this.photoUrl = json.photoUrl ?? undefined;\r\n    this.googleId = json.googleId ?? undefined;\r\n  }\r\n}\r\n","import { object, string, ObjectSchema } from \"yup\";\r\n\r\nexport type JsonAuth = {\r\n  id: string;\r\n  displayName: string | undefined;\r\n  photoUrl: string | undefined;\r\n  email: string | undefined;\r\n  googleId: string | undefined;\r\n};\r\n\r\nexport const jsonAuthSchema: ObjectSchema<JsonAuth> = object({\r\n  id: string().required().min(1),\r\n  displayName: string(),\r\n  photoUrl: string(),\r\n  email: string(),\r\n  googleId: string(),\r\n}).required();\r\n\r\nexport function isJsonAuth(arg: any): arg is JsonAuth {\r\n  try {\r\n    jsonAuthSchema.isValidSync(arg);\r\n    return true;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n","import { Action, action, Computed, computed, Thunk, thunk } from \"easy-peasy\";\r\nimport { Auth } from \"./auth.class\";\r\nimport { AuthService } from \"../../services/AuthService\";\r\nimport { JsonAuth, isJsonAuth } from \"./auth.json\";\r\nimport { StoreInjections, StoreModel } from \"../../store\";\r\n\r\nexport interface AuthModel {\r\n  /**\r\n   * Initialized state: has the profile been fetched at the least once\r\n   */\r\n  initialized: boolean;\r\n  _setInitialized: Action<AuthModel, boolean>;\r\n\r\n  /**\r\n   * Currently logged in user or null if none logged in\r\n   */\r\n  user: Auth | null;\r\n\r\n  /**\r\n   * Computed property for whether the user is currently logged in\r\n   */\r\n  isLoggedIn: Computed<AuthModel, boolean>;\r\n\r\n  /**\r\n   * Current access token for authentication in memory for security purposes.\r\n   * This is automatically refreshed when making a request with a service and\r\n   * should not be manually set.\r\n   */\r\n  accessToken: string | null;\r\n\r\n  /**\r\n   * Function to set the access token\r\n   */\r\n  _setAccessToken: Action<AuthModel, string>;\r\n\r\n  /**\r\n   * Action to set the current user with partial user data (a constructable)\r\n   */\r\n  _login: Action<AuthModel, JsonAuth>;\r\n\r\n  /**\r\n   * Function to get the currently logged in user's profile data and apply it\r\n   * to the user property. The logged in property is defined by the current\r\n   * refresh token.\r\n   */\r\n  getProfile: Thunk<\r\n    AuthModel,\r\n    void,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<AuthService[\"getProfile\"]>\r\n  >;\r\n\r\n  /**\r\n   * Log in the current user with a Google account\r\n   */\r\n  loginWithGoogle: Thunk<\r\n    AuthModel,\r\n    void,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<AuthService[\"loginWithGoogle\"]>\r\n  >;\r\n\r\n  /**\r\n   * Register the current user with email and password\r\n   */\r\n  registerWithEmailPassword: Thunk<\r\n    AuthModel,\r\n    { email: string; password: string },\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<AuthService[\"registerWithEmailAndPassword\"]>\r\n  >;\r\n\r\n  /**\r\n   * Log in the current user with email and password\r\n   */\r\n  loginWithEmailPassword: Thunk<\r\n    AuthModel,\r\n    { email: string; password: string },\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<AuthService[\"loginWithEmailAndPassword\"]>\r\n  >;\r\n\r\n  /**\r\n   * Forgot password\r\n   */\r\n  forgotPassword: Thunk<\r\n    AuthModel,\r\n    { email: string },\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<AuthService[\"forgotPassword\"]>\r\n  >;\r\n\r\n  /**\r\n   * Log out the current user\r\n   */\r\n  logout: Thunk<\r\n    AuthModel,\r\n    void,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<AuthService[\"logout\"]>\r\n  >;\r\n}\r\n\r\n/**\r\n * Implementation of the authentication model\r\n */\r\nexport const authModel: AuthModel = {\r\n  initialized: false,\r\n  _setInitialized: action((state, boolean) => {\r\n    state.initialized = boolean;\r\n  }),\r\n\r\n  user: null,\r\n\r\n  isLoggedIn: computed((state) => Boolean(state.user)),\r\n\r\n  accessToken: null,\r\n\r\n  _setAccessToken: action((state, newAccessToken) => {\r\n    state.accessToken = newAccessToken;\r\n  }),\r\n\r\n  _login: action((state, json) => {\r\n    if (isJsonAuth(json)) {\r\n      state.user = new Auth(json);\r\n    }\r\n  }),\r\n\r\n  getProfile: thunk(async (actions, payload, { injections }) => {\r\n    const profileResult = await injections.authService.getProfile();\r\n    profileResult.onSuccess((profile) => {\r\n      actions._login(profile);\r\n    });\r\n    actions._setInitialized(true);\r\n    return profileResult;\r\n  }),\r\n\r\n  loginWithGoogle: thunk((actions, payload, { injections }) => {\r\n    return injections.authService.loginWithGoogle();\r\n  }),\r\n\r\n  loginWithEmailPassword: thunk(async (actions, payload, { injections }) => {\r\n    const result = await injections.authService.loginWithEmailAndPassword(\r\n      payload\r\n    );\r\n    result.onSuccess(async () => {\r\n      const profileResult = await injections.authService.getProfile();\r\n      profileResult.onSuccess((profile) => {\r\n        actions._login(profile);\r\n      });\r\n    });\r\n    return result;\r\n  }),\r\n\r\n  registerWithEmailPassword: thunk(async (actions, payload, { injections }) => {\r\n    const result = await injections.authService.registerWithEmailAndPassword(\r\n      payload\r\n    );\r\n    result.onSuccess(async () => {\r\n      const profileResult = await injections.authService.getProfile();\r\n      profileResult.onSuccess((profile) => {\r\n        actions._login(profile);\r\n      });\r\n    });\r\n    return result;\r\n  }),\r\n\r\n  forgotPassword: thunk(async (actions, payload, { injections }) => {\r\n    const forgotPasswordResult = await injections.authService.forgotPassword(\r\n      payload\r\n    );\r\n    return forgotPasswordResult;\r\n  }),\r\n\r\n  logout: thunk((actions, payload, { injections }) => {\r\n    return injections.authService.logout();\r\n  }),\r\n};\r\n","export class MoneyAmount {\r\n  integer: number;\r\n\r\n  constructor(integer: number) {\r\n    if (Math.floor(integer) !== integer) {\r\n      throw new Error(\"Cannot construct money amount from non-integer value\");\r\n    }\r\n    this.integer = integer;\r\n  }\r\n\r\n  get decimal() {\r\n    return this.integer / 100;\r\n  }\r\n\r\n  get unsignedDecimal() {\r\n    return Math.abs(this.decimal);\r\n  }\r\n\r\n  get unsignedInteger() {\r\n    return Math.abs(this.integer);\r\n  }\r\n\r\n  get euros() {\r\n    if (this.integer > 0) {\r\n      return Math.floor(this.integer / 100);\r\n    } else {\r\n      return Math.ceil(this.integer / 100);\r\n    }\r\n  }\r\n\r\n  get formatEuros() {\r\n    // Gets the euros (ignorign the sign) and maps them to a string,\r\n    // where every 3 characters there is a space\r\n    return Math.abs(this.euros)\r\n      .toFixed(0)\r\n      .split(\"\")\r\n      .reverse()\r\n      .map((char, i) => (i % 3 === 2 ? \" \" + char : char))\r\n      .reverse()\r\n      .join(\"\");\r\n  }\r\n\r\n  get cents() {\r\n    return Math.floor(this.integer % 100);\r\n  }\r\n\r\n  get formatCents() {\r\n    return Math.abs(this.cents).toFixed(0).padStart(2, \"0\");\r\n  }\r\n\r\n  get sign(): -1 | 0 | 1 {\r\n    return this.integer === 0 ? 0 : this.integer > 0 ? 1 : -1;\r\n  }\r\n\r\n  get formatSign() {\r\n    return this.integer === 0 ? \"±\" : this.integer > 0 ? \"+\" : \"-\";\r\n  }\r\n\r\n  get formatFull() {\r\n    return `${this.formatSign} ${this.formatEuros}.${this.formatCents} €`;\r\n  }\r\n\r\n  get isPositive() {\r\n    return this.sign >= 0;\r\n  }\r\n\r\n  get isNegative() {\r\n    return this.sign < 0;\r\n  }\r\n\r\n  add(that: MoneyAmount) {\r\n    return new MoneyAmount(this.integer + that.integer);\r\n  }\r\n\r\n  subtract(that: MoneyAmount) {\r\n    return new MoneyAmount(this.integer - that.integer);\r\n  }\r\n\r\n  static sum(values: MoneyAmount[]) {\r\n    return values.reduce((sum, value) => sum.add(value), new MoneyAmount(0));\r\n  }\r\n}\r\n","import { JsonTransaction } from \"./transactions.json\";\r\nimport * as uuid from \"uuid\";\r\nimport { MoneyAmount } from \"../../utils/MoneyAmount\";\r\n\r\nexport class Transaction {\r\n  date: Date;\r\n  category: string;\r\n  comment: string;\r\n  amount: MoneyAmount;\r\n  id: string;\r\n  uid: string;\r\n\r\n  constructor(json: JsonTransaction) {\r\n    this.date = new Date(json.time);\r\n    this.comment = json.comment || \"\";\r\n    this.category = json.category;\r\n    this.amount = new MoneyAmount(Math.floor(json.integerAmount));\r\n    this.id = json.id || uuid.v4();\r\n    this.uid = json.uid;\r\n  }\r\n\r\n  toJson(): JsonTransaction {\r\n    return {\r\n      time: this.date.getTime(),\r\n      category: this.category,\r\n      comment: this.comment,\r\n      integerAmount: this.amount.integer,\r\n      id: this.id,\r\n      uid: this.uid,\r\n    };\r\n  }\r\n}\r\n","import * as datefns from \"date-fns\";\r\n\r\nexport function groupByDate<T>(\r\n  items: T[],\r\n  getDate: (t: T) => Date,\r\n  options?: { sort?: boolean }\r\n): { date: Date; items: T[] }[] {\r\n  // Function to extract a key from an item which has a date\r\n  function getKey(item: T): string {\r\n    const date = getDate(item);\r\n    return datefns.lightFormat(date, \"yyyy-MM-dd\");\r\n  }\r\n\r\n  // Get all items by their keys\r\n  const itemsByKey = items.reduce((res, item) => {\r\n    const key = getKey(item);\r\n    return {\r\n      ...res,\r\n      [key]: [...(res[key] ?? []), item],\r\n    };\r\n  }, {} as Record<string, T[]>);\r\n\r\n  // Map to array, where each key is mapped to a date\r\n  const result = Object.entries(itemsByKey).map((entry) => {\r\n    return {\r\n      date: datefns.startOfDay(new Date(entry[0])),\r\n      items: entry[1],\r\n    };\r\n  });\r\n\r\n  // Return result, optionally sorted\r\n  if (options?.sort) {\r\n    return result.sort((a, b) => {\r\n      return b.date.getTime() - a.date.getTime();\r\n    });\r\n  } else {\r\n    return result;\r\n  }\r\n}\r\n","export type DateCompareOperator = \">\" | \">=\" | \"==\" | \"<=\" | \"<\";\r\n\r\n/**\r\n * Utility function to compare two dates, where only the date is taken into\r\n * account, not the time.\r\n *\r\n * @param a  Left hand operator date\r\n * @param op Operator to specify which comparison to run\r\n * @param b  Right hand operator date\r\n */\r\nexport function compareDate(a: Date, op: DateCompareOperator, b: Date) {\r\n  // Serialize dates for easy comparison\r\n  const _a = serializeDate(a);\r\n  const _b = serializeDate(b);\r\n\r\n  switch (op) {\r\n    case \"<\":\r\n      return _a < _b;\r\n    case \"<=\":\r\n      return _a <= _b;\r\n    case \"==\":\r\n      return _a === _b;\r\n    case \">=\":\r\n      return _a >= _b;\r\n    case \">\":\r\n      return _a > _b;\r\n  }\r\n}\r\n\r\n/**\r\n * Helper function for above function to serialize dates, taking only into account\r\n * the date, month and year, not the time.\r\n *\r\n * @param date Date to serialize\r\n */\r\nfunction serializeDate(date: Date) {\r\n  return date.getFullYear() * 341 + date.getMonth() * 31 + date.getDate();\r\n}\r\n","import { computed, Computed } from \"easy-peasy\";\r\nimport { Transaction } from \"./transactions.class\";\r\nimport { MoneyAmount } from \"../../utils/MoneyAmount\";\r\nimport { groupByDate } from \"../../utils/groupByDate\";\r\nimport { StoreModel } from \"../../store\";\r\nimport { compareDate } from \"../../utils/compareDate\";\r\n\r\nexport interface FilteredTransactionsModel {\r\n  /**\r\n   * All user's current transactions after filterign\r\n   */\r\n  items: Computed<FilteredTransactionsModel, Transaction[], StoreModel>;\r\n\r\n  /**\r\n   * Filtered transactions grouped and sorted by dates\r\n   */\r\n  itemsByDates: Computed<\r\n    FilteredTransactionsModel,\r\n    { date: Date; items: Transaction[] }[],\r\n    StoreModel\r\n  >;\r\n\r\n  /**\r\n   * Filtered amount of transactions\r\n   */\r\n  count: Computed<FilteredTransactionsModel, number, StoreModel>;\r\n\r\n  /**\r\n   * Sums of filtered transactions\r\n   */\r\n  sums: Computed<\r\n    FilteredTransactionsModel,\r\n    {\r\n      all: MoneyAmount;\r\n      expenses: MoneyAmount;\r\n      incomes: MoneyAmount;\r\n    },\r\n    StoreModel\r\n  >;\r\n}\r\n\r\nexport const filteredTransactionsModel: FilteredTransactionsModel = {\r\n  items: computed(\r\n    [\r\n      (_, storeState) => storeState.transactions.items,\r\n      (_, storeState) => storeState.interval.startDate,\r\n      (_, storeState) => storeState.interval.endDate,\r\n    ],\r\n    (items, startDate, endDate) => {\r\n      return items.filter((item) => {\r\n        if (compareDate(item.date, \"<\", startDate)) return false;\r\n        if (compareDate(item.date, \">\", endDate)) return false;\r\n        return true;\r\n      });\r\n    }\r\n  ),\r\n\r\n  itemsByDates: computed(\r\n    [(_, storeState) => storeState.transactions.filtered.items],\r\n    (items) => {\r\n      return groupByDate(items, (_) => _.date, { sort: true });\r\n    }\r\n  ),\r\n\r\n  count: computed(\r\n    [(_, storeState) => storeState.transactions.filtered.items],\r\n    (items) => {\r\n      return items.length;\r\n    }\r\n  ),\r\n\r\n  sums: computed(\r\n    [(_, storeState) => storeState.transactions.filtered.items],\r\n    (items) => {\r\n      const incomes = items\r\n        .filter((_) => _.amount.integer > 0)\r\n        .reduce((sum, item) => sum + item.amount.integer, 0);\r\n      const expenses = items\r\n        .filter((_) => _.amount.integer < 0)\r\n        .reduce((sum, item) => sum + item.amount.integer, 0);\r\n      return {\r\n        all: new MoneyAmount(incomes + expenses),\r\n        incomes: new MoneyAmount(incomes),\r\n        expenses: new MoneyAmount(expenses),\r\n      };\r\n    }\r\n  ),\r\n};\r\n","import {\r\n  Action,\r\n  action,\r\n  Computed,\r\n  computed,\r\n  Thunk,\r\n  thunk,\r\n  ThunkOn,\r\n  thunkOn,\r\n} from \"easy-peasy\";\r\nimport { Transaction } from \"./transactions.class\";\r\nimport { JsonTransaction } from \"./transactions.json\";\r\nimport { TransactionService } from \"../../services/TransactionService\";\r\nimport { StoreModel, StoreInjections } from \"../../store\";\r\nimport { groupByDate } from \"../../utils/groupByDate\";\r\nimport { MoneyAmount } from \"../../utils/MoneyAmount\";\r\nimport {\r\n  filteredTransactionsModel,\r\n  FilteredTransactionsModel,\r\n} from \"./transactions.filtered.model\";\r\n\r\nexport interface TransactionsModel {\r\n  /**\r\n   * All user's current transactions\r\n   */\r\n  items: Transaction[];\r\n\r\n  /**\r\n   * Current transactions grouped and sorted by dates\r\n   */\r\n  itemsByDates: Computed<\r\n    TransactionsModel,\r\n    { date: Date; items: Transaction[] }[]\r\n  >;\r\n\r\n  /**\r\n   * Current amount of transactions\r\n   */\r\n  count: Computed<TransactionsModel, number>;\r\n\r\n  /**\r\n   * Sum of transactions\r\n   */\r\n  sums: Computed<\r\n    TransactionsModel,\r\n    {\r\n      all: MoneyAmount;\r\n      expenses: MoneyAmount;\r\n      incomes: MoneyAmount;\r\n    }\r\n  >;\r\n\r\n  /**\r\n   * Filtered properties (copies of the above properties using only\r\n   * filtered items)\r\n   */\r\n  filtered: FilteredTransactionsModel;\r\n\r\n  /**\r\n   * All different categories\r\n   */\r\n  categories: Computed<TransactionsModel, string[]>;\r\n\r\n  /**\r\n   * Fetch all transactions for user from server\r\n   */\r\n  getTransactions: Thunk<\r\n    TransactionsModel,\r\n    void,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<TransactionService[\"getTransactions\"]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by get transaction thunk to update get result to state\r\n   */\r\n  _getTransactions: Action<TransactionsModel, JsonTransaction[]>;\r\n\r\n  /**\r\n   * Post and update transaction to state\r\n   */\r\n  postTransaction: Thunk<\r\n    TransactionsModel,\r\n    Omit<JsonTransaction, \"id\" | \"uid\">,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<TransactionService[\"postTransaction\"]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by post transaction thunk to update post result to state\r\n   */\r\n  _postTransaction: Action<TransactionsModel, JsonTransaction>;\r\n\r\n  /**\r\n   * Delete and remove transaction from state\r\n   */\r\n  deleteTransaction: Thunk<\r\n    TransactionsModel,\r\n    string,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<TransactionService[\"deleteTransaction\"]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by delete transaction thunk to update delete result to state\r\n   */\r\n  _deleteTransaction: Action<TransactionsModel, string>;\r\n\r\n  /**\r\n   * Put and update transaction to state\r\n   */\r\n  putTransaction: Thunk<\r\n    TransactionsModel,\r\n    JsonTransaction,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<TransactionService[\"putTransaction\"]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by put transaction thunk to update put result to state\r\n   */\r\n  _putTransaction: Action<TransactionsModel, JsonTransaction>;\r\n\r\n  /**\r\n   * Patch and update transaction to state\r\n   */\r\n  patchTransaction: Thunk<\r\n    TransactionsModel,\r\n    JsonTransaction,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<TransactionService[\"patchTransaction\"]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by patch transaction thunk to update patch result to state\r\n   */\r\n  _patchTransaction: Action<TransactionsModel, JsonTransaction>;\r\n\r\n  /**\r\n   * Listening to auth changes\r\n   */\r\n  onAuthChanged: ThunkOn<TransactionsModel, any, StoreModel>;\r\n\r\n  _clearTransactions: Action<TransactionsModel, void>;\r\n}\r\n\r\nexport const transactionsModel: TransactionsModel = {\r\n  items: [],\r\n\r\n  itemsByDates: computed((state) => {\r\n    return groupByDate(state.items, (_) => _.date, { sort: true });\r\n  }),\r\n\r\n  count: computed((state) => state.items.length),\r\n\r\n  sums: computed((state) => {\r\n    const incomes = state.items\r\n      .filter((_) => _.amount.integer > 0)\r\n      .reduce((sum, item) => sum + item.amount.integer, 0);\r\n    const expenses = state.items\r\n      .filter((_) => _.amount.integer < 0)\r\n      .reduce((sum, item) => sum + item.amount.integer, 0);\r\n    return {\r\n      all: new MoneyAmount(incomes + expenses),\r\n      incomes: new MoneyAmount(incomes),\r\n      expenses: new MoneyAmount(expenses),\r\n    };\r\n  }),\r\n\r\n  filtered: filteredTransactionsModel,\r\n\r\n  categories: computed((state) =>\r\n    state.items.map((_) => _.category).filter((c, i, a) => a.indexOf(c) === i)\r\n  ),\r\n\r\n  getTransactions: thunk(async (actions, payload, { injections }) => {\r\n    const result = await injections.transactionService.getTransactions();\r\n    result.onSuccess((json) => actions._getTransactions(json));\r\n    return result;\r\n  }),\r\n\r\n  _getTransactions: action((state, jsons) => {\r\n    state.items = jsons.map((json) => new Transaction(json));\r\n  }),\r\n\r\n  postTransaction: thunk(async (actions, json, { injections }) => {\r\n    const result = await injections.transactionService.postTransaction(json);\r\n    result.onSuccess((json) => actions._postTransaction(json));\r\n    return result;\r\n  }),\r\n\r\n  _postTransaction: action((state, json) => {\r\n    state.items.push(new Transaction(json));\r\n  }),\r\n\r\n  deleteTransaction: thunk(async (actions, id, { injections }) => {\r\n    const result = await injections.transactionService.deleteTransaction(id);\r\n    result.onSuccess(() => actions.deleteTransaction(id));\r\n    return result;\r\n  }),\r\n\r\n  _deleteTransaction: action((state, id) => {\r\n    state.items = state.items.filter((item) => item.id !== id);\r\n  }),\r\n\r\n  putTransaction: thunk(async (actions, json, { injections }) => {\r\n    const result = await injections.transactionService.putTransaction(json);\r\n    result.onSuccess((json) => actions._putTransaction(json));\r\n    return result;\r\n  }),\r\n\r\n  _putTransaction: action((state, json) => {\r\n    state.items = state.items.map((item) =>\r\n      item.id === json.id ? new Transaction(json) : item\r\n    );\r\n  }),\r\n\r\n  patchTransaction: thunk(async (actions, json, { injections }) => {\r\n    const result = await injections.transactionService.patchTransaction(json);\r\n    result.onSuccess((json) => actions._patchTransaction(json));\r\n    return result;\r\n  }),\r\n\r\n  _patchTransaction: action((state, json) => {\r\n    state.items = state.items.map((item) =>\r\n      item.id === json.id ? new Transaction(json) : item\r\n    );\r\n  }),\r\n\r\n  onAuthChanged: thunkOn(\r\n    (_, store) => [store.auth.logout, store.auth._login],\r\n    (actions, target) => {\r\n      const [loggedOut, loggedIn] = target.resolvedTargets;\r\n      switch (target.type) {\r\n        case loggedOut:\r\n          actions._clearTransactions();\r\n          break;\r\n        case loggedIn:\r\n          actions.getTransactions();\r\n          break;\r\n      }\r\n    }\r\n  ),\r\n\r\n  _clearTransactions: action((state) => {\r\n    state.items = [];\r\n  }),\r\n};\r\n","import { Action, action } from \"easy-peasy\";\r\n\r\nexport type TransactionFormModel = {\r\n  isOpen: boolean;\r\n\r\n  setOpen: Action<TransactionFormModel, boolean>;\r\n\r\n  open: Action<TransactionFormModel, void>;\r\n\r\n  close: Action<TransactionFormModel, void>;\r\n};\r\n\r\nexport const transactionFormModel: TransactionFormModel = {\r\n  isOpen: false,\r\n\r\n  setOpen: action((state, boolean) => {\r\n    state.isOpen = boolean;\r\n  }),\r\n\r\n  open: action((state) => {\r\n    state.isOpen = true;\r\n  }),\r\n\r\n  close: action((state) => {\r\n    state.isOpen = false;\r\n  }),\r\n};\r\n","import { Action, action, Computed, computed } from \"easy-peasy\";\r\nimport * as datefns from \"date-fns\";\r\nimport { compareDate } from \"../../utils/compareDate\";\r\n\r\nexport type IntervalModel = {\r\n  /**\r\n   * Date filter start limit.\r\n   *\r\n   * All transactions with the same or later date will pass this filter.\r\n   * The time of day is not taken into account while comparing dates.\r\n   *\r\n   * Defaults to start date of current month.\r\n   */\r\n  startDate: Date;\r\n\r\n  /**\r\n   * Date filter end limit.\r\n   *\r\n   * All transactions with the same or earlier date will pass this filter.\r\n   * The time of day is not taken into account while comparing dates.\r\n   *\r\n   * Defaults to end date of current month.\r\n   */\r\n  endDate: Date;\r\n\r\n  /**\r\n   * Action to manually specify the start date filter\r\n   */\r\n  setStartDate: Action<IntervalModel, Date>;\r\n\r\n  /**\r\n   * Action to manually specify the end date filter\r\n   */\r\n  setEndDate: Action<IntervalModel, Date>;\r\n\r\n  /**\r\n   * Action to manually specify start and end dates for interval simultaneously\r\n   */\r\n  setInterval: Action<IntervalModel, { startDate: Date; endDate: Date }>;\r\n\r\n  /**\r\n   * Set previous month as interval. Uses the start date's month to figure\r\n   * out the previous month in case the start and end date are in different\r\n   * months.\r\n   */\r\n  setPreviousMonthAsDateInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Set next month as interval. Uses the end date's month to figure out\r\n   * the next month in case the start and end date are in different months.\r\n   */\r\n  setNextMonthAsDateInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Is the current date interval a single full month\r\n   */\r\n  dateIntervalIsMonth: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * The current date interval month string or undefined if date interval is not a\r\n   * single full month\r\n   */\r\n  dateIntervalMonthString: Computed<IntervalModel, string | undefined>;\r\n};\r\n\r\nexport const intervalModel: IntervalModel = {\r\n  startDate: datefns.startOfMonth(new Date()),\r\n\r\n  endDate: datefns.endOfMonth(new Date()),\r\n\r\n  setStartDate: action((state, date) => {\r\n    if (compareDate(date, \">\", state.endDate)) {\r\n      throw new Error(\"Start date cannot be after end date\");\r\n    } else {\r\n      state.startDate = date;\r\n    }\r\n  }),\r\n\r\n  setEndDate: action((state, date) => {\r\n    if (compareDate(date, \"<\", state.startDate)) {\r\n      throw new Error(\"End date cannot be before start date\");\r\n    } else {\r\n      state.endDate = date;\r\n    }\r\n  }),\r\n\r\n  setInterval: action((state, dates) => {\r\n    if (compareDate(dates.startDate, \">\", dates.endDate)) {\r\n      throw new Error(\"End date cannot be before start date\");\r\n    } else {\r\n      state.startDate = dates.startDate;\r\n      state.endDate = dates.endDate;\r\n    }\r\n  }),\r\n\r\n  setPreviousMonthAsDateInterval: action((state) => {\r\n    const startOfActiveMonth = datefns.startOfMonth(state.startDate);\r\n    const dateInPreviousMonth = datefns.subDays(startOfActiveMonth, 1);\r\n    state.startDate = datefns.startOfMonth(dateInPreviousMonth);\r\n    state.endDate = datefns.endOfMonth(dateInPreviousMonth);\r\n  }),\r\n\r\n  setNextMonthAsDateInterval: action((state) => {\r\n    const endOfActiveMonth = datefns.endOfMonth(state.endDate);\r\n    const dateInNextMonth = datefns.addDays(endOfActiveMonth, 1);\r\n    state.startDate = datefns.startOfMonth(dateInNextMonth);\r\n    state.endDate = datefns.endOfMonth(dateInNextMonth);\r\n  }),\r\n\r\n  dateIntervalIsMonth: computed((state) => {\r\n    return (\r\n      datefns.isSameMonth(state.startDate, state.endDate) &&\r\n      datefns.isFirstDayOfMonth(state.startDate) &&\r\n      datefns.isLastDayOfMonth(state.endDate)\r\n    );\r\n  }),\r\n\r\n  dateIntervalMonthString: computed((state) => {\r\n    if (state.dateIntervalIsMonth) {\r\n      const month = state.startDate.toLocaleDateString(\"en-EN\", {\r\n        month: \"long\",\r\n      });\r\n      const year = state.startDate.toLocaleDateString(\"en-EN\", {\r\n        year: \"numeric\",\r\n      });\r\n      return `${month}, ${year}`;\r\n    }\r\n  }),\r\n};\r\n","export class Config {\r\n  static get API_URL() {\r\n    const env = process.env.NODE_ENV;\r\n    if (!env || env === \"development\") {\r\n      return \"http://localhost:4000\";\r\n    } else if (env === \"test\") {\r\n      return \"http://localhost:4001\";\r\n    } else {\r\n      return \"https://expenceapp.herokuapp.com\";\r\n    }\r\n  }\r\n}\r\n","import { AxiosError } from \"axios\";\r\n\r\n/**\r\n * Defines properties of a problem\r\n */\r\nexport type IProblem<T = undefined> = {\r\n  /**\r\n   * Message property defines a human readable definition of the error message.\r\n   */\r\n  message: string;\r\n\r\n  /**\r\n   * Status defines a status code for the problem.\r\n   *\r\n   * Codes\r\n   * - `10-19` Local error\r\n   * - `20-29` Local network and service errors\r\n   * - - `21` Network error or could not reach server\r\n   * - - `22` Could not formulate request\r\n   * - - `23` Invalid data received from server\r\n   * - `100 - 599` Reserved for corresponding HTTP codes\r\n   */\r\n  status: number;\r\n\r\n  /**\r\n   * Code defines a stringified code of the problem for better error handling\r\n   * and responses. Use kebab-case.\r\n   *\r\n   * Codes are defined as follow\r\n   *\r\n   * `domain/{subdomains/.../}definition`\r\n   *\r\n   * Following codes are examples of valid codes\r\n   *\r\n   * - `auth/unauthenticated`\r\n   * - `data/already-exists`\r\n   */\r\n  code: string;\r\n\r\n  /**\r\n   * Define any extra data that is passed to the problem.\r\n   */\r\n  data: T;\r\n};\r\n\r\nexport class Problem<T extends object = {}> implements IProblem<T> {\r\n  message: string;\r\n\r\n  status: number;\r\n\r\n  code: string;\r\n\r\n  data: T;\r\n\r\n  /**\r\n   * Construct a problem from a problem object\r\n   */\r\n  constructor(problem: IProblem<T>) {\r\n    this.message = problem.message;\r\n    this.status = problem.status;\r\n    this.code = problem.code;\r\n    this.data = problem.data;\r\n  }\r\n\r\n  /**\r\n   * Automatically generate problem from axios error\r\n   */\r\n  static fromAxiosError(axiosError: AxiosError): Problem<{ errors?: object }> {\r\n    if (axiosError.response) {\r\n      const error = axiosError.response.data;\r\n      return new Problem({\r\n        status: axiosError.response.status,\r\n        message:\r\n          error?.message && typeof error.message === \"string\"\r\n            ? error.message\r\n            : \"Unknown server error\",\r\n        code:\r\n          error?.code && typeof error.code === \"string\"\r\n            ? error.code\r\n            : \"server/unknown\",\r\n        data:\r\n          error?.errors && typeof error.errors === \"object\"\r\n            ? { errors: error.errors }\r\n            : {},\r\n      });\r\n    } else if (axiosError.request) {\r\n      return new Problem({\r\n        status: 21,\r\n        code: \"server/unavailable\",\r\n        message: \"Could not reach server\",\r\n        data: {},\r\n      });\r\n    } else {\r\n      return new Problem({\r\n        status: 22,\r\n        code: \"server/failure-formulating-request\",\r\n        message: \"Could not formulate request to server\",\r\n        data: {},\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { IProblem, Problem } from \"./Problem\";\r\n\r\nexport type Result<T = any, E = any> = Success<T, E> | Failure<T, E>;\r\n\r\nexport function promiseToResult<T = any>(\r\n  promise: Promise<T>\r\n): Promise<Result<T>> {\r\n  return promise\r\n    .then((value) => new Success(value))\r\n    .catch((value) => new Failure(value));\r\n}\r\n\r\ninterface IResult<T = any, E = any> {\r\n  /**\r\n   * The current value, either the success or failure value\r\n   */\r\n  value: T | E;\r\n\r\n  /**\r\n   * Currently stored value, whether it is the success value or failure value\r\n   */\r\n  getOr(fallbackValue: T): T;\r\n\r\n  /**\r\n   * Check if this ``Result`` is a success\r\n   */\r\n  isSuccess(): this is Success<T, E>;\r\n\r\n  /**\r\n   * Check if this ``Result`` is a failure\r\n   */\r\n  isFailure(): this is Failure<T, E>;\r\n\r\n  /**\r\n   * If and when the ``Result`` succeeds, this function will map the ``Success``\r\n   * to another ``Result`` (potentially failing the value) or use the existing\r\n   * ``Failure`` if the original ``Result`` failed.\r\n   */\r\n  map<U = T, R = E>(fn: (value: T) => Result<U, E | R>): Result<U, E | R>;\r\n\r\n  /**\r\n   * If the ``Result`` succeeds, the provided callback function is ran with the\r\n   * success value. This is an alternative to saying\r\n   *\r\n   * ```\r\n   * if (result.isSuccess()) {\r\n   *   callback(result.value)\r\n   * }\r\n   * ```\r\n   */\r\n  onSuccess(callback: (value: T) => void): void;\r\n\r\n  /**\r\n   * If the ``Result`` fails, the provided callback function is ran with the\r\n   * failure value. This is an alternative to saying\r\n   *\r\n   * ```\r\n   * if (result.isFailure()) {\r\n   *   callback(result.value)\r\n   * }\r\n   * ```\r\n   */\r\n  onFailure(callback: (value: E) => void): void;\r\n\r\n  /**\r\n   * If and when the ``Result`` succeeds, maps the success value to a new value\r\n   * using the given function.\r\n   */\r\n  mapSuccess<U = T>(fn: (value: T) => U): Result<U, E>;\r\n\r\n  /**\r\n   * If and when the ``Result`` fails, maps the failure value to a new value\r\n   * using the given function.\r\n   */\r\n  mapFailure<U = E>(fn: (value: E) => U): Result<T, U>;\r\n\r\n  /**\r\n   * If and when the ``Result`` succeeds, this function will map the ``Success``\r\n   * to either the given ``Success`` or the given ``Failure`` based on whether\r\n   * the given function returns true with the current success value. If the\r\n   * original ``Result`` failed, returns with the original ``Failure``.\r\n   */\r\n  transform<U = T, R = E>(\r\n    fn: (value: T) => boolean,\r\n    success: (value: T) => Success<U, any>,\r\n    failure: (value: T) => Failure<any, R>\r\n  ): Result<U, E | R>;\r\n\r\n  /**\r\n   * In and when the ``Result`` succeeds, this function will ensure the type of\r\n   * the success value and return a ``Success`` if the type of the value is\r\n   * correct, else it will return a new ``Failure`` as specified. If the\r\n   * original ``Result`` failed, returns with the original ``Failure``.\r\n   */\r\n  ensureType<U = T, R = E, D = any>(\r\n    value: (value: T) => D,\r\n    typeGuard: (value: any) => value is U,\r\n    failure: (value: D) => Result<U, R>\r\n  ): Result<U, E | R>;\r\n}\r\n\r\n/**\r\n * Success implementation\r\n */\r\nexport class Success<T = any, E = any> implements IResult<T, E> {\r\n  value: T;\r\n\r\n  constructor(value: T) {\r\n    this.value = value;\r\n  }\r\n\r\n  getOr(fallbackValue: T): T {\r\n    return this.value;\r\n  }\r\n\r\n  isSuccess(): this is Success<T, E> {\r\n    return true;\r\n  }\r\n\r\n  isFailure(): this is Failure<T, E> {\r\n    return false;\r\n  }\r\n\r\n  onSuccess(callback: (value: T) => void): void {\r\n    callback(this.value);\r\n  }\r\n\r\n  onFailure(callback: (value: E) => void): void {}\r\n\r\n  map<U = T, E2 = E>(fn: (value: T) => Result<U, E | E2>): Result<U, E | E2> {\r\n    return fn(this.value);\r\n  }\r\n\r\n  mapSuccess<U = T>(fn: (value: T) => U): Result<U, E> {\r\n    return new Success(fn(this.value));\r\n  }\r\n\r\n  mapFailure<U = E>(fn: (value: E) => U): Result<T, U> {\r\n    return new Success(this.value);\r\n  }\r\n\r\n  transform<U = T, R = E>(\r\n    fn: (value: T) => boolean,\r\n    success: (value: T) => Success<U, any>,\r\n    failure: (value: T) => Failure<any, R>\r\n  ): Result<U, E | R> {\r\n    return fn(this.value)\r\n      ? new Success<U, E | R>(success(this.value).value)\r\n      : new Failure<U, E | R>(failure(this.value).value);\r\n  }\r\n\r\n  ensureType<U = T, R = E, D = any>(\r\n    value: (value: T) => D,\r\n    typeGuard: (value: any) => value is U,\r\n    failure: (value: D) => Result<U, R>\r\n  ): Result<U, E | R> {\r\n    const v = value(this.value);\r\n    if (typeGuard(v)) {\r\n      return new Success<U, E | R>(v);\r\n    } else {\r\n      return failure(v);\r\n    }\r\n  }\r\n\r\n  static From<R = any, U = any>(value: U) {\r\n    return new Success<U, R>(value);\r\n  }\r\n\r\n  static Empty<R = any>() {\r\n    return new Success<undefined, R>(undefined);\r\n  }\r\n}\r\n\r\n/**\r\n * Failure implementation\r\n */\r\nexport class Failure<T = any, E = any> implements IResult<T, E> {\r\n  value: E;\r\n\r\n  constructor(value: E) {\r\n    this.value = value;\r\n  }\r\n\r\n  getOr(fallbackValue: T): T {\r\n    return fallbackValue;\r\n  }\r\n\r\n  onSuccess(callback: (value: T) => void): void {}\r\n\r\n  onFailure(callback: (value: E) => void): void {\r\n    callback(this.value);\r\n  }\r\n\r\n  isSuccess(): this is Success<T, E> {\r\n    return false;\r\n  }\r\n\r\n  isFailure(): this is Failure<T, E> {\r\n    return true;\r\n  }\r\n\r\n  map<U = T, E2 = E>(fn: (value: T) => Result<U, E | E2>): Result<U, E | E2> {\r\n    return new Failure<U, E>(this.value);\r\n  }\r\n\r\n  mapSuccess<U = T>(fn: (value: T) => U): Result<U, E> {\r\n    return new Failure(this.value);\r\n  }\r\n\r\n  mapFailure<U = E>(fn: (value: E) => U): Result<T, U> {\r\n    return new Failure(fn(this.value));\r\n  }\r\n\r\n  transform<U = T, R = E>(\r\n    fn: (value: T) => boolean,\r\n    success: (value: T) => Success<U, any>,\r\n    failure: (value: T) => Failure<any, R>\r\n  ): Result<U, E | R> {\r\n    return new Failure<U, E | R>(this.value);\r\n  }\r\n\r\n  ensureType<U = T, R = E, D = any>(\r\n    value: (value: T) => D,\r\n    typeGuard: (value: any) => value is U,\r\n    failure: (value: D) => Result<U, R>\r\n  ): Result<U, E | R> {\r\n    return new Failure<U, E | R>(this.value);\r\n  }\r\n\r\n  static Problem<U = any, R extends object = {}>(problem: IProblem<R>) {\r\n    return new Failure<U, Problem<R>>(new Problem(problem));\r\n  }\r\n}\r\n","import Axios, { AxiosInstance, AxiosRequestConfig, AxiosError } from \"axios\";\r\nimport { Config } from \"../config\";\r\nimport { store } from \"../store\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { promiseToResult, Result } from \"../utils/Result\";\r\nimport { Problem } from \"../utils/Problem\";\r\n\r\nexport type ServiceMethodResponse<T = void> = Result<\r\n  T,\r\n  | Problem<{\r\n      errors?: object | undefined;\r\n    }>\r\n  | Problem<any>\r\n>;\r\n\r\nexport abstract class ServiceBase {\r\n  protected baseURL: string;\r\n  protected axios: AxiosInstance;\r\n\r\n  /**\r\n   * Set up base URL and axios instance for service\r\n   */\r\n  constructor() {\r\n    this.baseURL = `${Config.API_URL}/api`;\r\n    this.axios = Axios.create({ baseURL: this.baseURL, withCredentials: true });\r\n  }\r\n\r\n  /**\r\n   * Construct endpoint from path, base URL already handled\r\n   */\r\n  protected endpoint(path: string) {\r\n    return `${this.baseURL}${path}`;\r\n  }\r\n\r\n  /**\r\n   * Ensure access token is valid\r\n   */\r\n  protected isAccessTokenValid() {\r\n    const token = store.getState().auth.accessToken;\r\n    if (!token) return false;\r\n    try {\r\n      const payload = jwt.decode(token) as any;\r\n      const expiresAt = Number(payload?.exp || 0) * 1000;\r\n      const expirationBuffer = 5000; // Fetch new access token 30 seconds before expiration\r\n      const tokenIsValid = Date.now() < expiresAt - expirationBuffer;\r\n      return tokenIsValid;\r\n    } catch (error) {\r\n      console.warn(\"Error occured while checking access token\", error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempt refresh access token function\r\n   */\r\n  protected async attemptRefreshAccessToken(force: boolean = false) {\r\n    const accessTokenIsValid = this.isAccessTokenValid();\r\n    if (!accessTokenIsValid || force) {\r\n      const url = this.endpoint(\"/auth/refresh_token\");\r\n      try {\r\n        const result = await this.axios.get<string>(url);\r\n        const accessToken = result.data;\r\n        store.getActions().auth._setAccessToken(accessToken);\r\n      } catch (e) {\r\n        if (store.getState().auth.accessToken) {\r\n          store.getActions().auth.logout();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Before request hook\r\n   */\r\n  protected async onBeforeRequest() {\r\n    await this.attemptRefreshAccessToken();\r\n  }\r\n\r\n  /**\r\n   * Gets basic axios config\r\n   */\r\n  protected getConfig(\r\n    override?: AxiosRequestConfig | undefined\r\n  ): AxiosRequestConfig {\r\n    const accessToken = store.getState().auth.accessToken;\r\n\r\n    // Construct request headers\r\n    const headers = { ...override?.headers };\r\n    if (accessToken) {\r\n      headers.Authorization = `bearer ${accessToken}`;\r\n    }\r\n\r\n    // Override config with headers\r\n    return {\r\n      ...override,\r\n      headers,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Run requests with hooks and error handling\r\n   *\r\n   * @param requestFunction Request creator function\r\n   */\r\n  protected async handleRequest<T>(\r\n    path: string,\r\n    config: AxiosRequestConfig | undefined,\r\n    requestFunction: (url: string, options: AxiosRequestConfig) => Promise<T>\r\n  ) {\r\n    /**\r\n     * Run hooks\r\n     */\r\n    await this.onBeforeRequest();\r\n\r\n    /**\r\n     * Run request function to promise\r\n     */\r\n    const url = this.endpoint(path);\r\n    const options = this.getConfig(config);\r\n    const promise = requestFunction(url, options);\r\n\r\n    /**\r\n     * Create result from promise\r\n     */\r\n    const result = await promiseToResult(promise);\r\n\r\n    /**\r\n     * Map failures to Problems, automatically created from failures\r\n     */\r\n    return result.mapFailure((failureValue) => {\r\n      return Problem.fromAxiosError(failureValue as AxiosError);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed GET request wrapper with hooks\r\n   */\r\n  protected async get<ResponseData = any>(\r\n    path: string,\r\n    config?: AxiosRequestConfig | undefined\r\n  ) {\r\n    return this.handleRequest(path, config, (url, options) => {\r\n      return this.axios.get<ResponseData>(url, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed POST request wrapper with hooks\r\n   */\r\n  protected async post<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    return this.handleRequest(path, config, (url, options) => {\r\n      return this.axios.post<ResponseData>(url, data, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed DELETE request wrapper with hooks\r\n   */\r\n  protected async delete<ResponseData = any>(\r\n    path: string,\r\n    config?: AxiosRequestConfig | undefined\r\n  ) {\r\n    return this.handleRequest(path, config, (url, options) => {\r\n      return this.axios.delete<ResponseData>(url, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed PUT request wrapper with hooks\r\n   */\r\n  protected async put<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    return this.handleRequest(path, config, (url, options) => {\r\n      return this.axios.put<ResponseData>(url, data, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed PATCH request wrapper with hooks\r\n   */\r\n  protected async patch<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    return this.handleRequest(path, config, (url, options) => {\r\n      return this.axios.patch<ResponseData>(url, data, options);\r\n    });\r\n  }\r\n}\r\n","import { ServiceBase, ServiceMethodResponse } from \"./ServiceBase\";\r\nimport { isJsonAuth, JsonAuth } from \"../models/authentication/auth.json\";\r\nimport { Failure, Success } from \"../utils/Result\";\r\n\r\nexport class AuthService extends ServiceBase {\r\n  /**\r\n   * Fetches the user's profile if the user is signed in.\r\n   */\r\n  async getProfile(): Promise<ServiceMethodResponse<JsonAuth>> {\r\n    const result = await this.get(\"/auth/profile\");\r\n\r\n    return result.ensureType(\r\n      (response) => response.data,\r\n      isJsonAuth,\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"auth/profile/invalid-response\",\r\n          message: \"Invalid profile response from server\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Registers and logs in a new user with the given credentials.\r\n   */\r\n  async registerWithEmailAndPassword(credentials: {\r\n    email: string;\r\n    password: string;\r\n  }): Promise<ServiceMethodResponse> {\r\n    const result = await this.post(\"/auth/register\", credentials);\r\n\r\n    return result.transform(\r\n      (response) => response.status === 200,\r\n      () => Success.Empty(),\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"auth/register/invalid-response\",\r\n          message: \"Invalid registration response from server\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Logs the user in with the given credentials.\r\n   */\r\n  async loginWithEmailAndPassword(credentials: {\r\n    email: string;\r\n    password: string;\r\n  }): Promise<ServiceMethodResponse> {\r\n    const result = await this.post(\"/auth/login\", credentials);\r\n\r\n    return result.transform(\r\n      (response) => response.status === 200,\r\n      () => Success.Empty(),\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"auth/login/invalid-response\",\r\n          message: \"Invalid login response from server\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Sends a forgot password email to the given email address.\r\n   */\r\n  async forgotPassword(credentials: {\r\n    email: string;\r\n  }): Promise<ServiceMethodResponse> {\r\n    const result = await this.post(\"/auth/forgot_password\", credentials);\r\n\r\n    return result.transform(\r\n      (response) => response.status === 200,\r\n      () => Success.Empty(),\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"auth/forgotpassword/invalid-response\",\r\n          message: \"Invalid forgot password response from server\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Logs the user in with a Google account. Redirects the user.\r\n   */\r\n  loginWithGoogle() {\r\n    window.location.href = this.endpoint(\"/auth/google\");\r\n  }\r\n\r\n  /**\r\n   * Logs the user out. Redirects the user.\r\n   */\r\n  logout() {\r\n    window.location.href = this.endpoint(\"/auth/logout\");\r\n  }\r\n}\r\n","import { object, string, number, ObjectSchema } from \"yup\";\r\n\r\nconst id = () => string();\r\nconst uid = () => string();\r\nconst integerAmount = () => number().integer();\r\nconst time = () => number().positive().integer();\r\nconst category = () => string().min(1);\r\nconst comment = () => string();\r\n\r\nexport type JsonTransaction = {\r\n  id: string;\r\n  uid: string;\r\n  time: number;\r\n  category: string;\r\n  integerAmount: number;\r\n  comment?: string | undefined;\r\n};\r\n\r\nexport const jsonTransactionSchema: ObjectSchema<JsonTransaction> = object({\r\n  id: id().required(),\r\n  uid: uid().required(),\r\n  time: time().required(),\r\n  category: category().required(),\r\n  integerAmount: integerAmount().required(),\r\n  comment: comment(),\r\n}).required();\r\n\r\nexport function isJsonTransaction(arg: any): arg is JsonTransaction {\r\n  try {\r\n    jsonTransactionSchema.validateSync(arg);\r\n    return true;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function isJsonTransactionArray(arg: any): arg is JsonTransaction[] {\r\n  return Array.isArray(arg) && arg.every(isJsonTransaction);\r\n}\r\n","import { ServiceBase } from \"./ServiceBase\";\r\nimport {\r\n  JsonTransaction,\r\n  isJsonTransactionArray,\r\n  isJsonTransaction,\r\n} from \"../models/transactions/transactions.json\";\r\nimport { Failure, Success } from \"../utils/Result\";\r\n\r\nexport class TransactionService extends ServiceBase {\r\n  async getTransactions() {\r\n    const result = await this.get(\"/transactions\");\r\n\r\n    return result.ensureType(\r\n      (response) => response.data,\r\n      isJsonTransactionArray,\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"transactions/get/invalid-response\",\r\n          message: \"Could not get transactions, received invalid response.\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  async postTransaction(json: Omit<JsonTransaction, \"id\" | \"uid\">) {\r\n    const result = await this.post(\"/transactions\", json);\r\n\r\n    return result.ensureType(\r\n      (response) => response.data,\r\n      isJsonTransaction,\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"transactions/post/invalid-response\",\r\n          message: \"Could not post transaction, received invalid response.\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  async deleteTransaction(id: string) {\r\n    const result = await this.delete(`/transactions/${id}`);\r\n\r\n    return result.transform(\r\n      (response) => response.status === 200,\r\n      () => Success.Empty(),\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"transactions/delete/invalid-response\",\r\n          message: \"Could not delete transaction, received invalid response.\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  async putTransaction(json: JsonTransaction) {\r\n    const result = await this.put(`/transactions/${json.id}`, json);\r\n\r\n    return result.ensureType(\r\n      (response) => response.data,\r\n      isJsonTransaction,\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"transactions/put/invalid-response\",\r\n          message: \"Could not put transaction, received invalid response.\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  async patchTransaction(json: JsonTransaction) {\r\n    const result = await this.patch(`/transactions/${json.id}`, json);\r\n\r\n    return result.ensureType(\r\n      (response) => response.data,\r\n      isJsonTransaction,\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"transactions/patch/invalid-response\",\r\n          message: \"Could not patch transaction, received invalid response.\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n}\r\n","import { createStore, createTypedHooks } from \"easy-peasy\";\r\nimport { AuthModel, authModel } from \"./models/authentication/auth.model\";\r\nimport {\r\n  TransactionsModel,\r\n  transactionsModel,\r\n} from \"./models/transactions/transactions.model\";\r\nimport {\r\n  TransactionFormModel,\r\n  transactionFormModel,\r\n} from \"./models/transactionForm/transactionForm.model\";\r\nimport { intervalModel, IntervalModel } from \"./models/interval/interval.model\";\r\nimport { AuthService } from \"./services/AuthService\";\r\nimport { TransactionService } from \"./services/TransactionService\";\r\n\r\nexport interface StoreModel {\r\n  transactions: TransactionsModel;\r\n  transactionForm: TransactionFormModel;\r\n  interval: IntervalModel;\r\n  auth: AuthModel;\r\n}\r\n\r\nconst storeModel: StoreModel = {\r\n  transactions: transactionsModel,\r\n  interval: intervalModel,\r\n  transactionForm: transactionFormModel,\r\n  auth: authModel,\r\n};\r\n\r\nexport interface StoreInjections {\r\n  authService: AuthService;\r\n  transactionService: TransactionService;\r\n}\r\n\r\nexport const store = createStore(storeModel, {\r\n  injections: {\r\n    authService: new AuthService(),\r\n    transactionService: new TransactionService(),\r\n  },\r\n});\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).store = store;\r\n}\r\n\r\nexport const typedHooks = createTypedHooks<StoreModel>();\r\n\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;\r\nexport const useStore = typedHooks.useStore;\r\n","import { routes } from \"../Routes\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type RouteSelector = (r: typeof routes) => string;\r\n\r\nexport function useRedirect() {\r\n  const history = useHistory();\r\n  return (path: string | RouteSelector) =>\r\n    history.push(typeof path === \"string\" ? path : path(routes));\r\n}\r\n","import React, { useState } from 'react';\r\nimport { LoginView } from './LoginView';\r\nimport * as yup from \"yup\"\r\nimport { useStoreActions } from '../../store';\r\nimport { useRedirect } from '../../hooks/useRedirect';\r\n\r\nexport const loginValidationSchema = yup.object({\r\n\temail: yup.string().defined().min(3).max(255).email(),\r\n\tpassword: yup.string().defined().min(3).max(255),\r\n}).defined()\r\n\r\nexport type LoginFormType = yup.InferType<typeof loginValidationSchema>\r\n\r\nexport const Login: React.FC<{}> = () => {\r\n\r\n\tconst [error, setError] = useState<string>()\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst loginWithGoogle = useStoreActions(_ => _.auth.loginWithGoogle)\r\n\tconst loginWithEmailPassword = useStoreActions(_ => _.auth.loginWithEmailPassword)\r\n\r\n\tasync function handleSubmit(values: LoginFormType) {\r\n\t\tsetError(undefined)\r\n\t\tconst result = await loginWithEmailPassword(values)\r\n\t\tresult.onSuccess(() => redirect(routes => routes.dashboard))\r\n\t\tresult.onFailure(failure => {\r\n\t\t\tswitch (failure.code) {\r\n\t\t\t\tcase \"data/invalid-request-data\":\r\n\t\t\t\t\tsetError(\"Invalid email or password.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/invalid-credentials\":\r\n\t\t\t\t\tsetError(\"Wrong password or the user does not have a password.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/user-not-found\":\r\n\t\t\t\t\tsetError(\"No user exists with that email.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"server/unavailable\":\r\n\t\t\t\t\tsetError(\"Could not contact server. Try again later.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn(\"Uncaught error code in login:\", failure)\r\n\t\t\t\t\tsetError(\"An error occured while logging in. Try again.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tasync function handleGoogleSubmit() {\r\n\t\tloginWithGoogle()\r\n\t}\r\n\r\n\tasync function handleForgotPassword() {\r\n\t\tredirect(_ => _.forgotPassword)\r\n\t}\r\n\r\n\tasync function handleCreateAccount() {\r\n\t\tredirect(_ => _.register)\r\n\t}\r\n\r\n\treturn <LoginView {...{\r\n\t\thandleGoogleSubmit,\r\n\t\thandleSubmit,\r\n\t\thandleForgotPassword,\r\n\t\thandleCreateAccount,\r\n\t\terror,\r\n\t}} />\r\n}","import \"./Register.scss\"\r\nimport React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { registerValidationSchema, RegisterFormType } from './RegisterController';\r\nimport { Text } from \"../../components/Text/Text\";\r\nimport { yupResolver } from '@hookform/resolvers';\r\nimport { TextField, Button, Divider, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport {\r\n\tEmail as EmailIcon,\r\n\tVisibility as PasswordVisibleIcon,\r\n\tVisibilityOff as PasswordInvisibleIcon,\r\n} from \"@material-ui/icons\";\r\n\r\n\r\nexport type RegisterViewProps = {\r\n\thandleSubmit(values: RegisterFormType): Promise<void>;\r\n\thandleLogin(): Promise<void>;\r\n\thandleGoogleSubmit(): Promise<void>;\r\n\terror?: string;\r\n}\r\n\r\nexport const RegisterView: React.FC<RegisterViewProps> = (props) => {\r\n\r\n\t/**\r\n\t * Password visible state\r\n\t */\r\n\tconst [passwordVisible, setPasswordVisible] = useState(false)\r\n\r\n\t/**\r\n\t * React hook form\r\n\t */\r\n\tconst { register, handleSubmit, errors, formState } = useForm<RegisterFormType>({\r\n\t\tresolver: yupResolver(registerValidationSchema),\r\n\t})\r\n\r\n\t/**\r\n\t * Email and password error shorthands for react hook form\r\n\t */\r\n\tconst emailError = formState.touched.email && errors.email?.message\r\n\tconst passwordError = formState.touched.password && errors.password?.message\r\n\r\n\treturn <div className=\"Register AuthView\">\r\n\r\n\t\t<div className=\"container\">\r\n\r\n\t\t\t<header>\r\n\r\n\t\t\t\t<Text.Header.H5 weight=\"bold\" color=\"white\">\r\n\t\t\t\t\t{\"Create account\"}\r\n\t\t\t\t</Text.Header.H5>\r\n\r\n\t\t\t</header>\r\n\r\n\t\t\t<div className=\"content\">\r\n\r\n\t\t\t\t<form noValidate onSubmit={handleSubmit(props.handleSubmit)}>\r\n\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"register-email\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tinputRef={register}\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\terror={!!emailError}\r\n\t\t\t\t\t\thelperText={emailError}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t<EmailIcon />\r\n\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"register-password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\ttype={passwordVisible ? \"text\" : \"password\"}\r\n\t\t\t\t\t\tinputRef={register}\r\n\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\terror={!!passwordError}\r\n\t\t\t\t\t\thelperText={passwordError}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t<IconButton onClick={() => setPasswordVisible(_ => !_)} size=\"small\">\r\n\t\t\t\t\t\t\t\t\t{passwordVisible ? <PasswordVisibleIcon /> : <PasswordInvisibleIcon />}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\"Create account\"}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops.error\r\n\t\t\t\t\t\t\t? <Text.Paragraph error>\r\n\t\t\t\t\t\t\t\t{props.error}\r\n\t\t\t\t\t\t\t</Text.Paragraph>\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</form >\r\n\r\n\t\t\t\t<Divider />\r\n\r\n\t\t\t\t<div className=\"options\">\r\n\r\n\t\t\t\t\t<Button onClick={() => props.handleLogin()}>\r\n\t\t\t\t\t\t{\"Already have an account? Login\"}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\r\n\t</div>\r\n}","import React, { useState } from 'react';\r\nimport { RegisterView } from './RegisterView';\r\nimport { InferType, object, string, ref } from \"yup\"\r\nimport { useStoreActions } from '../../store';\r\nimport { useRedirect } from '../../hooks/useRedirect';\r\n\r\nexport const registerValidationSchema = object({\r\n\temail: string().defined().max(255).email(),\r\n\tpassword: string().defined().min(5).max(255),\r\n\trepeatPassword: string().defined().oneOf([ref(\"password\")], \"passwords must match\")\r\n}).defined()\r\n\r\nexport type RegisterFormType = InferType<typeof registerValidationSchema>\r\n\r\nexport const Register: React.FC<{}> = () => {\r\n\r\n\tconst [error, setError] = useState<string>()\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst loginWithGoogle = useStoreActions(_ => _.auth.loginWithGoogle)\r\n\tconst register = useStoreActions(_ => _.auth.registerWithEmailPassword)\r\n\r\n\tasync function handleSubmit(values: RegisterFormType) {\r\n\t\tsetError(undefined)\r\n\t\tconst result = await register({ email: values.email, password: values.password })\r\n\t\tresult.onSuccess(() => redirect(routes => routes.dashboard))\r\n\t\tresult.onFailure(failure => {\r\n\t\t\tswitch (failure.code) {\r\n\t\t\t\tcase \"data/invalid-request-data\":\r\n\t\t\t\t\tsetError(\"Invalid email or password.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/user-already-exists\":\r\n\t\t\t\t\tsetError(\"An user already exists with that email.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"server/unavailable\":\r\n\t\t\t\t\tsetError(\"Could not contact server. Try again later.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn(\"Uncaught error code in login:\", failure)\r\n\t\t\t\t\tsetError(\"An error occured while logging in. Try again.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tasync function handleGoogleSubmit() {\r\n\t\tloginWithGoogle()\r\n\t}\r\n\r\n\tasync function handleLogin() {\r\n\t\tredirect(_ => _.login)\r\n\t}\r\n\r\n\treturn <RegisterView {...{\r\n\t\thandleGoogleSubmit,\r\n\t\thandleLogin,\r\n\t\thandleSubmit,\r\n\t\terror\r\n\t}} />\r\n}","import { useEffect, useState, useCallback, useMemo } from \"react\";\r\n\r\nexport function useMedia(query: string) {\r\n  /**\r\n   * Media query list from query\r\n   */\r\n  const mediaQueryList = useMemo(() => {\r\n    return window.matchMedia(query);\r\n  }, [query]);\r\n\r\n  /**\r\n   * Current value\r\n   */\r\n  const [value, setValue] = useState<boolean>(false);\r\n\r\n  /**\r\n   * Changehandler: sets the current value\r\n   */\r\n  const changeHandler = useCallback(() => {\r\n    setValue(mediaQueryList.matches);\r\n  }, [mediaQueryList]);\r\n\r\n  /**\r\n   * Listening to changes and cleanup\r\n   */\r\n  useEffect(() => {\r\n    changeHandler();\r\n    mediaQueryList.addEventListener(\"change\", changeHandler);\r\n    return () => {\r\n      mediaQueryList.removeEventListener(\"change\", changeHandler);\r\n    };\r\n  }, [mediaQueryList, changeHandler]);\r\n\r\n  /**\r\n   * Returning value\r\n   */\r\n  return value;\r\n}\r\n\r\n/**\r\n * (min-width: $px) media query hook wrapper\r\n */\r\nexport function useMinWidthMedia(minWidth: number) {\r\n  const query = `(min-width: ${minWidth}px)`;\r\n  return useMedia(query);\r\n}\r\n\r\n/**\r\n * (max-width: $px) media query hook wrapper\r\n */\r\nexport function useMaxWidthMedia(maxWidth: number) {\r\n  const query = `(max-width: ${maxWidth}px)`;\r\n  return useMedia(query);\r\n}\r\n","import \"./AppTabs.scss\"\r\nimport React from \"react\"\r\nimport cx from \"classnames\"\r\nimport { useRouteMatch } from \"react-router-dom\"\r\nimport { routes } from \"../../Routes\"\r\nimport { useRedirect } from \"../../hooks/useRedirect\"\r\nimport {\r\n\tHome as DashboardIcon,\r\n\tBarChart2 as AnalyticsIcon,\r\n\tSettings as SettingsIcon,\r\n\tBriefcase as BudgetIcon,\r\n\tPlus as PlusIcon\r\n} from \"react-feather\"\r\nimport { useMinWidthMedia } from \"../../hooks/useMedia\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport default function AppTabs() {\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst openTransactionsForm = useStoreActions(_ => _.transactionForm.open)\r\n\r\n\tconst sidebarView = useMinWidthMedia(600)\r\n\r\n\tconst dashboardMatch = useRouteMatch(routes.dashboard)\r\n\tconst analyticsMatch = useRouteMatch(routes.analytics)\r\n\tconst budgetMatch = useRouteMatch(routes.budget)\r\n\tconst settingsMatch = useRouteMatch(routes.settings)\r\n\r\n\treturn <div className=\"AppTabs\">\r\n\r\n\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => redirect(_ => _.dashboard)}\r\n\t\t\t\tclassName={cx(\"tab\", { active: !!dashboardMatch })}\r\n\t\t\t>\r\n\t\t\t\t<DashboardIcon />\r\n\t\t\t\t<span>{\"Dashboard\"}</span>\r\n\t\t\t</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => redirect(_ => _.analytics)}\r\n\t\t\t\tclassName={cx(\"tab\", { active: !!analyticsMatch })}\r\n\t\t\t>\r\n\t\t\t\t<AnalyticsIcon />\r\n\t\t\t\t<span>{\"Analytics\"}</span>\r\n\t\t\t</button>\r\n\r\n\t\t\t{\r\n\t\t\t\tsidebarView ?\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => openTransactionsForm()}\r\n\t\t\t\t\t\tclassName={cx(\"tab\", \"addTab\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<PlusIcon />\r\n\t\t\t\t\t\t<span>{\"New transaction\"}</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t: <div className=\"plusButtonContainer\">\r\n\r\n\t\t\t\t\t\t<svg version=\"1.1\" x=\"0px\" y=\"0px\" width=\"108px\" height=\"60px\" viewBox=\"0 0 108 60\" >\r\n\t\t\t\t\t\t\t<path d={svgPath} />\r\n\t\t\t\t\t\t</svg>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => openTransactionsForm()}\r\n\t\t\t\t\t\t\tclassName=\"plusButton\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<PlusIcon />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => redirect(_ => _.budget)}\r\n\t\t\t\tclassName={cx(\"tab\", { active: !!budgetMatch })}\r\n\t\t\t>\r\n\t\t\t\t<BudgetIcon />\r\n\t\t\t\t<span>{\"Budget\"}</span>\r\n\t\t\t</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => redirect(_ => _.settings)}\r\n\t\t\t\tclassName={cx(\"tab\", { active: !!settingsMatch })}\r\n\t\t\t>\r\n\t\t\t\t<SettingsIcon />\r\n\t\t\t\t<span>{\"Settings\"}</span>\r\n\t\t\t</button>\r\n\r\n\t\t</div>\r\n\t</div >\r\n\r\n}\r\n\r\n\r\nconst svgPath = `M80.2,23.4C72.9,30.7,64.4,35,54,35s-18.9-4.3-26.2-11.6C20.5,16.1,10,0,0,0v60h54h54V0C98, 0, 87.5, 16.1, 80.2, 23.4z`","import \"./TransactionFormModal.scss\"\r\nimport React from \"react\"\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { TransactionForm, transactionFormSchema } from \"./TransactionFormModalController\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Modal } from \"@material-ui/core\";\r\n\r\nexport type TransactionFormModalViewProps = {\r\n\topen: boolean;\r\n\thandleClose: Function;\r\n\thandleSubmit(values: TransactionForm): void;\r\n}\r\n\r\nexport function TransactionFormModalView(props: TransactionFormModalViewProps) {\r\n\r\n\tconst { register, handleSubmit, errors, formState } = useForm<TransactionForm>({\r\n\t\tresolver: yupResolver(transactionFormSchema),\r\n\t})\r\n\r\n\tconst integerAmountError = formState.touched.integerAmount && errors.integerAmount?.message\r\n\tconst categoryError = formState.touched.category && errors.category?.message\r\n\tconst commentError = formState.touched.comment && errors.comment?.message\r\n\r\n\treturn <Modal open={props.open} onClose={() => props.handleClose()}>\r\n\t\t<div className=\"TransactionFormModal\">\r\n\t\t\t<form onSubmit={handleSubmit(props.handleSubmit)}>\r\n\t\t\t\t<p>Integer amount</p>\r\n\t\t\t\t<input type=\"number\" id=\"integerAmount\" name=\"integerAmount\" ref={register} />\r\n\t\t\t\t<p style={{ color: \"#FF6622\" }}>{integerAmountError}</p>\r\n\t\t\t\t<p>Category</p>\r\n\t\t\t\t<input type=\"text\" id=\"category\" name=\"category\" ref={register} />\r\n\t\t\t\t<p style={{ color: \"#FF6622\" }}>{categoryError}</p>\r\n\t\t\t\t<p>Comment</p>\r\n\t\t\t\t<input type=\"text\" id=\"comment\" name=\"comment\" ref={register} />\r\n\t\t\t\t<p style={{ color: \"#FF6622\" }}>{commentError}</p>\r\n\t\t\t\t<button type=\"submit\">submit</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t</Modal>\r\n}","import React, { useCallback } from \"react\"\r\nimport { TransactionFormModalView } from \"./TransactionFormModalView\"\r\nimport { ObjectSchema, object, string, number } from \"yup\"\r\nimport { useStoreState, useStoreActions } from \"../../store\"\r\nimport { useOnKeyPress } from \"../../hooks/useOnKeyPress\"\r\n\r\nexport type TransactionForm = {\r\n\tcomment?: string;\r\n\tcategory: string;\r\n\tintegerAmount: number;\r\n}\r\n\r\nexport const transactionFormSchema: ObjectSchema<TransactionForm> = object({\r\n\tcomment: string(),\r\n\tcategory: string().required(),\r\n\tintegerAmount: number().required().integer()\r\n}).required()\r\n\r\nexport type TransactionFormProps = {\r\n\r\n}\r\n\r\n\r\nexport function TransactionFormModal(props: TransactionFormProps) {\r\n\r\n\tconst open = useStoreState(_ => _.transactionForm.isOpen)\r\n\tconst openForm = useStoreActions(_ => _.transactionForm.open)\r\n\tconst closeForm = useStoreActions(_ => _.transactionForm.close)\r\n\r\n\tconst postTransaction = useStoreActions(_ => _.transactions.postTransaction)\r\n\r\n\tfunction handleClose() {\r\n\t\tcloseForm()\r\n\t}\r\n\r\n\tfunction handleSubmit(values: TransactionForm) {\r\n\t\tpostTransaction({ ...values, time: Date.now() })\r\n\t}\r\n\r\n\tconst handleKeyPressOpen = useCallback(() => {\r\n\t\topenForm()\r\n\t}, [openForm])\r\n\r\n\t// CTRL space opens menu\r\n\tuseOnKeyPress({ key: 32, shift: false, ctrl: true, alt: false }, handleKeyPressOpen)\r\n\r\n\treturn <TransactionFormModalView\r\n\t\topen={open}\r\n\t\thandleClose={handleClose}\r\n\t\thandleSubmit={handleSubmit}\r\n\t/>\r\n}","import { useCallback, useEffect } from \"react\";\r\n\r\nexport function useOnKeyPress(\r\n  key:\r\n    | string\r\n    | number\r\n    | {\r\n        key: string | number;\r\n        shift?: boolean;\r\n        alt?: boolean;\r\n        ctrl?: boolean;\r\n      },\r\n  callback: Function,\r\n  options?: {\r\n    onKeyUp?: boolean;\r\n    if?: boolean;\r\n    ifNot?: boolean;\r\n  }\r\n) {\r\n  const eventHandler = useCallback(\r\n    (ev: KeyboardEvent) => {\r\n      const matchTarget = typeof key === \"object\" ? key.key : key;\r\n\r\n      const keyMatch = ev.key === matchTarget || ev.keyCode === matchTarget;\r\n\r\n      if (!keyMatch) return;\r\n\r\n      const shiftMatch =\r\n        typeof key !== \"object\" ||\r\n        key.shift === undefined ||\r\n        key.shift === ev.shiftKey;\r\n\r\n      if (!shiftMatch) return;\r\n\r\n      const altMatch =\r\n        typeof key !== \"object\" ||\r\n        key.alt === undefined ||\r\n        key.alt === ev.altKey;\r\n\r\n      if (!altMatch) return;\r\n\r\n      const ctrlMatch =\r\n        typeof key !== \"object\" ||\r\n        key.ctrl === undefined ||\r\n        key.ctrl === ev.ctrlKey;\r\n\r\n      if (!ctrlMatch) return;\r\n\r\n      callback();\r\n    },\r\n    [key, callback]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const ifPassed = options?.if === true || options?.if === undefined;\r\n    const ifNotPassed = options?.ifNot === true || options?.ifNot === undefined;\r\n\r\n    if (ifPassed && ifNotPassed) {\r\n      const onKeyUp = Boolean(options?.onKeyUp);\r\n\r\n      if (onKeyUp) {\r\n        window.addEventListener(\"keyup\", eventHandler);\r\n        return () => window.removeEventListener(\"keyup\", eventHandler);\r\n      } else {\r\n        window.addEventListener(\"keydown\", eventHandler);\r\n        return () => window.removeEventListener(\"keydown\", eventHandler);\r\n      }\r\n    }\r\n  }, [options, eventHandler]);\r\n}\r\n","import \"./AppLayout.scss\"\r\nimport React from \"react\"\r\nimport AppTabs from \"../AppTabs/AppTabs\"\r\nimport { TransactionFormModal } from \"../TransactionFormModal/TransactionFormModalController\"\r\n\r\ntype AppLayoutProps = {\r\n\tchildren?: React.ReactNode\r\n}\r\n\r\nexport default function AppLayout(props: AppLayoutProps) {\r\n\treturn <>\r\n\r\n\t\t<TransactionFormModal />\r\n\r\n\t\t<div className=\"AppLayout\">\r\n\t\t\t<div className=\"appTabsContainer\">\r\n\t\t\t\t< AppTabs />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"childrenContainer\">\r\n\t\t\t\t{props.children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</>\r\n}\r\n","import React from \"react\";\r\nimport { Route, RouteProps, Redirect } from \"react-router-dom\";\r\nimport { useStoreState } from \"../../store\";\r\nimport { routes } from \"../../Routes\";\r\n\r\nexport type ProtectedRouteProps = {\r\n\tfallbackRoute?: string;\r\n} & RouteProps\r\n\r\nexport default function ProtectedRoute(props: ProtectedRouteProps) {\r\n\r\n\tconst { fallbackRoute, ...routeProps } = props\r\n\r\n\t/**\r\n\t * Default fallback to login on redirect\r\n\t */\r\n\tconst defaultFallbackRoute = routes.login\r\n\r\n\t/**\r\n\t * Get current user details\r\n\t */\r\n\tconst initialized = useStoreState(_ => _.auth.initialized)\r\n\tconst isLoggedIn = useStoreState(_ => _.auth.isLoggedIn)\r\n\r\n\t/**\r\n\t * If the user is being loaded, show nothing\r\n\t */\r\n\tif (!initialized) return null\r\n\r\n\t/**\r\n\t * Else if user is not logged in redirect to fallback route or default fallback route\r\n\t * if none specified in props\r\n\t */\r\n\telse if (!isLoggedIn) return <Redirect to={fallbackRoute || defaultFallbackRoute} />\r\n\r\n\t/**\r\n\t * Else return route as is\r\n\t */\r\n\telse return <Route {...routeProps} />\r\n}","import \"./TransactionListing.scss\";\r\nimport React from \"react\"\r\nimport cx from \"classnames\"\r\nimport { Transaction } from \"../../models/transactions/transactions.class\";\r\nimport { Plus as PlusIcon, Minus as MinusIcon } from \"react-feather\"\r\n\r\nexport type TransactionListingViewProps = {\r\n\ttransaction: Transaction;\r\n\thandleDelete: Function;\r\n}\r\n\r\nexport function TransactionListingView(props: TransactionListingViewProps) {\r\n\r\n\tconst signClass = props.transaction.amount.isPositive ? \"positive\" : \"negative\"\r\n\r\n\treturn <div className=\"TransactionListing\">\r\n\t\t<div className={cx(\"icon\", signClass)}>\r\n\t\t\t<div className=\"iconContainer\">\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.transaction.amount.isPositive\r\n\t\t\t\t\t\t? <PlusIcon />\r\n\t\t\t\t\t\t: <MinusIcon />\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"category\">\r\n\t\t\t<span>\r\n\t\t\t\t{props.transaction.category}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div className=\"comment\">\r\n\t\t\t<span>\r\n\t\t\t\t{props.transaction.comment}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div className={cx(\"amount\", signClass)}>\r\n\t\t\t<span>\r\n\t\t\t\t{props.transaction.amount.formatFull}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t</div>\r\n}","import React, { useCallback } from \"react\"\r\nimport { TransactionListingView } from \"./TransactionListingView\"\r\nimport { Transaction } from \"../../models/transactions/transactions.class\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport type TransactionListingProps = {\r\n\ttransaction: Transaction;\r\n}\r\n\r\nexport function TransactionListing(props: TransactionListingProps) {\r\n\r\n\tconst deleteTransaction = useStoreActions(_ => _.transactions.deleteTransaction)\r\n\r\n\tconst handleDelete = useCallback(() => {\r\n\t\tdeleteTransaction(props.transaction.id)\r\n\t}, [props.transaction, deleteTransaction])\r\n\r\n\treturn <TransactionListingView\r\n\t\ttransaction={props.transaction}\r\n\t\thandleDelete={handleDelete}\r\n\t/>\r\n}","import \"./TransactionList.scss\";\r\nimport React from \"react\"\r\nimport { TransactionListing } from \"../TransactionListing/TransactionListing\";\r\nimport { Transaction } from \"../../models/transactions/transactions.class\";\r\nimport { format } from \"date-fns\"\r\nimport { useStoreActions } from \"../../store\";\r\n\r\nexport type TransactionListViewProps = {\r\n\titemsByDates: {\r\n\t\tdate: Date;\r\n\t\titems: Transaction[];\r\n\t}[]\r\n}\r\n\r\nexport function TransactionListView(props: TransactionListViewProps) {\r\n\r\n\tfunction toDatestring(date: Date) {\r\n\t\treturn date.getFullYear() === currentYear\r\n\t\t\t? format(date, \"dd.MM.\")\r\n\t\t\t: format(date, \"dd.MM.yyyy\")\r\n\t}\r\n\r\n\tconst del = useStoreActions(_ => _.transactions.deleteTransaction)\r\n\r\n\treturn <div className=\"TransactionList\">\r\n\r\n\t\t<ul >\r\n\r\n\t\t\t{\r\n\t\t\t\tprops.itemsByDates.map(entry => {\r\n\r\n\t\t\t\t\tconst datestring = toDatestring(entry.date)\r\n\r\n\t\t\t\t\treturn <li key={datestring}>\r\n\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t{datestring}\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t<ul >\r\n\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tentry.items.map(item => {\r\n\r\n\t\t\t\t\t\t\t\t\treturn <li key={item.id}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tdel(item.id).catch(error => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Error deleting:\", error)\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<TransactionListing transaction={item} />\r\n\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t</ul>\r\n\r\n\t</div >\r\n}\r\n\r\nconst currentYear = new Date().getFullYear()","import React from \"react\"\r\nimport { TransactionListView } from \"./TransactionListView\"\r\nimport { useStoreState } from \"../../store\"\r\n\r\nexport type TransactionListProps = {\r\n\tbypassFilters?: boolean;\r\n}\r\n\r\nexport function TransactionList(props: TransactionListProps) {\r\n\r\n\tconst itemsByDates = useStoreState(_ => _.transactions.itemsByDates)\r\n\r\n\tconst filteredItemsByDates = useStoreState(_ => _.transactions.filtered.itemsByDates)\r\n\r\n\treturn <TransactionListView\r\n\t\titemsByDates={props.bypassFilters ? itemsByDates : filteredItemsByDates}\r\n\t/>\r\n}","import \"./TransactionListFilters.scss\";\r\nimport React from \"react\"\r\nimport { Button, ButtonGroup } from \"@material-ui/core\"\r\nimport {\r\n\tSort as FilterIcon,\r\n\tChevronLeft as ChevronLeftIcon,\r\n\tChevronRight as ChevronRightIcon\r\n} from \"@material-ui/icons\"\r\n\r\nexport type TransactionListFiltersViewProps = {\r\n\tonPreviousMonth(): void;\r\n\tonNextMonth(): void;\r\n}\r\n\r\nexport function TransactionListFiltersView(props: TransactionListFiltersViewProps) {\r\n\treturn <div className=\"TransactionListFilters\">\r\n\r\n\t\t<div className=\"left\">\r\n\r\n\t\t\t<ButtonGroup size=\"small\">\r\n\t\t\t\t<Button size=\"small\" variant=\"outlined\" onClick={props.onPreviousMonth}>\r\n\t\t\t\t\t<ChevronLeftIcon />\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button size=\"small\" variant=\"outlined\" onClick={props.onNextMonth}>\r\n\t\t\t\t\t<ChevronRightIcon />\r\n\t\t\t\t</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t</div>\r\n\r\n\t\t<div className=\"right\">\r\n\t\t\t<Button variant=\"outlined\">\r\n\t\t\t\t<span>{\"Filter\"}</span>\r\n\t\t\t\t<FilterIcon />\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\r\n\t</div>\r\n}","import React from \"react\"\r\nimport { TransactionListFiltersView } from \"./TransactionListFiltersView\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport type TransactionListFiltersProps = {\r\n\r\n}\r\n\r\nexport function TransactionListFilters(props: TransactionListFiltersProps) {\r\n\r\n\tconst setNextMonthAsDateInterval = useStoreActions(_ => _.interval.setNextMonthAsDateInterval)\r\n\tconst setPreviousMonthAsDateInterval = useStoreActions(_ => _.interval.setPreviousMonthAsDateInterval)\r\n\r\n\tfunction handleNextMonth() {\r\n\t\tsetNextMonthAsDateInterval()\r\n\t}\r\n\r\n\tfunction handlePreviousMonth() {\r\n\t\tsetPreviousMonthAsDateInterval()\r\n\t}\r\n\r\n\treturn <TransactionListFiltersView\r\n\t\tonNextMonth={handleNextMonth}\r\n\t\tonPreviousMonth={handlePreviousMonth}\r\n\t/>\r\n}","import \"./DashboardTab.scss\"\r\nimport React from \"react\";\r\nimport { TransactionList } from \"../../components/TransactionList/TransactionList\";\r\nimport { Auth } from \"../../models/authentication/auth.class\";\r\nimport { MoneyAmount } from \"../../utils/MoneyAmount\";\r\nimport { ChevronUp as ChevronUpIcon, ChevronDown as ChevronDownIcon } from \"react-feather\"\r\nimport { TransactionListFilters } from \"../../components/TransactionListFilters/TransactionListFiltersController\";\r\n\r\nimport textureImg from \"../../images/pexels-johannes-plenio-1103970.jpg\"\r\n\r\nconst styles: Record<string, string> = {}\r\n\r\nexport type DashboardTabViewProps = {\r\n\tuser: Auth;\r\n\tdateIntervalMonthString: string | undefined;\r\n\tdateIntervalIsMonth: boolean;\r\n\tfilteredSum: MoneyAmount;\r\n\tfilteredIncomesSum: MoneyAmount;\r\n\tfilteredExpensesSum: MoneyAmount;\r\n\r\n\tsetNextMonthAsDateInterval(): void;\r\n\tsetPreviousMonthAsDateInterval(): void;\r\n}\r\n\r\nexport function DashboardTabView(props: DashboardTabViewProps) {\r\n\r\n\treturn <div className=\"DashboardTab\">\r\n\r\n\t\t<header>\r\n\r\n\t\t\t<img src={textureImg} alt=\"\" />\r\n\r\n\t\t\t<h1>\r\n\t\t\t\t{props.dateIntervalMonthString}\r\n\t\t\t</h1>\r\n\r\n\t\t\t<div className=\"totals\">\r\n\r\n\t\t\t\t<h2 className={styles.totalHeader}>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{props.filteredSum.formatSign + \" \"}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span className={styles.larger}>\r\n\t\t\t\t\t\t{props.filteredSum.formatEuros}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t{\".\" + props.filteredSum.formatCents + \" €\"}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</h2>\r\n\r\n\t\t\t\t<div className=\"subtotals\">\r\n\t\t\t\t\t<div className=\"subtotal\">\r\n\t\t\t\t\t\t<ChevronUpIcon />\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{props.filteredIncomesSum.formatFull}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"subtotal\">\r\n\t\t\t\t\t\t<ChevronDownIcon />\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{props.filteredExpensesSum.formatFull}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</header>\r\n\r\n\t\t<main>\r\n\r\n\t\t\t<div className=\"filters\">\r\n\r\n\t\t\t\t<TransactionListFilters />\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"list\">\r\n\r\n\t\t\t\t<TransactionList />\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</main>\r\n\r\n\t</div>\r\n\r\n}","import React from \"react\"\r\nimport { DashboardTabView } from \"./DashboardTabView\"\r\nimport { useStoreState, useStoreActions } from \"../../store\";\r\n\r\nexport function DashboardTab() {\r\n\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\r\n\tconst dateIntervalIsMonth = useStoreState(_ => _.interval.dateIntervalIsMonth)\r\n\tconst dateIntervalMonthString = useStoreState(_ => _.interval.dateIntervalMonthString)\r\n\r\n\tconst filteredSums = useStoreState(_ => _.transactions.filtered.sums)\r\n\r\n\tconst setNextMonthAsDateInterval = useStoreActions(_ => _.interval.setNextMonthAsDateInterval)\r\n\tconst setPreviousMonthAsDateInterval = useStoreActions(_ => _.interval.setPreviousMonthAsDateInterval)\r\n\r\n\tif (!user) return null\r\n\r\n\treturn <DashboardTabView\r\n\r\n\t\tdateIntervalIsMonth={dateIntervalIsMonth}\r\n\t\tdateIntervalMonthString={dateIntervalMonthString}\r\n\r\n\t\tsetNextMonthAsDateInterval={() => setNextMonthAsDateInterval()}\r\n\t\tsetPreviousMonthAsDateInterval={() => setPreviousMonthAsDateInterval()}\r\n\r\n\t\tfilteredSum={filteredSums.all}\r\n\t\tfilteredIncomesSum={filteredSums.incomes}\r\n\t\tfilteredExpensesSum={filteredSums.expenses}\r\n\r\n\t\tuser={user}\r\n\r\n\t/>\r\n}","import \"./SettingsTab.scss\";\r\nimport React from \"react\"\r\nimport { Auth } from \"../../models/authentication/auth.class\";\r\n\r\nexport type SettingsTabViewProps = {\r\n\tuser: Auth;\r\n\thandleLogout(): void;\r\n}\r\n\r\nexport function SettingsTabView(props: SettingsTabViewProps) {\r\n\r\n\treturn <div className=\"SettingsTab\">\r\n\r\n\t\t{\r\n\t\t\tprops.user.photoUrl ? <img style={{ width: 64, height: 64 }} alt=\"profile\" src={props.user.photoUrl} /> : null\r\n\t\t}\r\n\r\n\t\t<table>\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Display name</td>\r\n\t\t\t\t\t<td>{props.user.displayName}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Email</td>\r\n\t\t\t\t\t<td>{props.user.email}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>ID</td>\r\n\t\t\t\t\t<td>{props.user.id}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Google ID</td>\r\n\t\t\t\t\t<td>{props.user.googleId}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\r\n\t\t<button onClick={props.handleLogout}>Log out</button>\r\n\r\n\t</div>\r\n}","import React from \"react\"\r\nimport { SettingsTabView } from \"./SettingsTabView\"\r\nimport { useStoreState, useStoreActions } from \"../../store\"\r\n\r\nexport type SettingsTabProps = {\r\n\r\n}\r\n\r\nexport function SettingsTab(props: SettingsTabProps) {\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\tconst logout = useStoreActions(_ => _.auth.logout)\r\n\r\n\tfunction handleLogout() {\r\n\t\tlogout()\r\n\t}\r\n\r\n\tif (!user) return null\r\n\r\n\treturn <SettingsTabView\r\n\t\tuser={user}\r\n\t\thandleLogout={handleLogout}\r\n\t/>\r\n}","import \"./AnalyticsTab.scss\";\r\nimport React, { useState } from \"react\"\r\nimport { Transaction } from \"../../models/transactions/transactions.class\";\r\nimport { useStoreActions } from \"../../store\";\r\n\r\nexport type AnalyticsTabViewProps = {\r\n\r\n}\r\n\r\nexport function AnalyticsTabView(props: AnalyticsTabViewProps) {\r\n\r\n\tconst [data, setData] = useState<Transaction[]>([])\r\n\r\n\tconst postTransaction = useStoreActions(_ => _.transactions.postTransaction)\r\n\r\n\tfunction handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n\r\n\t\tconsole.log(\"Handling change\")\r\n\r\n\t\tif (!e.target.files) throw new Error(\"No files array\")\r\n\r\n\t\tconst file = e.target.files[0]\r\n\r\n\t\tif (!file) throw new Error(\"No file\")\r\n\r\n\t\tconst reader = new FileReader();\r\n\r\n\t\treader.addEventListener('load', function (e) {\r\n\r\n\t\t\tif (!e.target) throw new Error(\"No load event target\")\r\n\r\n\t\t\tif (!e.target.result) throw new Error(\"Load event target result is null\")\r\n\r\n\t\t\tconst csvData = e.target.result.toString()\r\n\r\n\t\t\tconst result: Transaction[] = []\r\n\r\n\t\t\tconst rows = csvData.split(\"\\n\")\r\n\r\n\t\t\tfor (const row of rows) {\r\n\r\n\t\t\t\tif (row) {\r\n\r\n\t\t\t\t\tconst values = row.split(\";\")\r\n\r\n\t\t\t\t\tpostTransaction({\r\n\t\t\t\t\t\tcategory: values[1],\r\n\t\t\t\t\t\tcomment: values[3],\r\n\t\t\t\t\t\tintegerAmount: Number(values[2].replace(/[^\\d-]/g, '')),\r\n\t\t\t\t\t\ttime: new Date(values[0].split(\".\").reverse().map(_ => _.padStart(2, \"0\")).join(\"-\")).getTime(),\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsetData(result)\r\n\r\n\t\t})\r\n\r\n\t\treader.readAsText(file)\r\n\r\n\t}\r\n\r\n\treturn <div className=\"AnalyticsTab\">\r\n\r\n\t\t<input type=\"file\" accept=\".csv\" onChange={handleChange} />\r\n\r\n\t\t<ul>\r\n\t\t\t{\r\n\t\t\t\tdata.map(t => {\r\n\t\t\t\t\treturn <li key={t.id}>\r\n\r\n\t\t\t\t\t\t{t.date.toDateString()}: {t.amount.formatFull} {t.category} - {t.comment}\r\n\r\n\t\t\t\t\t</li>\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</ul>\r\n\r\n\t</div>\r\n}","import React from \"react\"\r\nimport { AnalyticsTabView } from \"./AnalyticsTabView\"\r\n\r\nexport type AnalyticsTabProps = {\r\n\r\n}\r\n\r\nexport function AnalyticsTab(props: AnalyticsTabProps) {\r\n\treturn <AnalyticsTabView />\r\n}","import \"./ForgotPassword.scss\";\r\nimport React from \"react\"\r\nimport { ForgotPasswordFormType, forgotPasswordValidationSchema } from \"./ForgotPasswordController\";\r\nimport { Text } from \"../../components/Text/Text\";\r\nimport { TextField, Button, Divider, InputAdornment } from \"@material-ui/core\";\r\nimport { Email as EmailIcon } from \"@material-ui/icons\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\n\r\nexport type ForgotPasswordViewProps = {\r\n\thandleSubmit(values: ForgotPasswordFormType): Promise<void>;\r\n\thandleGoogleSubmit(): Promise<void>;\r\n\thandleLogin(): Promise<void>;\r\n\thandleCreateAccount(): Promise<void>;\r\n\tsuccess: boolean;\r\n\terror?: string;\r\n}\r\n\r\nexport function ForgotPasswordView(props: ForgotPasswordViewProps) {\r\n\r\n\t/**\r\n\t * React hook form\r\n\t */\r\n\tconst { register, handleSubmit, errors, formState, ...form } = useForm<ForgotPasswordFormType>({\r\n\t\tresolver: yupResolver(forgotPasswordValidationSchema),\r\n\t})\r\n\r\n\t/**\r\n\t * Email and password error shorthands for react hook form\r\n\t */\r\n\tconst emailError = formState.touched.email && errors.email?.message\r\n\r\n\treturn <div className=\"ForgotPassword AuthView\">\r\n\r\n\t\t<div className=\"container\">\r\n\r\n\t\t\t<header>\r\n\r\n\t\t\t\t<Text.Header.H5 weight=\"bold\" padding=\"sm\" color=\"white\">\r\n\t\t\t\t\t{\"Forgot password\"}\r\n\t\t\t\t</Text.Header.H5>\r\n\r\n\t\t\t</header>\r\n\r\n\t\t\t<div className=\"content\">\r\n\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tprops.success\r\n\t\t\t\t\t\t? <Text.Paragraph>\r\n\t\t\t\t\t\t\t{\"Recovery email sent. Check your email.\"}\r\n\t\t\t\t\t\t</Text.Paragraph>\r\n\t\t\t\t\t\t: <form noValidate onSubmit={handleSubmit(props.handleSubmit)}>\r\n\r\n\t\t\t\t\t\t\t<Text.Paragraph>\r\n\t\t\t\t\t\t\t\t{\"Enter your email below and we will send you an email containing a link, which you can use to change your password.\"}\r\n\t\t\t\t\t\t\t</Text.Paragraph>\r\n\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tid=\"login-email\"\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tinputRef={register}\r\n\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\terror={!!emailError}\r\n\t\t\t\t\t\t\t\thelperText={emailError}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t<EmailIcon />\r\n\t\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{\"Send recovery email\"}\r\n\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tprops.error\r\n\t\t\t\t\t\t\t\t\t? <Text.Paragraph error>\r\n\t\t\t\t\t\t\t\t\t\t{props.error}\r\n\t\t\t\t\t\t\t\t\t</Text.Paragraph>\r\n\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t</form >\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\r\n\t\t\t\t<Divider />\r\n\r\n\t\t\t\t<div className=\"signInOptions\">\r\n\r\n\t\t\t\t\t<Button onClick={() => props.handleLogin()}>\r\n\t\t\t\t\t\t{\"Back\"}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\r\n\t</div>\r\n}","import React, { useState } from \"react\"\r\nimport { ForgotPasswordView } from \"./ForgotPasswordView\"\r\nimport * as yup from \"yup\";\r\nimport { useStoreActions } from \"../../store\";\r\nimport { useRedirect } from \"../../hooks/useRedirect\";\r\n\r\nexport const forgotPasswordValidationSchema = yup.object({\r\n\temail: yup.string().defined().min(3).max(255).email(),\r\n}).defined()\r\n\r\nexport type ForgotPasswordFormType = yup.InferType<typeof forgotPasswordValidationSchema>\r\n\r\nexport type ForgotPasswordProps = {\r\n\r\n}\r\n\r\nexport function ForgotPassword(props: ForgotPasswordProps) {\r\n\r\n\tconst [error, setError] = useState<string>()\r\n\r\n\tconst [success, setSuccess] = useState<boolean>(false)\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst forgotPassword = useStoreActions(_ => _.auth.forgotPassword)\r\n\tconst loginWithGoogle = useStoreActions(_ => _.auth.loginWithGoogle)\r\n\r\n\tasync function handleSubmit(values: ForgotPasswordFormType) {\r\n\t\tsetError(undefined)\r\n\t\tconst result = await forgotPassword(values)\r\n\t\tresult.onSuccess(() => setSuccess(true))\r\n\t\tresult.onFailure(failure => {\r\n\t\t\tswitch (failure.code) {\r\n\t\t\t\tcase \"data/invalid-request-data\":\r\n\t\t\t\t\tsetError(\"Invalid email or password.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/invalid-credentials\":\r\n\t\t\t\t\tsetError(\"Wrong password or the user does not have a password.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/user-not-found\":\r\n\t\t\t\t\tsetError(\"No user exists with that email.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"server/unavailable\":\r\n\t\t\t\t\tsetError(\"Could not contact server. Try again later.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn(\"Uncaught error code in login:\", failure)\r\n\t\t\t\t\tsetError(\"An error occured while logging in. Try again.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tasync function handleLogin() {\r\n\t\tredirect(_ => _.login)\r\n\t}\r\n\r\n\tasync function handleCreateAccount() {\r\n\t\tredirect(_ => _.register)\r\n\t}\r\n\r\n\tasync function handleGoogleSubmit() {\r\n\t\tloginWithGoogle()\r\n\t}\r\n\r\n\treturn <ForgotPasswordView {...{\r\n\t\thandleSubmit,\r\n\t\thandleCreateAccount,\r\n\t\thandleGoogleSubmit,\r\n\t\thandleLogin,\r\n\t\tsuccess,\r\n\t\terror\r\n\t}} />\r\n}","import React from \"react\"\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Login } from './views/Login/LoginController';\r\nimport { Register } from './views/Register/RegisterController';\r\nimport AppLayout from './components/AppLayout/AppLayout';\r\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute';\r\nimport { DashboardTab } from './views/DashboardTab/DashboardTabController';\r\nimport { SettingsTab } from \"./views/SettingsTab/SettingsTabController\";\r\nimport { AnalyticsTab } from \"./views/AnalyticsTab/AnalyticsTabController\";\r\nimport { ForgotPassword } from \"./views/ForgotPassword/ForgotPasswordController\";\r\n\r\nexport const routes = {\r\n\tapproot: \"/app\",\r\n\tdashboard: \"/app/dashboard\",\r\n\tanalytics: \"/app/analytics\",\r\n\tbudget: \"/app/budget\",\r\n\tsettings: \"/app/settings\",\r\n\tlogin: \"/\",\r\n\tforgotPassword: \"/forgotPassword\",\r\n\tregister: \"/register\",\r\n} as const;\r\n\r\nexport function Routes() {\r\n\r\n\treturn <Switch>\r\n\r\n\t\t<Route exact path={routes.login}>\r\n\t\t\t<Login />\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.register}>\r\n\t\t\t<Register />\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.forgotPassword}>\r\n\t\t\t<ForgotPassword />\r\n\t\t</Route>\r\n\r\n\t\t<ProtectedRoute exact path={routes.dashboard}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<DashboardTab />\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.analytics}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<AnalyticsTab />\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.budget}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<p>Budget placeholder</p>\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.settings}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<SettingsTab />\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<Route exact path=\"/v\">\r\n\t\t\tVersion number 0.0.1\r\n\t\t</Route>\r\n\r\n\t\t<Route path=\"/\">\r\n\t\t\t<Redirect to={routes.dashboard} />\r\n\t\t</Route>\r\n\t</Switch>\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport { Routes } from './Routes';\r\nimport { useStoreActions } from './store';\r\n\r\nfunction App() {\r\n\r\n\t/**\r\n\t * Initialize by fetching the user's profile if any\r\n\t */\r\n\tconst getProfile = useStoreActions(_ => _.auth.getProfile)\r\n\r\n\tuseEffect(() => {\r\n\t\tgetProfile()\r\n\t}, [getProfile])\r\n\r\n\treturn <Routes />\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createMuiTheme, colors } from \"@material-ui/core\";\r\n\r\n// Access any CSS var in :root by name\r\nfunction cssvar(\r\n  name: string,\r\n  options?: {\r\n    color?: boolean;\r\n  }\r\n) {\r\n  let value = getComputedStyle(document.documentElement).getPropertyValue(\r\n    \"--\" + name\r\n  );\r\n  if (options) {\r\n    if (options.color) {\r\n      if (process.env.NODE_ENV === \"development\") {\r\n        value = value.substring(1);\r\n      }\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      ...colors.deepPurple,\r\n      main: cssvar(\"color-primary-main\", { color: true }),\r\n      dark: cssvar(\"color-primary-dark\", { color: true }),\r\n      light: cssvar(\"color-primary-light\", { color: true }),\r\n      50: cssvar(\"color-primary-50\", { color: true }),\r\n      100: cssvar(\"color-primary-100\", { color: true }),\r\n      200: cssvar(\"color-primary-200\", { color: true }),\r\n      300: cssvar(\"color-primary-300\", { color: true }),\r\n      400: cssvar(\"color-primary-400\", { color: true }),\r\n      500: cssvar(\"color-primary-500\", { color: true }),\r\n      600: cssvar(\"color-primary-600\", { color: true }),\r\n      700: cssvar(\"color-primary-900\", { color: true }),\r\n      800: cssvar(\"color-primary-800\", { color: true }),\r\n      900: cssvar(\"color-primary-700\", { color: true }),\r\n      contrastText: \"white\",\r\n    },\r\n  },\r\n});\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).theme = theme;\r\n}\r\n","import \"./styles/index.scss\"\r\nimport \"./styles/main.scss\"\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from './store';\r\nimport { StoreProvider } from 'easy-peasy';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { theme } from \"./styles/theme\";\r\n\r\nReactDOM.render(\r\n\t<StoreProvider store={store}>\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t<React.StrictMode>\r\n\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t<App />\r\n\t\t\t\t</BrowserRouter>\r\n\t\t\t</React.StrictMode>\r\n\t\t</ThemeProvider>\r\n\t</StoreProvider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}