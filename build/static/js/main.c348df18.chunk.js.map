{"version":3,"sources":["components/Type/Type.tsx","hooks/utils/useRedirect.ts","views/Login/useLoginController.tsx","views/Login/Login.tsx","views/Register/useRegisterController.tsx","views/Register/Register.tsx","components/ProtectedRoute/ProtectedRouteView.tsx","hooks/utils/useInterval.ts","components/ProtectedRoute/ProtectedRoute.tsx","hooks/application/useVibration.ts","hooks/utils/useLongPress.ts","components/MoneyType/MoneyType.tsx","components/TransactionListItem/TransactionListItem.tsx","components/TransactionListItem/useTransactionListItemController.tsx","hooks/utils/useRandomValue.ts","components/TransactionListItemSkeleton/TransactionListItemSkeleton.tsx","components/TransactionList/TransactionList.tsx","components/TransactionList/useTransactionListController.tsx","hooks/utils/useMedia.ts","components/IntervalPickerForm/IntervalPickerForm.tsx","components/IntervalPickerForm/useIntervalPickerFormController.tsx","hooks/state/useHashOpenState.ts","utils/Utils/createClassnames.ts","components/IntervalManager/IntervalManager.tsx","components/IntervalManager/useIntervalManagerController.tsx","components/TransactionsFilter/useTransactionsFilterController.ts","hooks/utils/useDebounce.ts","hooks/utils/useTrueAfterTimeout.ts","components/TransactionsFilter/TransactionsFilter.tsx","views/Dashboard/ActionsPanel/ActionsPanel.tsx","views/Dashboard/ActionsPanel/useActionsPanelController.tsx","components/TransactionTableHeader/TransactionTableHeader.tsx","components/TransactionTableHeader/useTransactionTableHeaderController.tsx","components/TransactionForm/useTransactionFormController.tsx","components/EnhancedButton/EnhancedButton.tsx","components/TransactionForm/TransactionForm.tsx","components/TransactionTableRow/TransactionTableRow.tsx","components/TransactionTableRow/useTransactionTableRowController.tsx","components/TransactionTableRowSkeleton/TransactionTableRowSkeleton.tsx","components/TransactionTable/TransactionTable.tsx","components/TransactionTable/useTransactionTableController.tsx","views/Dashboard/DashboardHeader/DashboardHeader.tsx","views/Dashboard/DashboardHeader/useDashboardHeaderController.tsx","views/Dashboard/Dashboard.tsx","views/Dashboard/useDashboardController.tsx","result/GenericFailures.ts","result/SpreadsheetFailures.ts","result/FileFailures.ts","utils/FileIO/FileIO.ts","utils/FileIO/TransactionSpreadsheet.ts","utils/FileIO/Spreadsheet.ts","components/FileUploader/FileUploader.tsx","components/FileUploader/useFileUploaderController.tsx","components/FileDownloader/FileDownloader.tsx","components/FileDownloader/useFileDownloaderController.tsx","components/UserAvatar/UserAvatar.tsx","components/UserAvatar/useUserAvatarController.tsx","views/Settings/SettingsProfilePanel/SettingsProfilePanel.tsx","views/Settings/SettingsSection/SettingsSection.tsx","views/Settings/Settings.tsx","views/Settings/useSettingsController.tsx","views/Analytics/AnalyticsHeader/AnalyticsHeader.tsx","views/Analytics/AnalyticsHeader/useAnalyticsHeaderController.tsx","views/Analytics/AnalyticsPanel/AnalyticsPanel.tsx","utils/AnalyticsUtils/calculateAnalyticsAllTime.ts","utils/AnalyticsUtils/calculateAnalyticsPastYear.ts","utils/AnalyticsUtils/calculateAnalyticsSelected.ts","contexts/AnalyticsContext.context.tsx","utils/AnalyticsUtils/calculateAnalytics.ts","views/Analytics/AnalyticsBlock/AnalyticsBlock.tsx","views/Analytics/AnalyticsTotals/AnalyticsTotals.tsx","views/Analytics/AnalyticsTotals/useAnalyticsTotalsController.tsx","views/Analytics/AnalyticsCategory/AnalyticsCategory.tsx","views/Analytics/AnalyticsCategories/AnalyticsCategories.tsx","views/Analytics/AnalyticsCategories/useAnalyticsCategoriesController.tsx","views/Analytics/AnalyticsAllTimeLine/AnalyticsAllTimeLine.tsx","views/Analytics/AnalyticsAllTimeLine/useAnalyticsAllTimeLineController.tsx","views/Analytics/AnalyticsAllTimeColumns/AnalyticsAllTimeColumns.tsx","views/Analytics/AnalyticsAllTimeColumns/useAnalyticsAllTimeColumnsController.ts","views/Analytics/AnalyticsAverageCategories/AnalyticsAverageCategories.tsx","views/Analytics/AnalyticsAverageCategories/useAnalyticsAverageCategoriesController.ts","views/Analytics/AnalyticsAverageTotals/AnalyticsAverageTotals.tsx","views/Analytics/AnalyticsAverageTotals/useAnalyticsAverageTotalsController.ts","views/Analytics/Analytics.tsx","views/Analytics/useAnalyticsController.tsx","views/ForgotPassword/useForgotPasswordController.tsx","views/ForgotPassword/ForgotPassword.tsx","components/TransactionEditorDrawer/TransactionEditorDrawer.tsx","components/TransactionCreatorDrawer/TransactionCreatorDrawer.tsx","components/UserMenu/useUserMenuController.tsx","components/ResponsiveMenu/ResponsiveMenu.tsx","components/UserMenu/UserMenu.tsx","components/UserManager/UserManager.tsx","components/UserManager/useUserManagerController.tsx","components/Header/Header.tsx","components/Logo/Logo.tsx","components/Logo/useLogoController.tsx","views/Sidebar/Sidebar.tsx","views/Sidebar/useSidebarController.tsx","components/AppFrame/AppFrame.tsx","components/AppFrame/useAppFrameController.tsx","views/ChangePassword/useChangePasswordController.tsx","views/ChangePassword/ChangePassword.tsx","views/ConfirmEmail/ConfirmEmail.tsx","views/ConfirmEmail/useConfirmEmailController.tsx","views/Budget/Budget.tsx","hooks/application/usePwaInstall.ts","components/AuthFrame/useAuthFrameController.tsx","components/AuthFrame/AuthFrame.tsx","hooks/application/usePathTitle.ts","views/Logout/Logout.tsx","views/Logout/useLogoutController.ts","Routes.tsx","constants.ts","services/StorageService.ts","history/HistoryEvent.ts","hooks/state/useBooleanQueryState.ts","components/TransactionContextMenu/TransactionContextMenu.tsx","components/TransactionContextMenu/useTransactionContextMenuController.tsx","contexts/TransactionContextMenu.context.tsx","history/DeleteTransactionEvent.ts","result/HistoryFailures.ts","history/DeleteTransactionsEvent.ts","hooks/state/useQueryState.ts","images/shapelined-_JBKdviweXI-unsplash.jpg","hooks/application/useRouteData.ts","history/LoggedOutEvent.ts","images/logo_google.png","images/pexels-johannes-plenio-1103970.jpg","views/Settings/SettingsProfilePanel/useSettingsProfilePanelController.tsx","result/Success.ts","utils/DateUtils/DateUtils.ts","classes/Auth.ts","config.ts","result/NetworkFailures.ts","services/Service.ts","result/InvalidServerResponseFailures.ts","services/AuthService.ts","models/auth.model.ts","services/TransactionService.ts","models/transactions.model.ts","models/interval.model.ts","classes/Notification.ts","models/notification.model.ts","models/selection.model.ts","store.ts","models/history.model.ts","result/Failure.ts","utils/DataUtils/DataUtils.ts","classes/MoneyAmount.ts","components/TransactionEditorDrawer/useTransactionEditorDrawerController.tsx","components/TransactionCreatorDrawer/useTransactionCreatorDrawerController.tsx","classes/Category.ts","classes/Transaction.ts","components/Notification/NotificationView.tsx","components/Notification/Notification.tsx","components/Notification/useNotificationController.tsx","hooks/shortcuts/useShortcut.ts","hooks/application/useIsApplicationActive.ts","hooks/shortcuts/useApplicationShortcuts.ts","hooks/shortcuts/useCreateTransactionShortcut.ts","hooks/shortcuts/useEditTransactionShortcut.ts","hooks/shortcuts/useCloseFormsShortcut.ts","hooks/shortcuts/useDeleteTransactionsShortcut.ts","hooks/shortcuts/useSelectShortcuts.ts","App.tsx","hooks/gtag/useGtagTracking.ts","hooks/utils/useVhFix.ts","hooks/application/useHistoryNotifications.ts","serviceWorker.ts","styles/theme.ts","utils/LocaleUtils/CustomLocale.ts","index.tsx","styles/main.ts"],"names":["Type","forwardRef","props","ref","className","size","color","variant","typographyProps","textColor","textVariant","textSize","Typography","cx","useRedirect","history","useHistory","route","target","routes","path","push","loginValidationSchema","yup","email","defined","password","Login","controller","redirect","user","useStoreState","_","auth","loginWithGoogle","useStoreActions","loginWithEmailPassword","requestConfirmationEmail","useState","error","setError","form","useForm","resolver","yupResolver","values","a","undefined","result","isSuccess","ReactGA","event","action","category","dashboard","console","reason","code","useEffect","handleSubmit","forgotPassword","register","passwordVisible","setPasswordVisible","handleGoogleSubmit","handleForgotPassword","handleCreateAccount","togglePasswordVisibility","useCallback","value","emailError","formState","touched","errors","message","passwordError","useLoginController","component","noValidate","onSubmit","TextField","id","name","type","inputRef","label","helperText","fullWidth","InputProps","endAdornment","InputAdornment","position","Email","IconButton","onClick","Button","startIcon","src","googleLogo","alt","registerValidationSchema","object","string","max","min","Register","registerWithEmailPassword","registered","setRegistered","warn","login","handleLogin","useRegisterController","ProtectedRouteView","seconds","setSeconds","callback","intervalInMs","intervalRef","useRef","current","clearInterval","setInterval","cancelInterval","useInterval","textureImg","key","Object","keys","messages","reverse","find","Number","CircularProgress","5","10","15","ProtectedRoute","fallbackRoute","showLoadingScreenOnUnitialized","routeProps","defaultFallbackRoute","logOut","initialized","isLoggedIn","to","patterns","weak","default","strong","useVibration","strength","pattern","window","navigator","vibrate","movementCancelThreshold","movementCancelThresholdInPx","MoneyType","amount","colorIfNegative","colorIfPositive","enableAnimation","animate","animationDuration","animationStiffness","disableAnimationBlur","typeProps","moneyAmount","MoneyAmount","nodeRef","latestValueRef","node","start","end","controls","duration","stiffness","onUpdate","integerValue","Math","round","formattedValue","format","textContent","phase","abs","PI","sin","sin2","style","opacity","filter","stop","positive","isNonNegative","negative","isNegative","TransactionListItem","selection","selected","useMemo","some","transaction","select","handleSelect","deselect","handleDeselect","selectionActive","contextMenu","useTransactionContextMenu","handleContextMenu","e","preventDefault","isMobile","setPosition","top","clientY","left","clientX","setTransaction","contextMenuSelected","useTransactionListItemController","pressHandler","options","pressTimeInMs","disableVibrate","pressed","setPressed","timeout","origin","startLongPress","button","x","y","touches","length","touch","clearTimeout","setTimeout","endLongPress","cancelLongPress","cancelLongPressOnMove","dx","dy","onTouchStart","onTouchEnd","onTouchMove","onTouchCancel","onMouseDown","onMouseUp","onMouseLeave","onMouseOut","childlockProps","stopPropagation","useLongPress","upcoming","isUpcoming","onContextMenu","div","variants","iconVariants","icon","comment","scale","transition","repeat","repeatType","bounce","unselected","regular","useRandomValue","setValue","random","getRandomValue","TransactionListItemSkeleton","headerWidth","categoryWidth","commentWidth","amountWidth","i","shouldShowHeader","Skeleton","width","height","animation","virtualizedListRef","createRef","TransactionList","items","transactions","filteredItems","itemsByDates","DateUtils","groupByDate","date","sort","initializedUser","shouldShowSkeletons","showSkeletons","useTransactionCreatorDrawerOpenState","setCreateMenuOpen","handleCreate","useTransactionListController","recomputeRowHeights","DataUtils","createIndexArray","map","layout","autoSizer","rowCount","rowHeight","index","theme","fixed_spacing_4","replace","noRowsRenderer","rowRenderer","rowProps","entry","getFullYear","currentYear","item","Date","useMedia","query","mediaQueryList","matchMedia","changeHandler","matches","addEventListener","removeEventListener","useSmMedia","useMdMedia","IntervalPickerForm","intervalString","interval","smartDisplayString","isDay","isWeek","isMonth","isYear","isAll","toDay","dayInterval","toWeek","weekInterval","toMonth","monthInterval","toYear","yearInterval","toAll","allInterval","previous","previousInterval","next","nextInterval","now","includesToday","startDate","endDate","setStartDate","setEndDate","onConfirm","onDay","onWeek","onMonth","onYear","onAll","onPrevious","onNext","onNow","useIntervalPickerFormController","disabled","DatePicker","compareDate","MINIMUM_DATE","onChange","d","inputVariant","MAXIMUM_DATE","useHashOpenState","targetHash","location","useLocation","includes","Error","open","hash","substring","setOpen","search","goBack","createClassnames","defaults","classes","classnames","IntervalManager","controlsHidden","hideControls","controlsReversed","reverseControls","nowControlHidden","intervalLabel","handleToday","handlePrevious","handleNext","shouldShowControls","intervalPickerOpen","setIntervalPickerOpen","intervalPickerMenuAnchor","setIntervalPickerMenuAnchor","useIntervalManagerController","menuLayout","dateButton","DateRange","currentTarget","ArrowBack","hideNowControl","ArrowForward","Menu","onClose","anchorEl","anchorOrigin","horizontal","vertical","transformOrigin","getContentAnchorEl","Drawer","anchor","useTransactionsFilterController","setSearchTerm","input","setInput","useBooleanQueryState","onOpen","debouncedInput","delay","debouncedValue","setDebouncedValue","handler","useDebounce","useTrueAfterTimeout","timeoutId","TransactionsFilter","trueAfterTimeout","isDesktopLayout","ButtonBase","focusRipple","disableRipple","focus","span","initial","exit","ActionsPanel","isSearchOpen","isSelectionActive","deselectAll","handleDeselectAll","filteredTransactions","selectAll","handleSelectAll","allSelected","compareArrays","deleteTransactions","handleDelete","useTransactionEditorDrawerVariableOpenState","setEditor","handleEdit","createDrawerOpen","setCreateDrawerOpen","useActionsPanelController","isLargeMobileLayout","mobile","desktop","searchIsOpen","Remove","Edit","Delete","children","SelectAll","TransactionTableHeader","toggleSort","toggleSortingStrategy","sortingStrategy","isAllSelected","onSelectAll","onDeselectAll","onToggleSort","useTransactionTableHeaderController","useTransactionFormController","notify","notification","editTransaction","categories","postTransaction","putTransaction","loading","setLoading","setIcon","sign","setSign","setAmount","setCategory","time","setTime","setComment","emojiPickerAnchor","setEmojiPickerAnchor","emojiPickerOpen","setEmojiPickerOpen","existingCategoryIcon","latestEditTransactionId","decimalValue","toFixed","setErrors","validateIcon","emojiRegex","test","validateForm","amountValidationError","trim","validateAmount","categoryValidationError","validateCategory","timeValidationError","getTime","isNaN","validateTime","validateComment","integerAmount","categoryIcon","main","data","_root","uid","onIconChange","onSignChange","onAmountChange","onCategoryChange","onTimeChange","onCommentChange","edit","EnhancedButton","buttonProps","TransactionForm","amountInputRef","largerLayout","titleHidden","hideTitle","hasCloseBUtton","showCloseButton","ButtonGroup","onKeyDown","required","autoFocus","autoComplete","inputProps","native","disableAutoFocus","onEmojiClick","emoji","tabIndex","Autocomplete","inputValue","onInputChange","v","freeSolo","openOnFocus","autoHighlight","selectOnFocus","disableClearable","renderInput","params","autoOk","Close","TransactionTableRow","editingId","setEditingId","isEditing","handleCloseEditing","handleClick","isShift","shiftKey","isCtrl","ctrlKey","getAllTransactionIdsBetween","onCloseEditing","onSelect","onDeselect","useTransactionTableRowController","TransactionTableRowSkeleton","dateWidth","TransactionTable","isLargeScreen","sortedItems","b","Transaction","compare","aid","bid","aidx","findIndex","bidx","ids","lidx","gidx","useTransactionTableController","DashboardHeader","desktopView","selectionLength","transactionsCount","transactionsTotal","sum","transactionsTotalIncome","isPositive","transactionsTotalExpense","useDashboardHeaderController","Dashboard","transactionCreatorFormOpen","setTransactionCreatorFormOpen","showCreateTransactionForm","handleTransactionFormClose","useDashboardController","section","ErrorFailure","Failure","silent","SpreadsheetReadRowFailure","SpreadsheetReadFileFailure","SpreadsheetNoFileCreatedFailure","FileReaderFailure","FileReaderAbortedFailure","FileReaderNoEventTargetFailure","FileReaderInvalidTypeFailure","eventValue","FileReaderMissingFileFailure","FileIO","Promise","resolve","file","files","reader","FileReader","onerror","onabort","onload","Success","readAsArrayBuffer","readAsText","TransactionSpreadsheet","schema","integer","names","transformBeforeValidation","String","number","excelDateToJSDate","row","datestring","toLocaleDateString","rows","_workbook","_rowsCount","transformed","this","forEach","columnKey","toLowerCase","columnValue","validate","validation","readFileAsArrayBuffer","arrayBuffer","isFailure","workbook","XLSX","read","sheet","Sheets","SheetNames","json","utils","sheet_to_json","raw","rowParsers","parseRow","all","parsedRows","succeededRows","All","failedRows","succeeded","failed","total","book_new","createdRows","sortRows","createRow","worksheet","json_to_sheet","book_append_sheet","getFileSheetName","filename","Spreadsheet","escapeFileName","getFileName","writeFile","Empty","filetype","slice","concat","serial","utc_days","floor","date_info","fractional_day","total_seconds","hours","minutes","getMonth","getDate","FileUploader","postTransactions","setResult","parsing","setParsing","uploading","setUploading","transactionSpreadsheet","readFile","readResult","s","t","rowsToUpload","severity","chunks","chunkify","postResults","chunk","every","reduce","failure","handleFileUpload","handleUpload","handleCancel","useFileUploaderController","buttonLabel","endIcon","display","FileDownloader","spreadsheet","createFile","downloadFile","getRowsCount","useFileDownloaderController","UserAvatar","MuiAvatarProps","Avatar","photoUrl","initials","SettingsProfilePanel","useSettingsProfilePanelController","handleStartEdit","editing","editNameInputId","handleCancelEdit","Check","Clear","displayName","SettingsSection","sectionTitle","divProps","Settings","logout","handleLogout","useSettingsController","AnalyticsHeader","AnalyticsPanel","calculateAnalyticsAllTime","args","incomes","expenses","months","serializeMonth","cumulativeTotal","accumulator","sortedMonths","month","calculateAnalyticsPastYear","earliest","startOfMonth","yearAgo","subMonths","startingMonth","isAfter","endingMonth","endOfMonth","monthsCount","differenceInMonths","average","incomesAverage","expensesAverage","transactionsAverage","uuid","percentageOfTotal","percentageOfMax","avg","num","tot","calculateAnalyticsSelected","AnalyticsContext","React","createContext","allTime","pastYear","useAnalyticsContext","useContext","AnalyticsContextProvider","analytics","Provider","AnalyticsBlock","header","headerIcon","headerContent","AnalyticsTotals","totals","AnalyticsCategory","li","count","show","layoutId","visibility","AnalyticsCategories","isShowingPercentages","setIsShowingPercentages","hasNoIncomes","hasNoExpenses","isShowingValues","showPercentages","showValues","useAnalyticsCategoriesController","AnalyticsAllTimeLine","labelOffset","Infinity","deserializeMonth","useAnalyticsAllTimeLineController","ResponsiveContainer","LineChart","CartesianGrid","blue_200","YAxis","tickLine","tickFormatter","largeFormat","Tooltip","formatter","labelFormatter","Line","strokeWidth","dataKey","stroke","blue_400","AnalyticsAllTimeColumns","Total","Incomes","Expenses","Cumulative","useAnalyticsAllTimeColumnsController","BarChart","ComposedChart","stackOffset","Bar","fill","green_300","stackId","red_300","blue_300","AnalyticsAverageCategories","useAnalyticsAverageCategoriesController","showOnly","AnalyticsAverageTotals","Analytics","isDesktop","columnsCountBreakPoints","350","700","gutter","spacing_4","forgotPasswordValidationSchema","ForgotPassword","success","setSuccess","useForgotPasswordController","TransactionEditorDrawer","useTransactionEditorDrawerController","isLargerScreen","selectedItem","TransactionCreatorDrawer","largerScreen","useTransactionCreatorDrawerController","useUserMenuController","handleClose","handleOpen","useImperativeHandle","handleSettings","settings","ResponsiveMenu","MenuProps","DrawerProps","UserMenu","ResponsiveMenuProps","MenuList","MenuItem","UserManager","userMenuRef","Header","Logo","spanProps","useLogoController","Sidebar","isSidebarView","dashboardMatch","useRouteMatch","analyticsMatch","budgetMatch","budget","settingsMatch","setTransactionCreatorOpen","isDashboard","isAnalytics","isBudget","isSettings","onDashboard","onAnalytics","onBudget","onSettings","onTransactionCreatorOpen","useSidebarController","active","tabVariants","AppFrame","changePasswordValidationSchema","ChangePassword","token","useParams","validateChangePasswordToken","changePassword","validTokenEmail","setValidTokenEmail","passwordChangeSuccessful","setPasswordChangeSuccessful","then","useChangePasswordController","ConfirmEmail","confirmEmail","useConfirmEmailController","Budget","padding","placeItems","deferredPromptEvent","useAuthFrameController","handlePwaInstall","Boolean","prompt","userChoice","choiceResult","AuthFrame","nonInteraction","getDocumentTitle","subtitle","Logout","pushEvent","hadAccessToken","StorageService","components","getValue","LoggedOutEvent","clearValue","handleRedirect","useLogoutController","approot","title","Routes","routeData","useRouteData","document","usePathTitle","exact","storage","localStorage","sessionStorage","getStorage","getItem","setItem","removeItem","clear","getKey","decode","encode","apiUrlOverride","createComponent","HistoryEvent","restorationStrategy","_restored","displayed","HistoryEventAlreadyRestoredFailure","method","truthy","falsy","arg","useQueryState","TransactionContextMenu","menu","isSelected","handleSelectToggle","handleSelectAllToggle","onSelectAllToggle","onSelectToggle","onDelete","onEdit","useTransactionContextMenuController","anchorReference","anchorPosition","TransactionContextMenuContext","TransactionContextMenuProvider","DeleteTransactionEvent","toJsonInitializer","put","store","getActions","EventNotFoundFailure","DeleteTransactionsEvent","jsons","results","parseQueryString","queryString","createQueryString","module","exports","entries","routeRegexp","RegExp","pathname","match","updateProfile","editingName","setEditingName","loadingName","setLoadingName","nameValue","setNameValue","handleStartEditName","setImmediate","getElementById","handleCancelEditName","handleSubmitName","resultType","fallback","serializedDates","serializeDate","unique","deserializeDate","itemsOnDate","itemdate","op","_a","_b","remainder","year","DateSerializer","yearFactor","monthFactor","dateFactor","yyyy","toString","padStart","mm","dd","Auth","googleId","split","charAt","toUpperCase","join","JsonSchema","isValidSync","Config","override","NetworkFailure","details","status","response","request","Service","baseURL","getState","accessToken","payload","jwt","expiresAt","exp","force","isAccessTokenValid","url","endpoint","axios","get","setAccessToken","config","attemptRefreshAccessToken","enableLogoutOnUnauthorized","headers","Authorization","requestFunction","onBeforeRequest","service","getConfig","onSuccessfulRequest","catch","FromAxiosError","onFailedRequest","onAfterRequest","handleRequest","post","delete","patch","API_URL","Axios","create","withCredentials","InvalidServerResponseFailure","AuthService","isJson","update","credentials","href","authModel","computed","state","setInitialized","boolean","newAccessToken","setAuthToState","clearState","getProfile","thunk","actions","profile","loginWithEmailAndPassword","registerWithEmailAndPassword","validatePasswordChangeToken","TransactionService","isCompressedJson","transactionsModel","searchTerm","storeState","setTransactionsToState","upsertTransactionsToState","existingCategory","removeTransactionsFromStateById","property","currentStrategy","carousel","targetSortIndex","setSortingStrategy","getTransactions","parseCompressedData","deleteTransaction","getStoreActions","patchTransaction","onAuthChanged","thunkOn","resolvedTargets","loggedOut","loggedIn","intervalModel","datefns","weekStartsOn","today","displayString","dates","newStartDate","newEndDate","Notification","verticalPosition","horizontalPosition","notificationModel","notifications","deleteNotification","selectionModel","selectionIds","firstSelectionId","selectionState","selectedTransactions","_aidx","indexOf","_bidx","storeModel","maxSize","latest","shift","removeEvent","eventId","restoreEvent","restore","createStore","typedHooks","createTypedHooks","useStoreDispatch","useStore","array","arr","aKeys","bKeys","matchable","chunkSize","lastChunk","n","cents","_value","trunc","that","add","subtract","multiply","set","euros","eurStr","Array","from","c","j","unit","absvalue","scaledAmount","TransactionEditorDrawerOpenHash","encodedId","TransactionCreatorDrawerOpenQuery","Category","textSearch","lightFormat","substr","validateSync","InitializerJsonSchema","CompressedJsonSchema","isArray","isInitializerJson","cid","strategy","localeCompare","of","GrowTransition","Grow","NotificationView","actionElement","buttonType","Icon","iconButtonIcon","Snackbar","onExited","autoHideDuration","TransitionComponent","Alert","activeNotification","handleNotificationClose","useNotificationController","useShortcut","shortcut","enableForInputs","activeElement","tagName","ctrl","altKey","useIsApplicationActive","useApplicationShortcuts","isApplicationActive","isOpen","setIsOpen","useCreateTransactionShortcut","onlySelectedId","isEditingId","setIsEditingId","useEditTransactionShortcut","useCloseFormsShortcut","selectedIds","useDeleteTransactionsShortcut","useSelectShortcuts","App","userId","pageview","useGtagTracking","root","documentElement","eventHandler","viewportHeight","innerHeight","setProperty","useVhFix","notifyEvent","canBeRestored","handleDeleteTransactionEvent","handleDeleteTransactionsEvent","handleLoggedOutEvent","useHistoryNotifications","isLocalhost","hostname","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","log","onSuccess","fontWeight","text_regular","textTransform","letterSpacing","text_regular_spacing","bold","text_bold","text_bold_spacing","boldcaps","text_boldcaps_spacing","createMuiTheme","typography","fontFamily","poppins","h1","fontSize","text_xxxl","h2","text_xxl","h3","text_xl","h4","text_lg","h5","text_md","h6","text_sm","body1","body2","fontWeightBold","fontWeightLight","text_light","fontWeightMedium","fontWeightRegular","palette","primary","blue_500","dark","blue_700","light","50","blue_100","100","200","300","400","500","600","blue_600","800","blue_800","900","blue_900","A100","A200","A400","A700","contrastText","white","green_500","green_700","green_100","green_200","green_400","green_600","green_800","green_900","red_500","red_700","red_100","red_200","red_400","red_600","red_800","red_900","info","secondary","grey","gray_100","gray_200","gray_300","gray_400","gray_500","gray_600","gray_700","gray_800","gray_900","divider","common","black","background","paper","LocalizedUtils","locale","DateFnsUtils","GOOGLE_ANALYTICS_TRACKING_ID","initialize","ReactDOM","render","StrictMode","ThemeProvider","Locale","URL","process","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","header_height","mobile_header_height","sidebar_width","gray_840","gray_830","gray_820","gray_810","primary_900","primary_800","primary_700","primary_600","primary_500","primary_400","primary_300","primary_200","primary_100","border_color","border","roboto","roboto_condensed","spacing_1","spacing_2","spacing_3","spacing_5","spacing_6","spacing_8","spacing_10","spacing_12","spacing_14","spacing_16","spacing_20","spacing_24","spacing_28","spacing_32","spacing_36","spacing_40","fixed_spacing_1","fixed_spacing_2","fixed_spacing_3","fixed_spacing_5","fixed_spacing_6","fixed_spacing_8","fixed_spacing_10","fixed_spacing_12","fixed_spacing_14","fixed_spacing_16","fixed_spacing_20","fixed_spacing_24","fixed_spacing_28","fixed_spacing_32","fixed_spacing_36","fixed_spacing_40","spacing_icon_button","spacing_button_vertical","spacing_button_horizontal","timing_1","timing_2","timing_3","animate_snap_back","radius_sm","radius_md","radius_lg","fullvh","vh","bp_sm","bp_md","bp_lg","font_weight_light","font_weight_regular","font_weight_medium","font_weight_bold","spacing_sm","spacing_md","spacing_lg","color_primary_main","color_primary_light","color_primary_dark","color_primary_50","color_primary_100","color_primary_200","color_primary_300","color_primary_400","color_primary_500","color_primary_600","color_primary_700","color_primary_800","color_primary_900","color_positive_main","color_negative_main","color_error_main","color_error_light","color_error_dark","color_divider","color_action_focus","color_action_hover","color_action_active","color_action_primary_focus","color_action_primary_hover","color_action_primary_active","color_text_default","border_radius","shadow_blur_small","shadow_blur_medium","shadow_color_medium","shadow_color_strong","app_tab_height","app_tab_width","app_header_height","app_tab_z","container_max_width","icon_size_xs","icon_size_sm","icon_size_md"],"mappings":"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","file":"static/js/main.c348df18.chunk.js","sourcesContent":["import \"./Type.scss\";\r\nimport React, { ElementType, forwardRef } from \"react\"\r\nimport cx from \"classnames\"\r\nimport { Typography, TypographyProps } from \"@material-ui/core\";\r\n\r\nexport type TypeProps = Omit<TypographyProps, \"color\" | \"variant\"> & {\r\n\tcomponent?: ElementType;\r\n\r\n\tcolor?:\r\n\t| \"white\"\r\n\t| \"black\"\r\n\t| \"blue-100\"\r\n\t| \"blue-200\"\r\n\t| \"blue-300\"\r\n\t| \"blue-400\"\r\n\t| \"blue-500\"\r\n\t| \"blue-600\"\r\n\t| \"blue-700\"\r\n\t| \"blue-800\"\r\n\t| \"blue-900\"\r\n\t| \"gray-100\"\r\n\t| \"gray-200\"\r\n\t| \"gray-300\"\r\n\t| \"gray-400\"\r\n\t| \"gray-500\"\r\n\t| \"gray-600\"\r\n\t| \"gray-700\"\r\n\t| \"gray-800\"\r\n\t| \"gray-900\"\r\n\t| \"red-100\"\r\n\t| \"red-200\"\r\n\t| \"red-300\"\r\n\t| \"red-400\"\r\n\t| \"red-500\"\r\n\t| \"red-600\"\r\n\t| \"red-700\"\r\n\t| \"red-800\"\r\n\t| \"red-900\"\r\n\t| \"green-100\"\r\n\t| \"green-200\"\r\n\t| \"green-300\"\r\n\t| \"green-400\"\r\n\t| \"green-500\"\r\n\t| \"green-600\"\r\n\t| \"green-700\"\r\n\t| \"green-800\"\r\n\t| \"green-900\"\r\n\r\n\tvariant?: \"regular\" | \"bold\" | \"boldcaps\";\r\n\r\n\tsize?: \"sm\" | \"md\" | \"lg\" | \"xl\" | \"xxl\" | \"xxxl\";\r\n\r\n}\r\n\r\nexport const Type = forwardRef<HTMLElement, TypeProps>((props, ref) => {\r\n\r\n\tconst {\r\n\t\tclassName,\r\n\t\tsize,\r\n\t\tcolor,\r\n\t\tvariant,\r\n\t\t...typographyProps\r\n\t} = props\r\n\r\n\tconst textColor = color ?? \"gray-900\"\r\n\tconst textVariant = variant ?? \"regular\"\r\n\tconst textSize = size ?? \"md\"\r\n\r\n\treturn <Typography\r\n\r\n\t\tref={ref}\r\n\r\n\t\t{...typographyProps}\r\n\r\n\t\tclassName={cx(\r\n\t\t\t\"Type\",\r\n\t\t\tclassName,\r\n\t\t\t`Type-color-${textColor}`,\r\n\t\t\t`Type-variant-${textVariant}`,\r\n\t\t\t`Type-size-${textSize}`\r\n\t\t)}\r\n\t/>\r\n})","import { RouteData, routes } from \"../../Routes\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type RouteSelector = (r: typeof routes) => RouteData | string;\r\n\r\nexport function useRedirect() {\r\n  const history = useHistory();\r\n  return (route: string | RouteData | RouteSelector) => {\r\n    const target = typeof route === \"function\" ? route(routes) : route;\r\n\r\n    const path = typeof target === \"string\" ? target : target.path;\r\n\r\n    history.push(path);\r\n  };\r\n}\r\n","import ReactGA from \"react-ga\";\r\nimport * as yup from \"yup\";\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useStoreActions, useStoreState } from '../../store';\r\nimport { useRedirect } from '../../hooks/utils/useRedirect';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { yupResolver } from '@hookform/resolvers';\r\n\r\nexport const loginValidationSchema = yup.object({\r\n\temail: yup.string().defined().email(),\r\n\tpassword: yup.string().defined(),\r\n}).defined()\r\n\r\nexport type LoginFormType = yup.InferType<typeof loginValidationSchema>\r\n\r\nexport function useLoginController() {\r\n\tconst redirect = useRedirect()\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\tconst loginWithGoogle = useStoreActions(_ => _.auth.loginWithGoogle)\r\n\tconst loginWithEmailPassword = useStoreActions(_ => _.auth.loginWithEmailPassword)\r\n\tconst requestConfirmationEmail = useStoreActions(_ => _.auth.requestConfirmationEmail)\r\n\r\n\t/**\r\n\t * Submit error\r\n\t */\r\n\tconst [error, setError] = useState<string>()\r\n\r\n\t/**\r\n\t * Login form state\r\n\t */\r\n\tconst form = useForm<LoginFormType>({\r\n\t\tresolver: yupResolver(loginValidationSchema),\r\n\t})\r\n\r\n\t/**\r\n\t * Check initial login\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tif (user) {\r\n\t\t\tredirect(routes => routes.dashboard)\r\n\t\t}\r\n\t}, [user, redirect])\r\n\r\n\t/**\r\n\t * Handle submitting of form\r\n\t */\r\n\tasync function submitHandler(values: LoginFormType) {\r\n\t\tsetError(undefined)\r\n\r\n\t\t/**\r\n\t\t * Attempt login\r\n\t\t */\r\n\t\tconst result = await loginWithEmailPassword(values)\r\n\r\n\t\t/**\r\n\t\t *  On success redirect\r\n\t\t */\r\n\t\tif (result.isSuccess()) {\r\n\t\t\tReactGA.event({\r\n\t\t\t\taction: \"Login\",\r\n\t\t\t\tcategory: \"User\",\r\n\t\t\t})\r\n\t\t\treturn redirect(routes => routes.dashboard)\r\n\t\t}\r\n\r\n\t\tconsole.error(result)\r\n\r\n\t\t/**\r\n\t\t * On failure, first attempt to recover from email-not-confirmed error\r\n\t\t * by sending another email confirmation link.\r\n\t\t */\r\n\t\tif (result.reason === \"network\" && result.code === \"auth/email-not-confirmed\") {\r\n\t\t\tconst confirmationEmailRequest = await requestConfirmationEmail({ email: values.email })\r\n\t\t\tif (confirmationEmailRequest.isSuccess()) {\r\n\t\t\t\tsetError(\"Confirm your email before logging in. We have sent you a new email confirmation link to your email address.\")\r\n\t\t\t} else {\r\n\t\t\t\tsetError(\"Confirm your email before logging in. We were unable to send you a new email confirmation link.\")\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Else display correct error message\r\n\t\t */\r\n\t\tsetError(() => {\r\n\t\t\tswitch (result.reason) {\r\n\t\t\t\tcase \"invalidServerResponse\":\r\n\t\t\t\t\treturn \"Invalid response received from server.\"\r\n\t\t\t\tcase \"network\":\r\n\t\t\t\t\tswitch (result.code) {\r\n\t\t\t\t\t\tcase \"request/too-many-requests\":\r\n\t\t\t\t\t\t\treturn \"You are trying too fast! Try again later.\"\r\n\t\t\t\t\t\tcase \"request/invalid-request-data\":\r\n\t\t\t\t\t\t\treturn \"Invalid email or password.\"\r\n\t\t\t\t\t\tcase \"auth/invalid-credentials\":\r\n\t\t\t\t\t\t\treturn \"Wrong password or the user does not have a password.\"\r\n\t\t\t\t\t\tcase \"auth/user-not-found\":\r\n\t\t\t\t\t\t\treturn \"No user exists with that email.\"\r\n\t\t\t\t\t\tcase \"server/unavailable\":\r\n\t\t\t\t\t\t\treturn \"Could not contact server. Try again later.\"\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\treturn \"An error occured while logging in. Try again.\"\r\n\t\t\t\t\t}\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn \"An unknown error occured. Try again later.\"\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleSubmit = form.handleSubmit(submitHandler)\r\n\r\n\tasync function handleGoogleSubmit() {\r\n\t\tloginWithGoogle()\r\n\t}\r\n\r\n\tasync function handleForgotPassword() {\r\n\t\tredirect(routes => routes.forgotPassword)\r\n\t}\r\n\r\n\tasync function handleCreateAccount() {\r\n\t\tredirect(routes => routes.register)\r\n\t}\r\n\r\n\t/**\r\n\t * Password visible state\r\n\t */\r\n\tconst [passwordVisible, setPasswordVisible] = useState(false)\r\n\r\n\tconst togglePasswordVisibility = useCallback(() => {\r\n\t\tsetPasswordVisible(value => !value)\r\n\t}, [setPasswordVisible])\r\n\r\n\t/**\r\n\t * Email and password error shorthands for react hook form\r\n\t */\r\n\tconst emailError = form.formState.touched.email && form.errors.email?.message\r\n\tconst passwordError = form.formState.touched.password && form.errors.password?.message\r\n\r\n\treturn {\r\n\t\tform,\r\n\t\terror,\r\n\t\thandleGoogleSubmit,\r\n\t\thandleSubmit,\r\n\t\thandleForgotPassword,\r\n\t\thandleCreateAccount,\r\n\t\tpasswordVisible,\r\n\t\ttogglePasswordVisibility,\r\n\t\temailError,\r\n\t\tpasswordError,\r\n\t}\r\n}","import \"./Login.scss\";\r\nimport React from 'react';\r\nimport { TextField, Button, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport googleLogo from \"../../images/logo_google.png\"\r\nimport {\r\n\tEmail as EmailIcon,\r\n\tVisibility as PasswordVisibleIcon,\r\n\tVisibilityOff as PasswordInvisibleIcon,\r\n} from \"@material-ui/icons\";\r\nimport { Type } from \"../../components/Type/Type\";\r\nimport { useLoginController } from \"./useLoginController\";\r\n\r\nexport type LoginProps = {\r\n}\r\n\r\nexport function Login() {\r\n\tconst controller = useLoginController()\r\n\r\n\treturn <div className=\"Login\">\r\n\r\n\t\t<Type\r\n\t\t\tcomponent=\"h1\"\r\n\t\t\tvariant=\"bold\"\r\n\t\t\tcolor=\"black\"\r\n\t\t\tsize=\"xxl\"\r\n\t\t>\r\n\t\t\t{\"Log in\"}\r\n\t\t</Type>\r\n\r\n\t\t<main>\r\n\t\t\t<form noValidate onSubmit={controller.handleSubmit}>\r\n\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"login-email\"\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tinputRef={controller.form.register}\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\terror={!!controller.emailError}\r\n\t\t\t\t\thelperText={controller.emailError}\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t<EmailIcon />\r\n\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid=\"login-password\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\ttype={controller.passwordVisible ? \"text\" : \"password\"}\r\n\t\t\t\t\tinputRef={controller.form.register}\r\n\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\terror={!!controller.passwordError}\r\n\t\t\t\t\thelperText={controller.passwordError}\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tonClick={controller.togglePasswordVisibility}\r\n\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tcontroller.passwordVisible\r\n\t\t\t\t\t\t\t\t\t\t? <PasswordVisibleIcon />\r\n\t\t\t\t\t\t\t\t\t\t: <PasswordInvisibleIcon />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t>\r\n\t\t\t\t\t{\"Log in\"}\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tcontroller.error\r\n\t\t\t\t\t\t? <Type color=\"red-600\">\r\n\t\t\t\t\t\t\t{controller.error}\r\n\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tonClick={controller.handleGoogleSubmit}\r\n\t\t\t\t\tstartIcon={<img className=\"logo\" src={googleLogo} alt=\"Google Logo\" />}\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t>\r\n\t\t\t\t\t{\"Log in with Google\"}\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t</form>\r\n\t\t</main>\r\n\r\n\t\t<footer>\r\n\t\t\t<Button onClick={controller.handleCreateAccount}>\r\n\t\t\t\t{\"Create account\"}\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Button onClick={controller.handleForgotPassword}>\r\n\t\t\t\t{\"Forgot password\"}\r\n\t\t\t</Button>\r\n\t\t</footer>\r\n\r\n\t</div>\r\n}\r\n","import ReactGA from \"react-ga\";\r\nimport { useCallback, useState } from 'react';\r\nimport { InferType, object, string } from \"yup\"\r\nimport { useStoreActions } from '../../store';\r\nimport { useRedirect } from '../../hooks/utils/useRedirect';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { yupResolver } from '@hookform/resolvers';\r\n\r\nexport const registerValidationSchema = object({\r\n\temail: string().defined().max(255).email(),\r\n\tpassword: string().defined().min(6).max(255),\r\n}).defined()\r\n\r\nexport type RegisterFormType = InferType<typeof registerValidationSchema>\r\n\r\nexport function useRegisterController() {\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst register = useStoreActions(_ => _.auth.registerWithEmailPassword)\r\n\r\n\t/**\r\n\t * Submit error\r\n\t */\r\n\tconst [error, setError] = useState<string>()\r\n\r\n\t/**\r\n\t * Set to true after succesful registration to display success message\r\n\t */\r\n\tconst [registered, setRegistered] = useState(false)\r\n\r\n\t/**\r\n\t * Form state\r\n\t */\r\n\tconst form = useForm<RegisterFormType>({\r\n\t\tresolver: yupResolver(registerValidationSchema),\r\n\t})\r\n\r\n\t/**\r\n\t * Submit handler\r\n\t */\r\n\tasync function submitHandler(values: RegisterFormType) {\r\n\t\tsetError(undefined)\r\n\t\tconst result = await register({ email: values.email, password: values.password })\r\n\t\tif (result.isSuccess()) {\r\n\t\t\tReactGA.event({\r\n\t\t\t\taction: \"Sign up\",\r\n\t\t\t\tcategory: \"User\",\r\n\t\t\t})\r\n\t\t\tsetRegistered(true)\r\n\t\t} else {\r\n\t\t\tsetError(() => {\r\n\t\t\t\tswitch (result.reason) {\r\n\t\t\t\t\tcase \"invalidServerResponse\":\r\n\t\t\t\t\t\treturn \"Invalid response received from server.\"\r\n\t\t\t\t\tcase \"network\":\r\n\t\t\t\t\t\tswitch (result.code) {\r\n\t\t\t\t\t\t\tcase \"request/too-many-requests\":\r\n\t\t\t\t\t\t\t\treturn \"You are trying too fast! Try again later.\"\r\n\t\t\t\t\t\t\tcase \"request/invalid-request-data\":\r\n\t\t\t\t\t\t\t\treturn \"Invalid email or password.\"\r\n\t\t\t\t\t\t\tcase \"auth/user-already-exists\":\r\n\t\t\t\t\t\t\t\treturn \"An user already exists with that email.\"\r\n\t\t\t\t\t\t\tcase \"server/unavailable\":\r\n\t\t\t\t\t\t\t\treturn \"Could not contact server. Try again later.\"\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tconsole.warn(\"Uncaught error code in login:\", result)\r\n\t\t\t\t\t\t\t\treturn \"An error occured while logging in. Try again.\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSubmit = form.handleSubmit(submitHandler)\r\n\r\n\tasync function handleLogin() {\r\n\t\tredirect(_ => _.login)\r\n\t}\r\n\r\n\t/**\r\n\t * Password visible state\r\n\t */\r\n\tconst [passwordVisible, setPasswordVisible] = useState(false)\r\n\r\n\tconst togglePasswordVisibility = useCallback(() => {\r\n\t\tsetPasswordVisible(value => !value)\r\n\t}, [setPasswordVisible])\r\n\r\n\t/**\r\n\t * Email and password error shorthands for react hook form\r\n\t */\r\n\tconst emailError = form.formState.touched.email && form.errors.email?.message\r\n\tconst passwordError = form.formState.touched.password && form.errors.password?.message\r\n\r\n\treturn {\r\n\t\tform,\r\n\t\thandleSubmit,\r\n\t\thandleLogin,\r\n\t\terror,\r\n\t\tregistered,\r\n\t\tpasswordVisible,\r\n\t\ttogglePasswordVisibility,\r\n\t\temailError,\r\n\t\tpasswordError,\r\n\t}\r\n}","import \"./Register.scss\"\r\nimport React from 'react';\r\nimport { TextField, Button, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport {\r\n\tEmail as EmailIcon,\r\n\tVisibility as PasswordVisibleIcon,\r\n\tVisibilityOff as PasswordInvisibleIcon,\r\n} from \"@material-ui/icons\";\r\nimport { Type } from \"../../components/Type/Type\";\r\nimport { useRegisterController } from \"./useRegisterController\";\r\n\r\n\r\nexport type RegisterProps = {\r\n}\r\n\r\nexport function Register() {\r\n\r\n\tconst controller = useRegisterController()\r\n\r\n\treturn <div className=\"Register\">\r\n\r\n\t\t<Type\r\n\t\t\tcomponent=\"h1\"\r\n\t\t\tvariant=\"bold\"\r\n\t\t\tcolor=\"black\"\r\n\t\t\tsize=\"xxl\"\r\n\t\t>\r\n\t\t\t{\"Create account\"}\r\n\t\t</Type>\r\n\r\n\t\t<main>\r\n\t\t\t{\r\n\t\t\t\tcontroller.registered\r\n\t\t\t\t\t? <>\r\n\t\t\t\t\t\t<Type size=\"lg\" component=\"h2\" variant=\"bold\">\r\n\t\t\t\t\t\t\t{\"Succesfully registered.\"}\r\n\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t{\"Check your email in order to confirm your email address. \"}\r\n\t\t\t\t\t\t\t{\"You can login after having confirmation.\"}\r\n\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t: <form onSubmit={controller.handleSubmit}>\r\n\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"register-email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tinputRef={controller.form.register}\r\n\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\terror={!!controller.emailError}\r\n\t\t\t\t\t\t\thelperText={controller.emailError}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<EmailIcon />\r\n\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"register-password\"\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\ttype={controller.passwordVisible ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\tinputRef={controller.form.register}\r\n\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\terror={!!controller.passwordError}\r\n\t\t\t\t\t\t\thelperText={controller.passwordError}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<IconButton onClick={controller.togglePasswordVisibility} size=\"small\">\r\n\t\t\t\t\t\t\t\t\t\t{controller.passwordVisible ? <PasswordVisibleIcon /> : <PasswordInvisibleIcon />}\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Create account\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcontroller.error\r\n\t\t\t\t\t\t\t\t? <Type color=\"red-600\">\r\n\t\t\t\t\t\t\t\t\t{controller.error}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</form >\r\n\t\t\t}\r\n\t\t</main>\r\n\r\n\t\t<footer>\r\n\t\t\t<Button onClick={controller.handleLogin}>\r\n\t\t\t\t{\"Already have an account? Login\"}\r\n\t\t\t</Button>\r\n\t\t</footer>\r\n\r\n\t</div>\r\n}","import \"./ProtectedRouteView.scss\";\r\nimport textureImg from \"../../images/pexels-johannes-plenio-1103970.jpg\"\r\nimport React, { useCallback, useState } from \"react\"\r\nimport { Type } from \"../Type/Type\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { useInterval } from \"../../hooks/utils/useInterval\";\r\n\r\nexport type ProtectedRouteViewProps = {\r\n\r\n}\r\n\r\nexport function ProtectedRouteView(props: ProtectedRouteViewProps) {\r\n\r\n\t/**\r\n\t * Count down seconds since render\r\n\t */\r\n\tconst [seconds, setSeconds] = useState(0)\r\n\r\n\tconst intervalHandler = useCallback(() => {\r\n\t\tsetSeconds(_ => _ + 1)\r\n\t}, [setSeconds])\r\n\r\n\tuseInterval(intervalHandler, 1000)\r\n\r\n\treturn <div className=\"ProtectedRouteView\">\r\n\r\n\t\t<img src={textureImg} alt=\"\" className=\"texture\" />\r\n\r\n\t\t<div className=\"content\">\r\n\r\n\t\t\t<Type>\r\n\t\t\t\t{\r\n\t\t\t\t\t(() => {\r\n\t\t\t\t\t\tconst key = Object.keys(messages)\r\n\t\t\t\t\t\t\t.reverse()\r\n\t\t\t\t\t\t\t.find(_ => Number(_) < seconds) as undefined | keyof typeof messages\r\n\t\t\t\t\t\tif (!key) {\r\n\t\t\t\t\t\t\treturn \"Loading...\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn messages[key]\r\n\t\t\t\t\t})()\r\n\t\t\t\t}\r\n\t\t\t</Type>\r\n\r\n\t\t\t<CircularProgress />\r\n\r\n\t\t</div>\r\n\r\n\t</div>\r\n}\r\n\r\nconst messages = {\r\n\t5: \"This may take some time...\",\r\n\t10: \"Waiting for server...\",\r\n\t15: \"The server is starting up...\"\r\n} ","import { useCallback, useEffect, useRef } from \"react\";\r\n\r\nexport function useInterval(\r\n  callback: () => void,\r\n  intervalInMs: number\r\n): [React.MutableRefObject<NodeJS.Timeout | null>, () => void] {\r\n  /**\r\n   * Reference to interval after creation for canceling it\r\n   */\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  /**\r\n   * Creating a new interval with given callback each time callback or\r\n   * timeoutInMs changes.\r\n   */\r\n  useEffect(() => {\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n    }\r\n\r\n    intervalRef.current = setInterval(callback, intervalInMs);\r\n\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n      }\r\n    };\r\n  }, [callback, intervalInMs, intervalRef]);\r\n\r\n  /**\r\n   * Function to cancel active interval\r\n   */\r\n  const cancelInterval = useCallback(() => {\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n      intervalRef.current = null;\r\n    }\r\n  }, [intervalRef]);\r\n\r\n  return [intervalRef, cancelInterval];\r\n}\r\n","import React from \"react\";\r\nimport { Route, RouteProps, Redirect } from \"react-router-dom\";\r\nimport { useStoreState } from \"../../store\";\r\nimport { routes } from \"../../Routes\";\r\nimport { ProtectedRouteView } from \"./ProtectedRouteView\";\r\n\r\nexport type ProtectedRouteProps = {\r\n\tfallbackRoute?: string;\r\n\tshowLoadingScreenOnUnitialized?: boolean;\r\n} & RouteProps\r\n\r\nexport default function ProtectedRoute(props: ProtectedRouteProps) {\r\n\r\n\tconst { fallbackRoute, showLoadingScreenOnUnitialized, ...routeProps } = props\r\n\r\n\t/**\r\n\t * Default fallback to login on redirect\r\n\t */\r\n\tconst defaultFallbackRoute = routes.logOut.path\r\n\r\n\t/**\r\n\t * Get current user details\r\n\t */\r\n\tconst initialized = useStoreState(_ => _.auth.initialized)\r\n\tconst isLoggedIn = useStoreState(_ => _.auth.isLoggedIn)\r\n\r\n\t/**\r\n\t * If the user is being loaded, show nothing\r\n\t */\r\n\tif (!initialized) {\r\n\r\n\t\tif (showLoadingScreenOnUnitialized) {\r\n\r\n\t\t\treturn <ProtectedRouteView />\r\n\t\t}\r\n\r\n\t\telse return <Route {...routeProps} />\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Else if user is not logged in redirect to fallback route or default fallback route\r\n\t * if none specified in props\r\n\t */\r\n\telse if (!isLoggedIn) return <Redirect to={fallbackRoute || defaultFallbackRoute} />\r\n\r\n\t/**\r\n\t * Else return route as is\r\n\t */\r\n\telse return <Route {...routeProps} />\r\n}","import { useCallback } from \"react\";\r\n\r\ntype VibrationStrength = \"default\" | \"weak\" | \"strong\";\r\n\r\nconst patterns: Record<VibrationStrength, number[]> = {\r\n  weak: [10],\r\n  default: [100],\r\n  strong: [200],\r\n};\r\n\r\nexport function useVibration() {\r\n  const handleVibrate = useCallback(\r\n    (strength: VibrationStrength = \"default\") => {\r\n      const pattern = patterns[strength];\r\n      window.navigator.vibrate(pattern);\r\n    },\r\n    []\r\n  );\r\n\r\n  return handleVibrate;\r\n}\r\n","import {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useCallback,\r\n  useMemo,\r\n  HTMLProps,\r\n} from \"react\";\r\nimport { useVibration } from \"../application/useVibration\";\r\n\r\nexport default function useLongPress(\r\n  callback: () => void,\r\n  options?: {\r\n    pressTimeInMs?: number;\r\n    disableVibrate?: boolean;\r\n  }\r\n): {\r\n  pressed: boolean;\r\n  props: Partial<HTMLProps<HTMLDivElement>>;\r\n  childlockProps: Partial<HTMLProps<HTMLDivElement>>;\r\n} {\r\n  /**\r\n   * Vibration\r\n   */\r\n  const vibrate = useVibration();\r\n\r\n  /**\r\n   * Default press time in MS to 500 unless overridden in options\r\n   */\r\n  const pressTimeInMs = useMemo(() => {\r\n    if (options?.pressTimeInMs !== undefined) {\r\n      return options.pressTimeInMs;\r\n    }\r\n    return 300;\r\n  }, [options]);\r\n\r\n  /**\r\n   * Default to enabled vibrate unless disabled in options\r\n   */\r\n  const disableVibrate = useMemo(() => {\r\n    if (options?.disableVibrate) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }, [options]);\r\n\r\n  /**\r\n   * Is the press currently occuring\r\n   */\r\n  const [pressed, setPressed] = useState(false);\r\n\r\n  /**\r\n   * Referencce to long press timeout\r\n   */\r\n  const timeout = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  /**\r\n   * Latest click position\r\n   */\r\n  const origin = useRef<null | { x: number; y: number }>(null);\r\n\r\n  /**\r\n   * Start long press function\r\n   */\r\n  const startLongPress = useCallback(\r\n    (e: React.MouseEvent | React.TouchEvent | React.PointerEvent) => {\r\n      // Set latest start position\r\n      if (\"clientX\" in e && \"clientY\" in e) {\r\n        // Only on primary click\r\n        if (e.button !== 0) {\r\n          return;\r\n        }\r\n        origin.current = {\r\n          x: e.clientX,\r\n          y: e.clientY,\r\n        };\r\n      } else {\r\n        // Prevent double touching from activating long presses\r\n        if (e.touches.length > 1) {\r\n          return;\r\n        }\r\n\r\n        const touch = e.touches[0];\r\n        origin.current = {\r\n          x: touch.clientX,\r\n          y: touch.clientY,\r\n        };\r\n      }\r\n\r\n      // Clear any previous timeouts\r\n      if (timeout.current) {\r\n        clearTimeout(timeout.current);\r\n      }\r\n\r\n      // Set pressed state to true\r\n      setPressed(true);\r\n\r\n      // Set new timeout\r\n      timeout.current = setTimeout(() => {\r\n        callback();\r\n        if (!disableVibrate) {\r\n          vibrate(\"default\");\r\n        }\r\n      }, pressTimeInMs);\r\n    },\r\n    [callback, setPressed, timeout, pressTimeInMs, disableVibrate, vibrate]\r\n  );\r\n\r\n  /**\r\n   * End long press function\r\n   */\r\n  const endLongPress = useCallback(\r\n    (e: React.MouseEvent | React.TouchEvent | React.PointerEvent) => {\r\n      origin.current = null;\r\n\r\n      setPressed(false);\r\n\r\n      if (timeout.current) {\r\n        clearTimeout(timeout.current);\r\n        timeout.current = null;\r\n      }\r\n    },\r\n    [setPressed, timeout]\r\n  );\r\n\r\n  /**\r\n   * Disable the current long press (still show as pressed),\r\n   * for example when user scrolls\r\n   */\r\n  const cancelLongPress = useCallback(\r\n    (e: React.MouseEvent | React.TouchEvent | React.PointerEvent) => {\r\n      if (timeout.current) {\r\n        clearTimeout(timeout.current);\r\n        timeout.current = null;\r\n      }\r\n    },\r\n    [timeout]\r\n  );\r\n\r\n  /**\r\n   * Handle move: do not cancel on small movements\r\n   */\r\n  const cancelLongPressOnMove = useCallback(\r\n    (e: React.PointerEvent | React.TouchEvent | React.MouseEvent) => {\r\n      let x = 0;\r\n      let y = 0;\r\n\r\n      if (!origin.current) {\r\n        return;\r\n      }\r\n\r\n      if (\"touches\" in e) {\r\n        if (e.touches.length > 1) {\r\n          cancelLongPress(e);\r\n        } else {\r\n          x = e.touches[0].clientX;\r\n          y = e.touches[0].clientY;\r\n        }\r\n      } else {\r\n        x = e.clientX;\r\n        y = e.clientY;\r\n      }\r\n\r\n      /**\r\n       * Calculate distance from touch origin\r\n       */\r\n      const dx = x - origin.current.x;\r\n      const dy = y - origin.current.y;\r\n      const d2 = dx * dx + dy * dy;\r\n\r\n      if (d2 > movementCancelThreshold) {\r\n        cancelLongPress(e);\r\n      }\r\n    },\r\n    [cancelLongPress]\r\n  );\r\n\r\n  /**\r\n   * Cleaning out any timeouts\r\n   */\r\n  useEffect(() => {\r\n    return () => {\r\n      if (timeout.current) {\r\n        clearTimeout(timeout.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    pressed,\r\n    props: {\r\n      onTouchStart: startLongPress,\r\n      onTouchEnd: endLongPress,\r\n      onTouchMove: cancelLongPressOnMove,\r\n      onTouchCancel: cancelLongPress,\r\n\r\n      onMouseDown: startLongPress,\r\n      onMouseUp: endLongPress,\r\n      onMouseLeave: endLongPress,\r\n      onMouseOut: endLongPress,\r\n    },\r\n    childlockProps: {\r\n      onTouchStart: (e) => e.stopPropagation(),\r\n      onTouchEnd: (e) => e.stopPropagation(),\r\n      onTouchMove: (e) => e.stopPropagation(),\r\n      onTouchCancel: (e) => e.stopPropagation(),\r\n      onMouseDown: (e) => e.stopPropagation(),\r\n      onMouseUp: (e) => e.stopPropagation(),\r\n      onMouseLeave: (e) => e.stopPropagation(),\r\n      onMouseOut: (e) => e.stopPropagation(),\r\n    },\r\n  };\r\n}\r\n\r\nconst movementCancelThresholdInPx = 10;\r\nconst movementCancelThreshold =\r\n  movementCancelThresholdInPx * movementCancelThresholdInPx;\r\n","import \"./MoneyType.scss\";\r\nimport React, { useEffect, useRef } from \"react\"\r\nimport cx from \"classnames\"\r\nimport { MoneyAmount } from \"../../classes/MoneyAmount\";\r\nimport { Type, TypeProps } from \"../Type/Type\";\r\nimport { animate } from \"framer-motion\"\r\n\r\nexport type MoneyTypeProps = {\r\n\tamount: MoneyAmount | number;\r\n\r\n\tcolorIfNegative?: TypeProps[\"color\"];\r\n\tcolorIfPositive?: TypeProps[\"color\"];\r\n\r\n\tanimate?: boolean;\r\n\tdisableAnimationBlur?: boolean;\r\n\tanimationDuration?: number;\r\n\tanimationStiffness?: number;\r\n\r\n} & TypeProps\r\n\r\nexport function MoneyType(props: MoneyTypeProps) {\r\n\r\n\tconst {\r\n\t\tamount,\r\n\r\n\t\tclassName,\r\n\r\n\t\tcolor,\r\n\t\tcolorIfNegative,\r\n\t\tcolorIfPositive,\r\n\r\n\t\tanimate: enableAnimation,\r\n\t\tanimationDuration,\r\n\t\tanimationStiffness,\r\n\t\tdisableAnimationBlur,\r\n\t\t...typeProps\r\n\t} = props\r\n\r\n\tconst moneyAmount = typeof props.amount === \"number\"\r\n\t\t? new MoneyAmount(props.amount)\r\n\t\t: props.amount\r\n\r\n\t/**\r\n\t * Ref to the real component for updating the text value\r\n\t */\r\n\tconst nodeRef = useRef<HTMLSpanElement | null>(null)\r\n\r\n\t/**\r\n\t * Keeping track of the latest value stored in this MoneyType component\r\n\t * for animation\r\n\t */\r\n\tconst latestValueRef = useRef<number>(0)\r\n\r\n\t/**\r\n\t * Animating the text amount, if animations are enabled.\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tconst node = nodeRef.current\r\n\r\n\t\tif (!enableAnimation || !node) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tconst start = latestValueRef.current\r\n\t\tconst end = moneyAmount.value\r\n\r\n\t\tconst controls = animate(start, end, {\r\n\t\t\tduration: animationDuration ?? 0.5,\r\n\t\t\tstiffness: animationStiffness ?? 1,\r\n\t\t\tonUpdate(value) {\r\n\r\n\t\t\t\t// Format new value and show new value\r\n\t\t\t\tconst integerValue = Math.round(value)\r\n\t\t\t\tconst formattedValue = MoneyAmount.format(integerValue)\r\n\r\n\t\t\t\tnode.textContent = formattedValue\r\n\r\n\t\t\t\t// Show blurring, fading and scaling animation while transitioning\r\n\t\t\t\tif (!disableAnimationBlur) {\r\n\r\n\t\t\t\t\t// Get progress from start to finish as percentage\r\n\t\t\t\t\tconst progress = Math.abs(end - value) / Math.abs(end - start)\r\n\r\n\t\t\t\t\t// Get phase from 0 to Pi and its sin-value\r\n\t\t\t\t\tconst phase = progress * Math.PI\r\n\t\t\t\t\tconst sin = Math.sin(phase)\r\n\t\t\t\t\tconst sin2 = sin * sin\r\n\r\n\t\t\t\t\tnode.style.opacity = `${Math.max(1 - sin2, 0.75)}`\r\n\t\t\t\t\tnode.style.filter = `blur(${3 * sin2}px)`\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update the latest value \r\n\t\t\t\tlatestValueRef.current = value\r\n\t\t\t},\r\n\t\t})\r\n\r\n\t\treturn () => controls.stop()\r\n\t}, [enableAnimation, moneyAmount, animationDuration, animationStiffness, disableAnimationBlur])\r\n\r\n\treturn <span className={cx(\"MoneyType\", className, {\r\n\t\tpositive: moneyAmount.isNonNegative,\r\n\t\tnegative: moneyAmount.isNegative,\r\n\t})}>\r\n\t\t<Type\r\n\t\t\tref={nodeRef}\r\n\t\t\tvariant=\"bold\"\r\n\t\t\tcolor={\r\n\t\t\t\tmoneyAmount.isNegative\r\n\t\t\t\t\t? colorIfNegative ?? color\r\n\t\t\t\t\t: colorIfPositive ?? color\r\n\t\t\t}\r\n\t\t\t{...typeProps}\r\n\t\t>\r\n\t\t\t{moneyAmount.format()}\r\n\t\t</Type>\r\n\t</span >\r\n}","import \"./TransactionListItem.scss\";\r\nimport React, { useCallback, useMemo } from \"react\"\r\nimport cx from \"classnames\"\r\nimport { Transaction } from \"../../classes/Transaction\";\r\nimport {\r\n\tCheck as SelectedIcon,\r\n} from \"react-feather\"\r\nimport useLongPress from \"../../hooks/utils/useLongPress\";\r\nimport { useVibration } from \"../../hooks/application/useVibration\";\r\nimport { MoneyType } from \"../MoneyType/MoneyType\";\r\nimport { Type } from \"../Type/Type\";\r\nimport { motion, Variants } from \"framer-motion\";\r\nimport { useTransactionListItemController } from \"./useTransactionListItemController\";\r\n\r\nexport type TransactionListItemProps = {\r\n\ttransaction: Transaction;\r\n}\r\n\r\nexport function TransactionListItem(props: TransactionListItemProps) {\r\n\r\n\tconst controller = useTransactionListItemController(props)\r\n\tconst { handleSelect, handleDeselect, selected, selectionActive } = controller\r\n\r\n\tconst vibrate = useVibration()\r\n\r\n\t/**\r\n\t * Long presses acts as toggle: this function is the callback when a long\r\n\t * press activates\r\n\t */\r\n\tconst handleLongPress = useCallback(() => {\r\n\t\tif (selectionActive) {\r\n\t\t\tvibrate(\"weak\")\r\n\t\t}\r\n\t\tif (selected) {\r\n\t\t\thandleDeselect()\r\n\t\t} else {\r\n\t\t\thandleSelect()\r\n\t\t}\r\n\t}, [handleSelect, handleDeselect, selected, selectionActive, vibrate])\r\n\r\n\t/**\r\n\t * No timeout when selected, else default timeout for long presses\r\n\t */\r\n\tconst longPressTimeout = useMemo(() => {\r\n\t\treturn selectionActive ? 0 : undefined\r\n\t}, [selectionActive])\r\n\r\n\t/**\r\n\t * Long press handler\r\n\t */\r\n\tconst pressHandler = useLongPress(handleLongPress, {\r\n\t\tpressTimeInMs: longPressTimeout,\r\n\t\tdisableVibrate: selectionActive,\r\n\t})\r\n\r\n\treturn <div\r\n\t\tclassName={cx(\"TransactionListItem\", {\r\n\t\t\tpressed: pressHandler.pressed,\r\n\t\t\tupcoming: props.transaction.isUpcoming,\r\n\t\t})}\r\n\t\t{...pressHandler.props}\r\n\t\tonContextMenu={e => {\r\n\t\t\te.stopPropagation()\r\n\t\t\tcontroller.handleContextMenu(e)\r\n\t\t}}\r\n\t>\r\n\t\t<div className={cx(\"icon\", {\r\n\t\t\tpressed: pressHandler.pressed,\r\n\t\t\tselected: controller.selected,\r\n\t\t\tselectionActive: controller.selectionActive\r\n\t\t})}>\r\n\t\t\t<motion.div\r\n\t\t\t\tvariants={iconVariants}\r\n\t\t\t\tanimate={\r\n\t\t\t\t\tcontroller.selectionActive\r\n\t\t\t\t\t\t? controller.selected\r\n\t\t\t\t\t\t\t? \"selected\"\r\n\t\t\t\t\t\t\t: \"unselected\"\r\n\t\t\t\t\t\t: \"regular\"\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"iconContainer\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tif (controller.selected) {\r\n\t\t\t\t\t\t\tcontroller.handleDeselect()\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcontroller.handleSelect()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvibrate(\"weak\")\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t{...pressHandler.childlockProps}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcontroller.selectionActive\r\n\t\t\t\t\t\t\t? controller.selected ? <SelectedIcon /> : null\r\n\t\t\t\t\t\t\t: <span className=\"emoji\">{props.transaction.icon}</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</motion.div>\r\n\t\t</div>\r\n\t\t<div className=\"category\">\r\n\t\t\t<Type color=\"gray-800\" size=\"md\" variant=\"bold\">\r\n\t\t\t\t{props.transaction.category.value}\r\n\t\t\t</Type>\r\n\t\t</div>\r\n\t\t<div className=\"comment\">\r\n\t\t\t<Type color=\"gray-600\" size=\"md\" variant=\"regular\">\r\n\t\t\t\t{props.transaction.comment}\r\n\t\t\t</Type>\r\n\t\t</div>\r\n\t\t<div className={cx(\"amount\")}>\r\n\t\t\t<MoneyType\r\n\t\t\t\tamount={props.transaction.amount}\r\n\t\t\t\tcolorIfPositive=\"green-600\"\r\n\t\t\t\tcolorIfNegative=\"red-600\"\r\n\t\t\t\tsize=\"lg\"\r\n\t\t\t\tvariant=\"bold\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t</div >\r\n}\r\n\r\nconst iconVariants: Variants = {\r\n\r\n\tselected: {\r\n\t\tscale: 1.4,\r\n\t\ttransition: {\r\n\t\t\trepeat: 1,\r\n\t\t\trepeatType: \"mirror\",\r\n\t\t\ttype: \"spring\",\r\n\t\t\tduration: 0.2,\r\n\t\t\tbounce: 1,\r\n\t\t}\r\n\t},\r\n\tunselected: {\r\n\t\tscale: 1,\r\n\t},\r\n\tregular: {\r\n\t\tscale: 1,\r\n\t},\r\n}","import React, { useCallback, useMemo } from \"react\"\r\nimport { isMobile } from \"react-device-detect\"\r\nimport { useStoreActions, useStoreState } from \"../../store\"\r\nimport { useTransactionContextMenu } from \"../../contexts/TransactionContextMenu.context\"\r\nimport { TransactionListItemProps } from \"./TransactionListItem\"\r\n\r\nexport function useTransactionListItemController(props: TransactionListItemProps) {\r\n\r\n\t/**\r\n\t * Selected\r\n\t */\r\n\tconst selection = useStoreState(_ => _.selection.selection)\r\n\tconst selected = useMemo(() => {\r\n\t\treturn selection.some(_ => _.id === props.transaction.id)\r\n\t}, [props.transaction, selection])\r\n\r\n\t/**\r\n\t * Handle selection\r\n\t */\r\n\tconst select = useStoreActions(_ => _.selection.select)\r\n\tconst handleSelect = useCallback(() => {\r\n\t\tselect(props.transaction.id)\r\n\t}, [props.transaction, select])\r\n\r\n\t/**\r\n\t * Handle deselection\r\n\t */\r\n\tconst deselect = useStoreActions(_ => _.selection.deselect)\r\n\tconst handleDeselect = useCallback(() => {\r\n\t\tdeselect(props.transaction.id)\r\n\t}, [props.transaction, deselect])\r\n\r\n\t/**\r\n\t * Selection active\r\n\t */\r\n\tconst selectionActive = useStoreState(_ => _.selection.selectionActive)\r\n\r\n\t/**\r\n\t * Handle context menu\r\n\t */\r\n\tconst contextMenu = useTransactionContextMenu()\r\n\tconst handleContextMenu = useCallback((e: React.MouseEvent) => {\r\n\t\te.preventDefault()\r\n\t\tif (isMobile) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tcontextMenu.setPosition({ top: e.clientY, left: e.clientX })\r\n\t\tcontextMenu.setTransaction(props.transaction)\r\n\t}, [contextMenu, props.transaction])\r\n\tconst contextMenuSelected = useMemo(() => {\r\n\t\tif (contextMenu.transaction) {\r\n\t\t\treturn contextMenu.transaction.id === props.transaction.id\r\n\t\t}\r\n\t\treturn false\r\n\t}, [contextMenu, props.transaction])\r\n\r\n\treturn {\r\n\t\tselected: selected || contextMenuSelected,\r\n\t\thandleSelect,\r\n\t\thandleDeselect,\r\n\t\tselectionActive,\r\n\t\thandleContextMenu,\r\n\t}\r\n}","import { useEffect, useState } from \"react\";\r\n\r\nfunction getRandomValue(min: number, max: number) {\r\n  return min + Math.random() * (max - min);\r\n}\r\n\r\nexport function useRandomValue(min: number, max: number) {\r\n  const [value, setValue] = useState(min);\r\n\r\n  useEffect(() => {\r\n    setValue(getRandomValue(min, max));\r\n  }, [min, max]);\r\n\r\n  return value;\r\n}\r\n","import \"./TransactionListItemSkeleton.scss\";\r\nimport React, { useState } from \"react\"\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport { useRandomValue } from \"../../hooks/utils/useRandomValue\";\r\n\r\nexport type TransactionListItemSkeletonProps = {\r\n\ti: number;\r\n}\r\n\r\nexport function TransactionListItemSkeleton(props: TransactionListItemSkeletonProps) {\r\n\r\n\tconst headerWidth = useRandomValue(48, 64)\r\n\tconst categoryWidth = useRandomValue(20, 40)\r\n\tconst commentWidth = useRandomValue(20, 80)\r\n\tconst amountWidth = useRandomValue(32, 64)\r\n\r\n\tconst [shouldShowHeader] = useState(() => props.i === 0 || Math.random() < 0.3)\r\n\r\n\treturn <div className=\"TransactionListItemSkeleton\">\r\n\t\t{\r\n\t\t\tshouldShowHeader && (\r\n\t\t\t\t<div className=\"TransactionListItemSkeletonHeader\" >\r\n\t\t\t\t\t<Skeleton variant=\"rect\" width={headerWidth} height=\"100%\" animation=\"wave\" />\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t\t<div className=\"TransactionListItemSkeletonBody\">\r\n\t\t\t<div className=\"icon\">\r\n\t\t\t\t<Skeleton variant=\"circle\" width=\"100%\" height=\"100%\" animation=\"wave\" />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"category\">\r\n\t\t\t\t<Skeleton variant=\"rect\" width={categoryWidth + \"%\"} height=\"100%\" animation=\"wave\" />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"comment\">\r\n\t\t\t\t<Skeleton variant=\"rect\" width={commentWidth + \"%\"} height=\"100%\" animation=\"wave\" />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"amount\">\r\n\t\t\t\t<Skeleton variant=\"rect\" width={amountWidth} height=\"100%\" animation=\"wave\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div >\r\n}","import \"./TransactionList.scss\";\r\nimport React, { createRef, useEffect } from \"react\"\r\nimport { TransactionListItem } from \"../TransactionListItem/TransactionListItem\";\r\nimport { format } from \"date-fns\"\r\nimport { AutoSizer, List } from \"react-virtualized\"\r\nimport { Type } from \"../Type/Type\";\r\nimport { TransactionListItemSkeleton } from \"../TransactionListItemSkeleton/TransactionListItemSkeleton\";\r\nimport { useTransactionListController } from \"./useTransactionListController\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { theme } from \"../../styles/main\";\r\nimport { DataUtils } from \"../../utils/DataUtils/DataUtils\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport type TransactionListProps = {\r\n\tshowSkeletons?: boolean;\r\n}\r\n\r\nconst virtualizedListRef = createRef<List>()\r\n\r\nexport function TransactionList(props: TransactionListProps) {\r\n\r\n\tconst controller = useTransactionListController(props)\r\n\r\n\t// Recalculate virtualized list row heights each time the \r\n\t// props change\r\n\tuseEffect(() => {\r\n\t\tvirtualizedListRef.current?.recomputeRowHeights()\r\n\t}, [props, controller.itemsByDates])\r\n\r\n\t// Render skeletons\r\n\tif (controller.showSkeletons) {\r\n\t\treturn <div className=\"TransactionList\">\r\n\t\t\t{\r\n\t\t\t\tDataUtils.createIndexArray(16).map(i => {\r\n\t\t\t\t\treturn <TransactionListItemSkeleton i={i} key={i} />\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div >\r\n\t}\r\n\r\n\t// Render list\r\n\treturn <motion.div layout=\"position\" className=\"TransactionList\">\r\n\t\t<AutoSizer className=\"autoSizer\">\r\n\t\t\t{\r\n\t\t\t\t(autoSizer) => <List\r\n\t\t\t\t\tref={virtualizedListRef}\r\n\t\t\t\t\tclassName=\"virtualizedList\"\r\n\t\t\t\t\theight={autoSizer.height}\r\n\t\t\t\t\twidth={autoSizer.width}\r\n\t\t\t\t\trowCount={controller.itemsByDates.length}\r\n\t\t\t\t\trowHeight={({ index }) => {\r\n\t\t\t\t\t\t// Title total height    40 px\r\n\t\t\t\t\t\t// Item total height     80 px\r\n\t\t\t\t\t\treturn controller.itemsByDates[index].items.length * 80 + 40\r\n\t\t\t\t\t\t\t+ (index === 0 ? Number(theme.fixed_spacing_4.replace(/\\D/g, \"\")) : 0)\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tnoRowsRenderer={() => {\r\n\t\t\t\t\t\treturn <div className=\"emptyTransactions\">\r\n\t\t\t\t\t\t\t<Type >\r\n\t\t\t\t\t\t\t\t{\"No transactions. Start by creating your first transaction.\"}\r\n\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tonClick={controller.handleCreate}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{\"Create\"}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}}\r\n\t\t\t\t\trowRenderer={(rowProps) => {\r\n\t\t\t\t\t\tconst entry = controller.itemsByDates[rowProps.index]\r\n\r\n\t\t\t\t\t\treturn <div\r\n\t\t\t\t\t\t\tclassName=\"dateGroup\"\r\n\t\t\t\t\t\t\tkey={rowProps.key}\r\n\t\t\t\t\t\t\tstyle={rowProps.style}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className=\"dateGroupHeader\">\r\n\t\t\t\t\t\t\t\t<Type variant=\"bold\" color=\"gray-700\" size=\"md\">\r\n\t\t\t\t\t\t\t\t\t{toDatestring(entry.date)}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tentry.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\treturn <li key={item.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<TransactionListItem transaction={item} />\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t</AutoSizer>\r\n\t</motion.div>\r\n}\r\n\r\nfunction toDatestring(date: Date) {\r\n\treturn date.getFullYear() === currentYear\r\n\t\t? format(date, \"dd.MM.\")\r\n\t\t: format(date, \"dd.MM.yyyy\")\r\n}\r\n\r\nconst currentYear = new Date().getFullYear()","import { useMemo, useCallback } from \"react\"\r\nimport { useStoreState } from \"../../store\"\r\nimport { DateUtils } from \"../../utils/DateUtils/DateUtils\"\r\nimport { useTransactionCreatorDrawerOpenState } from \"../TransactionCreatorDrawer/useTransactionCreatorDrawerController\"\r\nimport { TransactionListProps } from \"./TransactionList\"\r\n\r\nexport function useTransactionListController(props: TransactionListProps) {\r\n\r\n\tconst items = useStoreState(_ => _.transactions.filteredItems)\r\n\r\n\tconst itemsByDates = useMemo(() => {\r\n\t\treturn DateUtils.groupByDate(items, (_) => _.date, { sort: true });\r\n\t}, [items])\r\n\r\n\tconst initializedUser = useStoreState(_ => _.auth.initialized)\r\n\tconst initializedItems = useStoreState(_ => _.transactions.initialized)\r\n\tconst shouldShowSkeletons = !initializedItems || !initializedUser\r\n\tconst showSkeletons = props.showSkeletons && shouldShowSkeletons\r\n\r\n\tconst [, setCreateMenuOpen] = useTransactionCreatorDrawerOpenState()\r\n\r\n\tconst handleCreate = useCallback(() => {\r\n\t\tsetCreateMenuOpen(true)\r\n\t}, [setCreateMenuOpen])\r\n\r\n\r\n\treturn {\r\n\t\titemsByDates,\r\n\t\tshowSkeletons,\r\n\t\thandleCreate\r\n\t}\r\n\r\n}","import { useEffect, useState, useCallback, useMemo } from \"react\";\r\n\r\nexport function useMedia(query: string) {\r\n  /**\r\n   * Media query list from query\r\n   */\r\n  const mediaQueryList = useMemo(() => {\r\n    return window.matchMedia(query);\r\n  }, [query]);\r\n\r\n  /**\r\n   * Current value\r\n   */\r\n  const [value, setValue] = useState<boolean>(false);\r\n\r\n  /**\r\n   * Changehandler: sets the current value\r\n   */\r\n  const changeHandler = useCallback(() => {\r\n    setValue(mediaQueryList.matches);\r\n  }, [mediaQueryList]);\r\n\r\n  /**\r\n   * Listening to changes and cleanup\r\n   */\r\n  useEffect(() => {\r\n    changeHandler();\r\n    mediaQueryList.addEventListener(\"change\", changeHandler);\r\n    return () => {\r\n      mediaQueryList.removeEventListener(\"change\", changeHandler);\r\n    };\r\n  }, [mediaQueryList, changeHandler]);\r\n\r\n  /**\r\n   * Returning value\r\n   */\r\n  return value;\r\n}\r\n\r\n/**\r\n * (min-width: $px) media query hook wrapper\r\n */\r\nexport function useMinWidthMedia(minWidth: number) {\r\n  const query = `(min-width: ${minWidth}px)`;\r\n  return useMedia(query);\r\n}\r\n\r\n/**\r\n * (max-width: $px) media query hook wrapper\r\n */\r\nexport function useMaxWidthMedia(maxWidth: number) {\r\n  const query = `(max-width: ${maxWidth}px)`;\r\n  return useMedia(query);\r\n}\r\n\r\n/**\r\n * Responsive media queries for app breakpoints\r\n *\r\n * SM breakpoint at 600px\r\n */\r\nexport function useSmMedia() {\r\n  const query = `(min-width: 600px)`;\r\n  return useMedia(query);\r\n}\r\n\r\n/**\r\n * Responsive media queries for app breakpoints\r\n *\r\n * MD breakpoint at 900px\r\n */\r\nexport function useMdMedia() {\r\n  const query = `(min-width: 900px)`;\r\n  return useMedia(query);\r\n}\r\n\r\n/**\r\n * Responsive media queries for app breakpoints\r\n *\r\n * LG breakpoint at 1200px\r\n */\r\nexport function useLgMedia() {\r\n  const query = `(min-width: 1200px)`;\r\n  return useMedia(query);\r\n}\r\n","import \"./IntervalPickerForm.scss\";\r\nimport React from \"react\"\r\nimport { IconButton, Button } from \"@material-ui/core\";\r\nimport {\r\n\tArrowBack as PreviousIcon,\r\n\tArrowForward as NextIcon,\r\n\tRadioButtonUnchecked as NowIcon,\r\n\tToday as CalendarIcon\r\n} from \"@material-ui/icons\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport { Type } from \"../Type/Type\";\r\nimport { MAXIMUM_DATE, MINIMUM_DATE } from \"../../constants\";\r\nimport { DateUtils } from \"../../utils/DateUtils/DateUtils\";\r\nimport { useIntervalPickerFormController } from \"./useIntervalPickerFormController\";\r\n\r\nexport type IntervalPickerFormProps = {\r\n\tonConfirm?(): void;\r\n}\r\n\r\nexport function IntervalPickerForm(props: IntervalPickerFormProps) {\r\n\r\n\tconst controller = useIntervalPickerFormController(props)\r\n\r\n\treturn <div className=\"IntervalPickerForm\">\r\n\r\n\t\t<section className=\"title\">\r\n\r\n\t\t\t<div className=\"currentInterval\">\r\n\r\n\t\t\t\t<CalendarIcon />\r\n\r\n\t\t\t\t<Type variant=\"bold\">\r\n\t\t\t\t\t{controller.intervalString}\r\n\t\t\t\t</Type>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"nextOrPreviousInterval\">\r\n\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tdisabled={controller.isAll}\r\n\t\t\t\t\tonClick={controller.onPrevious}\r\n\t\t\t\t>\r\n\t\t\t\t\t<PreviousIcon />\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tonClick={controller.onNow}\r\n\t\t\t\t>\r\n\t\t\t\t\t<NowIcon />\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tdisabled={controller.isAll}\r\n\t\t\t\t\tonClick={controller.onNext}\r\n\t\t\t\t>\r\n\t\t\t\t\t<NextIcon />\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</section>\r\n\r\n\t\t<section className=\"intervalLength\">\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"text\"\r\n\t\t\t\tcolor={controller.isDay ? \"primary\" : \"default\"}\r\n\t\t\t\tonClick={controller.onDay}\r\n\t\t\t>\r\n\t\t\t\t{\"Day\"}\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"text\"\r\n\t\t\t\tcolor={controller.isWeek ? \"primary\" : \"default\"}\r\n\t\t\t\tonClick={controller.onWeek}\r\n\t\t\t>\r\n\t\t\t\t{\"Week\"}\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"text\"\r\n\t\t\t\tcolor={controller.isMonth ? \"primary\" : \"default\"}\r\n\t\t\t\tonClick={controller.onMonth}\r\n\t\t\t>\r\n\t\t\t\t{\"Month\"}\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"text\"\r\n\t\t\t\tcolor={controller.isYear ? \"primary\" : \"default\"}\r\n\t\t\t\tonClick={controller.onYear}\r\n\t\t\t>\r\n\t\t\t\t{\"Year\"}\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"text\"\r\n\t\t\t\tcolor={controller.isAll ? \"primary\" : \"default\"}\r\n\t\t\t\tonClick={controller.onAll}\r\n\t\t\t>\r\n\t\t\t\t{\"All\"}\r\n\t\t\t</Button>\r\n\r\n\t\t</section>\r\n\r\n\t\t<section className=\"dateSection\">\r\n\r\n\t\t\t<DatePicker\r\n\t\t\t\tvalue={DateUtils.compareDate(controller.startDate, \"==\", MINIMUM_DATE) ? null : controller.startDate}\r\n\t\t\t\tonChange={d => controller.setStartDate(d as Date)}\r\n\t\t\t\tformat=\"dd/MM/yyyy\"\r\n\t\t\t\tinputVariant=\"outlined\"\r\n\t\t\t\tvariant=\"inline\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tlabel=\"From\"\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n\r\n\t\t\t<DatePicker\r\n\t\t\t\tvalue={DateUtils.compareDate(controller.endDate, \"==\", MAXIMUM_DATE) ? null : controller.endDate}\r\n\t\t\t\tonChange={d => controller.setEndDate(d as Date)}\r\n\t\t\t\tformat=\"dd/MM/yyyy\"\r\n\t\t\t\tinputVariant=\"outlined\"\r\n\t\t\t\tvariant=\"inline\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tlabel=\"To\"\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n\r\n\t\t</section>\r\n\r\n\t\t{\r\n\t\t\tprops.onConfirm && <Button\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tfullWidth\r\n\t\t\t\tonClick={props.onConfirm}\r\n\t\t\t>\r\n\t\t\t\t{\"OK\"}\r\n\t\t\t</Button>\r\n\t\t}\r\n\r\n\t</div>\r\n}","import { useStoreState, useStoreActions } from \"../../store\"\r\nimport { IntervalPickerFormProps } from \"./IntervalPickerForm\"\r\n\r\nexport function useIntervalPickerFormController(props: IntervalPickerFormProps) {\r\n\r\n\tconst intervalString = useStoreState(_ => _.interval.smartDisplayString)\r\n\r\n\tconst isDay = useStoreState(_ => _.interval.isDay)\r\n\tconst isWeek = useStoreState(_ => _.interval.isWeek)\r\n\tconst isMonth = useStoreState(_ => _.interval.isMonth)\r\n\tconst isYear = useStoreState(_ => _.interval.isYear)\r\n\tconst isAll = useStoreState(_ => _.interval.isAll)\r\n\r\n\tconst toDay = useStoreActions(_ => _.interval.dayInterval)\r\n\tconst toWeek = useStoreActions(_ => _.interval.weekInterval)\r\n\tconst toMonth = useStoreActions(_ => _.interval.monthInterval)\r\n\tconst toYear = useStoreActions(_ => _.interval.yearInterval)\r\n\tconst toAll = useStoreActions(_ => _.interval.allInterval)\r\n\r\n\tconst previous = useStoreActions(_ => _.interval.previousInterval)\r\n\tconst next = useStoreActions(_ => _.interval.nextInterval)\r\n\r\n\tconst now = useStoreActions(_ => _.interval.now)\r\n\r\n\tconst includesToday = useStoreState(_ => _.interval.includesToday)\r\n\r\n\tconst startDate = useStoreState(_ => _.interval.startDate)\r\n\tconst endDate = useStoreState(_ => _.interval.endDate)\r\n\r\n\tconst setStartDate = useStoreActions(_ => _.interval.setStartDate)\r\n\tconst setEndDate = useStoreActions(_ => _.interval.setEndDate)\r\n\r\n\treturn {\r\n\r\n\t\tonConfirm: props.onConfirm,\r\n\r\n\t\tintervalString: intervalString,\r\n\r\n\t\tisDay: isDay,\r\n\t\tisWeek: isWeek,\r\n\t\tisMonth: isMonth,\r\n\t\tisYear: isYear,\r\n\t\tisAll: isAll,\r\n\r\n\t\tonDay: () => toDay(),\r\n\t\tonWeek: () => toWeek(),\r\n\t\tonMonth: () => toMonth(),\r\n\t\tonYear: () => toYear(),\r\n\t\tonAll: () => toAll(),\r\n\r\n\t\tonPrevious: () => previous(),\r\n\t\tonNext: () => next(),\r\n\r\n\t\tonNow: () => now(),\r\n\r\n\t\tincludesToday: includesToday,\r\n\r\n\t\tstartDate: startDate,\r\n\t\tendDate: endDate,\r\n\t\tsetStartDate: setStartDate,\r\n\t\tsetEndDate: setEndDate,\r\n\r\n\t}\r\n}","import { useCallback, useMemo } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\n\r\nexport function useHashOpenState(\r\n  targetHash: string\r\n): [boolean, (value: boolean) => void] {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  if (targetHash.includes(\"@\")) {\r\n    throw new Error(\"Hash cannot include '@' character\");\r\n  }\r\n\r\n  const open = useMemo(() => {\r\n    return location.hash.substring(1) === targetHash;\r\n  }, [location, targetHash]);\r\n\r\n  const setOpen = useCallback(\r\n    (target: boolean) => {\r\n      if (target === true) {\r\n        if (!open) {\r\n          history.push({ hash: targetHash, search: location.search });\r\n        }\r\n      } else {\r\n        if (open) {\r\n          history.goBack();\r\n        }\r\n      }\r\n    },\r\n    [history, targetHash, open, location.search]\r\n  );\r\n\r\n  return [open, setOpen];\r\n}\r\n","import classnames from \"classnames\";\r\n\r\ntype ClassnamesArgs = Parameters<typeof classnames>;\r\n\r\nexport function createClassnames(...defaults: ClassnamesArgs) {\r\n  return function (...classes: ClassnamesArgs) {\r\n    return classnames(...defaults, ...classes);\r\n  };\r\n}\r\n","import \"./IntervalManager.scss\";\r\nimport React from \"react\"\r\nimport { isMobile } from \"react-device-detect\"\r\nimport { Button, Drawer, IconButton, Menu } from \"@material-ui/core\";\r\nimport { ArrowBack, ArrowForward, DateRange, RadioButtonUnchecked as TodayIcon } from \"@material-ui/icons\"\r\nimport { useSmMedia } from \"../../hooks/utils/useMedia\";\r\nimport { IntervalPickerForm } from \"../IntervalPickerForm/IntervalPickerForm\";\r\nimport { useIntervalManagerController } from \"./useIntervalManagerController\";\r\nimport { createClassnames } from \"../../utils/Utils/createClassnames\";\r\nimport { motion } from \"framer-motion\"\r\n\r\nexport type IntervalManagerProps = {\r\n\thideControls?: boolean;\r\n\treverseControls?: boolean;\r\n\thideNowControl?: boolean;\r\n}\r\n\r\nexport function IntervalManager(props: IntervalManagerProps) {\r\n\r\n\tconst cx = createClassnames({\r\n\t\tcontrolsHidden: props.hideControls,\r\n\t\tcontrolsReversed: props.reverseControls,\r\n\t\tnowControlHidden: props.hideControls\r\n\t})\r\n\r\n\tconst controller = useIntervalManagerController(props)\r\n\r\n\tconst isDesktopLayout = useSmMedia()\r\n\tconst menuLayout = isDesktopLayout && !isMobile\r\n\r\n\tconst dateButton = <motion.div layout=\"position\">\r\n\t\t<Button\r\n\t\t\tclassName={cx(\"date-button\")}\r\n\t\t\tstartIcon={<DateRange />}\r\n\t\t\tonClick={e => {\r\n\t\t\t\tcontroller.setIntervalPickerOpen(true)\r\n\t\t\t\tcontroller.setIntervalPickerMenuAnchor(e.currentTarget)\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<span className={cx(\"label\")}>\r\n\t\t\t\t{controller.intervalLabel}\r\n\t\t\t</span>\r\n\t\t</Button>\r\n\t</motion.div>\r\n\r\n\treturn <>\r\n\r\n\r\n\t\t<motion.div className={cx(\"IntervalManager\")}>\r\n\t\t\t{props.reverseControls ? dateButton : null}\r\n\t\t\t{\r\n\t\t\t\tcontroller.shouldShowControls &&\r\n\t\t\t\t<motion.div layout=\"position\" className={cx(\"arrow-buttons\")}>\r\n\t\t\t\t\t<IconButton onClick={controller.handlePrevious}>\r\n\t\t\t\t\t\t<ArrowBack />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops.hideNowControl\r\n\t\t\t\t\t\t\t? null\r\n\t\t\t\t\t\t\t: <IconButton onClick={controller.handleToday}>\r\n\t\t\t\t\t\t\t\t<TodayIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<IconButton onClick={controller.handleNext}>\r\n\t\t\t\t\t\t<ArrowForward />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</motion.div>\r\n\t\t\t}\r\n\t\t\t{!props.reverseControls ? dateButton : null}\r\n\t\t</motion.div>\r\n\r\n\t\t{\r\n\t\t\t/**\r\n\t\t\t * Render interval picker menu inside menu component\r\n\t\t\t * on larger screens and bottom drawer on smaller screens.\r\n\t\t\t */\r\n\t\t\tmenuLayout\r\n\t\t\t\t? <Menu\r\n\t\t\t\t\topen={!!controller.intervalPickerMenuAnchor && controller.intervalPickerOpen}\r\n\t\t\t\t\tonClose={() => {\r\n\t\t\t\t\t\tcontroller.setIntervalPickerMenuAnchor(undefined)\r\n\t\t\t\t\t\tcontroller.setIntervalPickerOpen(false)\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tanchorEl={controller.intervalPickerMenuAnchor}\r\n\t\t\t\t\tanchorOrigin={{ horizontal: \"left\", vertical: \"bottom\" }}\r\n\t\t\t\t\ttransformOrigin={{ horizontal: \"left\", vertical: \"top\" }}\r\n\t\t\t\t\tgetContentAnchorEl={null}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={cx(\"IntervalManager__Menu\")}>\r\n\t\t\t\t\t\t<IntervalPickerForm\r\n\t\t\t\t\t\t\tonConfirm={() => {\r\n\t\t\t\t\t\t\t\tcontroller.setIntervalPickerMenuAnchor(undefined)\r\n\t\t\t\t\t\t\t\tcontroller.setIntervalPickerOpen(false)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Menu>\r\n\t\t\t\t: <Drawer\r\n\t\t\t\t\topen={!!controller.intervalPickerMenuAnchor && controller.intervalPickerOpen}\r\n\t\t\t\t\tonClose={() => {\r\n\t\t\t\t\t\tcontroller.setIntervalPickerMenuAnchor(undefined)\r\n\t\t\t\t\t\tcontroller.setIntervalPickerOpen(false)\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tanchor={\"bottom\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={cx(\"IntervalManager__Drawer\")}>\r\n\t\t\t\t\t\t<IntervalPickerForm\r\n\t\t\t\t\t\t\tonConfirm={() => {\r\n\t\t\t\t\t\t\t\tcontroller.setIntervalPickerMenuAnchor(undefined)\r\n\t\t\t\t\t\t\t\tcontroller.setIntervalPickerOpen(false)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Drawer>\r\n\t\t}\r\n\r\n\t</>\r\n}","import { useState } from \"react\"\r\nimport { useHashOpenState } from \"../../hooks/state/useHashOpenState\"\r\nimport { useStoreActions, useStoreState } from \"../../store\"\r\nimport { IntervalManagerProps } from \"./IntervalManager\"\r\n\r\nexport function useIntervalManagerController(props: IntervalManagerProps) {\r\n\r\n\tconst intervalLabel = useStoreState(_ => _.interval.smartDisplayString)\r\n\tconst includesToday = useStoreState(_ => _.interval.includesToday)\r\n\r\n\tconst handleToday = useStoreActions(_ => _.interval.now)\r\n\tconst handlePrevious = useStoreActions(_ => _.interval.previousInterval)\r\n\tconst handleNext = useStoreActions(_ => _.interval.nextInterval)\r\n\r\n\tconst shouldShowControls = props.hideControls !== true\r\n\r\n\tconst [intervalPickerOpen, setIntervalPickerOpen] = useHashOpenState(\"interval\")\r\n\tconst [intervalPickerMenuAnchor, setIntervalPickerMenuAnchor] = useState<HTMLElement>()\r\n\r\n\treturn {\r\n\t\tintervalLabel,\r\n\t\tincludesToday,\r\n\t\thandleToday: () => handleToday(),\r\n\t\thandlePrevious: () => handlePrevious(),\r\n\t\thandleNext: () => handleNext(),\r\n\t\tshouldShowControls,\r\n\t\tintervalPickerOpen,\r\n\t\tsetIntervalPickerOpen,\r\n\t\tintervalPickerMenuAnchor,\r\n\t\tsetIntervalPickerMenuAnchor,\r\n\t}\r\n}","import { useCallback, useEffect, useState } from \"react\";\r\nimport { useBooleanQueryState } from \"../../hooks/state/useBooleanQueryState\";\r\nimport { useDebounce } from \"../../hooks/utils/useDebounce\";\r\nimport { useStoreActions } from \"../../store\";\r\nimport { TransactionsFilterProps } from \"./TransactionsFilter\";\r\n\r\nexport function useTransactionsFilterController(\r\n  props: TransactionsFilterProps\r\n) {\r\n  const setSearchTerm = useStoreActions((_) => _.transactions.setSearchTerm);\r\n\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const [open, setOpen] = useBooleanQueryState(\"search\", \"replace\", \"open\");\r\n  const onOpen = useCallback(() => setOpen(true), [setOpen]);\r\n  const onClose = useCallback(() => setOpen(false), [setOpen]);\r\n\r\n  const debouncedInput = useDebounce(input, 100);\r\n\r\n  useEffect(() => {\r\n    if (open) {\r\n      setSearchTerm(debouncedInput);\r\n    } else {\r\n      setSearchTerm(\"\");\r\n    }\r\n  }, [debouncedInput, open, setSearchTerm]);\r\n\r\n  return {\r\n    open,\r\n    onOpen,\r\n    onClose,\r\n    input,\r\n    setInput,\r\n  };\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\n/**\r\n * Credit:\r\n * https://usehooks.com/useDebounce/\r\n */\r\nexport function useDebounce<T>(value: T, delay: number) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Update debounced value after delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      // Cancel the timeout if value changes (also on delay change or unmount)\r\n      // This is how we prevent debounced value from updating if value is changed ...\r\n      // .. within the delay period. Timeout gets cleared and restarted.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    [value, delay] // Only re-call effect if value or delay changes\r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport function useTrueAfterTimeout(timeout: number) {\r\n  const [value, setValue] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const timeoutId = setTimeout(() => {\r\n      setValue(true);\r\n    }, timeout);\r\n\r\n    return () => window.clearTimeout(timeoutId);\r\n  }, [timeout, setValue]);\r\n\r\n  return value;\r\n}\r\n","import \"./TransactionsFilter.scss\";\r\nimport React, { useRef } from \"react\"\r\nimport cx from \"classnames\"\r\nimport { Search as FilterIcon, Clear as CloseIcon } from \"@material-ui/icons\"\r\nimport { ButtonBase } from \"@material-ui/core\";\r\nimport { useMdMedia } from \"../../hooks/utils/useMedia\";\r\nimport { useTransactionsFilterController } from \"./useTransactionsFilterController\"\r\nimport { Type } from \"../Type/Type\";\r\nimport { AnimatePresence, AnimateSharedLayout, motion } from \"framer-motion\";\r\nimport { useTrueAfterTimeout } from \"../../hooks/utils/useTrueAfterTimeout\";\r\n\r\nexport type TransactionsFilterProps = {\r\n\r\n}\r\n\r\nexport function TransactionsFilter(props: TransactionsFilterProps) {\r\n\r\n\tconst trueAfterTimeout = useTrueAfterTimeout(100)\r\n\tconst controller = useTransactionsFilterController(props)\r\n\tconst isDesktopLayout = useMdMedia()\r\n\r\n\tconst inputRef = useRef<HTMLInputElement | null>(null)\r\n\r\n\treturn <div className=\"TransactionsFilter\">\r\n\t\t<AnimateSharedLayout>\r\n\t\t\t<motion.div\r\n\t\t\t\tlayout={trueAfterTimeout}\r\n\t\t\t\tclassName={cx(\"container\", { open: controller.open })}\r\n\t\t\t>\r\n\t\t\t\t<ButtonBase\r\n\t\t\t\t\tfocusRipple\r\n\t\t\t\t\tdisableRipple={controller.open}\r\n\t\t\t\t\tclassName={cx({ open: controller.open })}\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tif (!controller.open) {\r\n\t\t\t\t\t\t\tcontroller.onOpen()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tinputRef.current?.focus()\r\n\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<motion.div\r\n\t\t\t\t\t\tlayout={trueAfterTimeout}\r\n\t\t\t\t\t\tclassName={cx(\"buttonBase\", { open: controller.open })}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<motion.span\r\n\t\t\t\t\t\t\tclassName=\"icon startIcon\"\r\n\t\t\t\t\t\t\tlayout={trueAfterTimeout ? \"position\" : false}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<FilterIcon />\r\n\t\t\t\t\t\t</motion.span>\r\n\t\t\t\t\t\t<AnimatePresence>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t(!controller.open && isDesktopLayout) && <motion.span\r\n\t\t\t\t\t\t\t\t\ttransition={{ duration: 0.4 }}\r\n\t\t\t\t\t\t\t\t\tlayout=\"position\"\r\n\t\t\t\t\t\t\t\t\tinitial={{ opacity: 0, scale: 1 }}\r\n\t\t\t\t\t\t\t\t\tanimate={{ opacity: 1, scale: 1 }}\r\n\t\t\t\t\t\t\t\t\texit={{ opacity: 0, scale: 0 }}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<Type variant=\"boldcaps\" >\r\n\t\t\t\t\t\t\t\t\t\t{\"Search\"}\r\n\t\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t\t</motion.span>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</AnimatePresence>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcontroller.open && <motion.span\r\n\t\t\t\t\t\t\t\tclassName={cx(\"inputContainer\", { open: controller.open })}\r\n\t\t\t\t\t\t\t\tlayout={trueAfterTimeout ? \"position\" : false}\r\n\t\t\t\t\t\t\t\tinitial={{ opacity: 0, scale: 0 }}\r\n\t\t\t\t\t\t\t\tanimate={{ opacity: 1, scale: 1 }}\r\n\t\t\t\t\t\t\t\texit={{ opacity: 0, scale: 0 }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\t\t\t\t\tclassName=\"input\"\r\n\t\t\t\t\t\t\t\t\tvalue={controller.input}\r\n\t\t\t\t\t\t\t\t\tonChange={(e) => controller.setInput(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</motion.span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcontroller.open && <motion.span\r\n\t\t\t\t\t\t\t\ttransition={{ duration: 0.4 }}\r\n\t\t\t\t\t\t\t\tinitial={{ opacity: 0, y: -10 }}\r\n\t\t\t\t\t\t\t\tanimate={{ opacity: 1, y: 0 }}\r\n\t\t\t\t\t\t\t\tclassName=\"icon endIcon iconButton\"\r\n\t\t\t\t\t\t\t\tlayout={trueAfterTimeout ? \"position\" : false}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div className=\"iconButtonChild\">\r\n\t\t\t\t\t\t\t\t\t<CloseIcon\r\n\t\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\t\te.stopPropagation()\r\n\t\t\t\t\t\t\t\t\t\t\tcontroller.onClose()\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</motion.span>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</motion.div>\r\n\t\t\t\t</ButtonBase>\r\n\t\t\t</motion.div>\r\n\t\t</AnimateSharedLayout>\r\n\t</div>\r\n}","import \"./ActionsPanel.scss\";\r\nimport React from \"react\"\r\nimport {\r\n\tSelectAll as SelectAllIcon,\r\n\tCheckBox as SelectedAllIcon,\r\n\tClear as DeselectAllIcon,\r\n\tDelete as DeleteIcon,\r\n\tEdit as EditIcon,\r\n\tAdd as CreateIcon,\r\n\tRemove as RemoveIcon\r\n} from \"@material-ui/icons\"\r\nimport { Button, IconButton, } from \"@material-ui/core\";\r\nimport { useMdMedia, useSmMedia } from \"../../../hooks/utils/useMedia\";\r\nimport { IntervalManager } from \"../../../components/IntervalManager/IntervalManager\";\r\nimport { Type } from \"../../../components/Type/Type\";\r\nimport { useActionsPanelController } from \"./useActionsPanelController\";\r\nimport { TransactionsFilter } from \"../../../components/TransactionsFilter/TransactionsFilter\";\r\nimport { createClassnames } from \"../../../utils/Utils/createClassnames\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport type ActionsPanelProps = {\r\n}\r\n\r\nexport function ActionsPanel(props: ActionsPanelProps) {\r\n\r\n\tconst controller = useActionsPanelController(props)\r\n\r\n\tconst isDesktopLayout = useMdMedia()\r\n\tconst isLargeMobileLayout = useSmMedia()\r\n\r\n\tconst cx = createClassnames({\r\n\t\tmobile: !isDesktopLayout,\r\n\t\tdesktop: isDesktopLayout,\r\n\t\tselection: controller.isSelectionActive,\r\n\t\tsearchIsOpen: controller.isSearchOpen,\r\n\t})\r\n\r\n\t/**\r\n\t * Mobile layout\r\n\t */\r\n\tif (!isDesktopLayout) {\r\n\t\treturn <div className={cx(\"ActionsPanel\")}>\r\n\t\t\t{\r\n\t\t\t\tcontroller.isSelectionActive\r\n\t\t\t\t\t? <motion.div layout=\"position\" className=\"selection-container\">\r\n\t\t\t\t\t\t<motion.div layout=\"position\" className=\"selection-info\">\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tonClick={controller.handleDeselectAll}\r\n\t\t\t\t\t\t\t\tchildren={<DeselectAllIcon />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Type variant=\"boldcaps\" color=\"gray-800\">\r\n\t\t\t\t\t\t\t\t{`${controller.selection.length} selected`}\r\n\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t</motion.div>\r\n\t\t\t\t\t\t<motion.div layout=\"position\" className=\"selection-actions\">\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcontroller.allSelected\r\n\t\t\t\t\t\t\t\t\t? <IconButton\r\n\t\t\t\t\t\t\t\t\t\tonClick={controller.handleDeselectAll}\r\n\t\t\t\t\t\t\t\t\t\tchildren={<SelectedAllIcon />}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t: <IconButton\r\n\t\t\t\t\t\t\t\t\t\tonClick={controller.handleSelectAll}\r\n\t\t\t\t\t\t\t\t\t\tchildren={<SelectAllIcon />}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName=\"editButton\"\r\n\t\t\t\t\t\t\t\tdisabled={controller.selection.length !== 1}\r\n\t\t\t\t\t\t\t\tonClick={controller.handleEdit}\r\n\t\t\t\t\t\t\t\tchildren={<EditIcon />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName=\"deleteButton\"\r\n\t\t\t\t\t\t\t\tdisabled={controller.selection.length === 0}\r\n\t\t\t\t\t\t\t\tonClick={controller.handleDelete}\r\n\t\t\t\t\t\t\t\tchildren={<DeleteIcon />}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</motion.div>\r\n\t\t\t\t\t</motion.div>\r\n\t\t\t\t\t: <div className=\"intervalManager\">\r\n\t\t\t\t\t\t<IntervalManager\r\n\t\t\t\t\t\t\treverseControls={!isDesktopLayout}\r\n\t\t\t\t\t\t\thideNowControl={!isLargeMobileLayout}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t<div className=\"filterManager\">\r\n\t\t\t\t<TransactionsFilter />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t}\r\n\r\n\t/**\r\n\t * Desktop layout\r\n\t */\r\n\telse {\r\n\t\treturn <>\r\n\t\t\t<div className=\"ActionsPanel desktop\">\r\n\t\t\t\t<div className=\"actionButtons\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tclassName=\"button createButton\"\r\n\t\t\t\t\t\tstartIcon={controller.createDrawerOpen ? <RemoveIcon /> : <CreateIcon />}\r\n\t\t\t\t\t\tonClick={controller.handleCreate}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Type variant=\"boldcaps\" color=\"white\">\r\n\t\t\t\t\t\t\t{\"New transaction\"}\r\n\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcontroller.isSelectionActive && <>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\tclassName=\"button editButton\"\r\n\t\t\t\t\t\t\t\tstartIcon={<EditIcon />}\r\n\t\t\t\t\t\t\t\tonClick={controller.handleEdit}\r\n\t\t\t\t\t\t\t\tdisabled={controller.selection.length !== 1}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Type variant=\"boldcaps\" >\r\n\t\t\t\t\t\t\t\t\t{\"Edit\"}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\tclassName=\"button deleteButton\"\r\n\t\t\t\t\t\t\t\tstartIcon={<DeleteIcon />}\r\n\t\t\t\t\t\t\t\tonClick={controller.handleDelete}\r\n\t\t\t\t\t\t\t\tdisabled={controller.selection.length === 0}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Type variant=\"boldcaps\" >\r\n\t\t\t\t\t\t\t\t\t{\"Delete\"}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"filtersButton\">\r\n\t\t\t\t\t<TransactionsFilter />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t}\r\n}","import { useCallback, useMemo } from \"react\"\r\nimport { ActionsPanelProps } from \"./ActionsPanel\"\r\nimport { useStoreState, useStoreActions } from \"../../../store\"\r\nimport { DataUtils } from \"../../../utils/DataUtils/DataUtils\"\r\nimport { useTransactionEditorDrawerVariableOpenState } from \"../../../components/TransactionEditorDrawer/useTransactionEditorDrawerController\"\r\nimport { useTransactionCreatorDrawerOpenState } from \"../../../components/TransactionCreatorDrawer/useTransactionCreatorDrawerController\"\r\nimport { useBooleanQueryState } from \"../../../hooks/state/useBooleanQueryState\"\r\n\r\nexport function useActionsPanelController(props: ActionsPanelProps) {\r\n\r\n\t/**\r\n\t * Search open\r\n\t */\r\n\tconst [isSearchOpen] = useBooleanQueryState(\"search\", \"replace\", \"open\")\r\n\r\n\t/**\r\n\t * Selection\r\n\t */\r\n\tconst selection = useStoreState(_ => _.selection.selection)\r\n\r\n\t/**\r\n\t * Is the selection active\r\n\t */\r\n\tconst isSelectionActive = useStoreState(_ => _.selection.selectionActive)\r\n\r\n\t/**\r\n\t * Deselect all\r\n\t */\r\n\tconst deselectAll = useStoreActions(_ => _.selection.deselectAll)\r\n\tconst handleDeselectAll = useCallback(() => {\r\n\t\tdeselectAll()\r\n\t}, [deselectAll])\r\n\r\n\t/**\r\n\t * Select all\r\n\t */\r\n\tconst filteredTransactions = useStoreState(_ => _.transactions.filteredItems)\r\n\tconst selectAll = useStoreActions(_ => _.selection.selectAll)\r\n\tconst handleSelectAll = useCallback(() => {\r\n\t\tselectAll(filteredTransactions.map(_ => _.id))\r\n\t}, [selectAll, filteredTransactions])\r\n\r\n\t/**\r\n\t * All selected\r\n\t */\r\n\tconst allSelected = useMemo(() => {\r\n\t\treturn DataUtils.compareArrays(\r\n\t\t\tfilteredTransactions.map(_ => _.id),\r\n\t\t\tselection.map(_ => _.id),\r\n\t\t)\r\n\t}, [filteredTransactions, selection])\r\n\r\n\t/**\r\n\t * Deletion\r\n\t */\r\n\tconst deleteTransactions = useStoreActions(_ => _.transactions.deleteTransactions)\r\n\tconst handleDelete = useCallback(async () => {\r\n\t\tdeleteTransactions(selection.map(_ => _.id))\r\n\t\tdeselectAll()\r\n\t}, [deleteTransactions, selection, deselectAll])\r\n\r\n\t/**\r\n\t * Editor drawer\r\n\t */\r\n\tconst [, setEditor] = useTransactionEditorDrawerVariableOpenState()\r\n\tconst handleEdit = useCallback(() => {\r\n\t\tif (selection.length === 1) {\r\n\t\t\tsetEditor(selection[0].id)\r\n\t\t\tdeselectAll()\r\n\t\t}\r\n\t}, [selection, setEditor, deselectAll])\r\n\r\n\t/**\r\n\t * Create transaction drawer\r\n\t */\r\n\tconst [createDrawerOpen, setCreateDrawerOpen] = useTransactionCreatorDrawerOpenState()\r\n\tconst handleCreate = useCallback(() => {\r\n\t\tsetCreateDrawerOpen(!createDrawerOpen)\r\n\t}, [createDrawerOpen, setCreateDrawerOpen])\r\n\r\n\treturn {\r\n\t\tselection,\r\n\t\tallSelected,\r\n\t\tisSelectionActive,\r\n\t\tcreateDrawerOpen,\r\n\t\thandleSelectAll,\r\n\t\thandleDeselectAll,\r\n\t\thandleEdit,\r\n\t\thandleDelete,\r\n\t\thandleCreate,\r\n\t\tisSearchOpen\r\n\t}\r\n}","import \"./TransactionTableHeader.scss\";\r\nimport React from \"react\"\r\nimport { Type } from \"../Type/Type\";\r\nimport {\r\n\tCheckBox as AllSelectedIcon,\r\n\tCheckBoxOutlineBlank as NoneSelectedIcon,\r\n\tIndeterminateCheckBox as SomeSelectedIcon,\r\n\tExpandLess as AscendingSortIcon,\r\n\tExpandMore as DescendingSortIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useTransactionTableHeaderController } from \"./useTransactionTableHeaderController\";\r\n\r\nexport type TransactionTableHeaderProps = {\r\n}\r\n\r\nexport function TransactionTableHeader(props: TransactionTableHeaderProps) {\r\n\r\n\tconst controller = useTransactionTableHeaderController(props)\r\n\r\n\treturn <div className=\"TransactionTableHeader\">\r\n\t\t<div className=\"action\">\r\n\t\t\t{\r\n\t\t\t\tcontroller.isSelectionActive\r\n\t\t\t\t\t? controller.isAllSelected\r\n\t\t\t\t\t\t? <AllSelectedIcon\r\n\t\t\t\t\t\t\tclassName=\"checkbox allselected\"\r\n\t\t\t\t\t\t\tonClick={controller.onDeselectAll}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t: <SomeSelectedIcon\r\n\t\t\t\t\t\t\tclassName=\"checkbox someselected\"\r\n\t\t\t\t\t\t\tonClick={controller.onSelectAll}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t: <NoneSelectedIcon\r\n\t\t\t\t\t\tclassName=\"checkbox noneselected\"\r\n\t\t\t\t\t\tonClick={controller.onSelectAll}\r\n\t\t\t\t\t/>\r\n\t\t\t}\r\n\t\t</div>\r\n\t\t<div\r\n\t\t\tclassName=\"category\"\r\n\t\t\tonClick={() => controller.onToggleSort(\"category\")}\r\n\t\t>\r\n\t\t\t<Type variant=\"boldcaps\" size=\"sm\" color=\"gray-600\">\r\n\t\t\t\t{\"Category\"}\r\n\t\t\t</Type>\r\n\t\t\t{\r\n\t\t\t\tcontroller.sortingStrategy === \"category-descending\"\r\n\t\t\t\t\t? <DescendingSortIcon className=\"sortbutton descending\" />\r\n\t\t\t\t\t: controller.sortingStrategy === \"category-ascending\"\r\n\t\t\t\t\t\t? <AscendingSortIcon className=\"sortbutton ascending\" />\r\n\t\t\t\t\t\t: null\r\n\t\t\t}\r\n\t\t</div>\r\n\t\t<div\r\n\t\t\tclassName=\"amount\"\r\n\t\t\tonClick={() => controller.onToggleSort(\"amount\")}\r\n\t\t>\r\n\t\t\t<Type variant=\"boldcaps\" size=\"sm\" color=\"gray-600\">\r\n\t\t\t\t{\"Amount\"}\r\n\t\t\t</Type>\r\n\t\t\t{\r\n\t\t\t\tcontroller.sortingStrategy === \"amount-descending\"\r\n\t\t\t\t\t? <DescendingSortIcon className=\"sortbutton descending\" />\r\n\t\t\t\t\t: controller.sortingStrategy === \"amount-ascending\"\r\n\t\t\t\t\t\t? <AscendingSortIcon className=\"sortbutton ascending\" />\r\n\t\t\t\t\t\t: null\r\n\t\t\t}\r\n\t\t</div>\r\n\t\t<div\r\n\t\t\tclassName=\"comment\"\r\n\t\t\tonClick={() => controller.onToggleSort(\"comment\")}\r\n\t\t>\r\n\t\t\t<Type variant=\"boldcaps\" size=\"sm\" color=\"gray-600\">\r\n\t\t\t\t{\"Comment\"}\r\n\t\t\t</Type>\r\n\t\t\t{\r\n\t\t\t\tcontroller.sortingStrategy === \"comment-descending\"\r\n\t\t\t\t\t? <DescendingSortIcon className=\"sortbutton descending\" />\r\n\t\t\t\t\t: controller.sortingStrategy === \"comment-ascending\"\r\n\t\t\t\t\t\t? <AscendingSortIcon className=\"sortbutton ascending\" />\r\n\t\t\t\t\t\t: null\r\n\t\t\t}\r\n\t\t</div>\r\n\t\t<div\r\n\t\t\tclassName=\"date\"\r\n\t\t\tonClick={() => controller.onToggleSort(\"date\")}\r\n\t\t>\r\n\t\t\t<Type variant=\"boldcaps\" size=\"sm\" color=\"gray-600\">\r\n\t\t\t\t{\"Date\"}\r\n\t\t\t</Type>\r\n\t\t\t{\r\n\t\t\t\tcontroller.sortingStrategy === \"date-descending\"\r\n\t\t\t\t\t? <DescendingSortIcon className=\"sortbutton descending\" />\r\n\t\t\t\t\t: controller.sortingStrategy === \"date-ascending\"\r\n\t\t\t\t\t\t? <AscendingSortIcon className=\"sortbutton ascending\" />\r\n\t\t\t\t\t\t: null\r\n\t\t\t}\r\n\t\t</div>\r\n\t</div>\r\n}","import { useMemo } from \"react\"\r\nimport { useStoreActions, useStoreState } from \"../../store\"\r\nimport { DataUtils } from \"../../utils/DataUtils/DataUtils\"\r\nimport { TransactionTableHeaderProps } from \"./TransactionTableHeader\"\r\n\r\n\r\nexport function useTransactionTableHeaderController(props: TransactionTableHeaderProps) {\r\n\r\n\tconst selection = useStoreState(_ => _.selection.selection)\r\n\tconst transactions = useStoreState(_ => _.transactions.filteredItems)\r\n\r\n\tconst toggleSort = useStoreActions(_ => _.transactions.toggleSortingStrategy)\r\n\r\n\tconst sortingStrategy = useStoreState(_ => _.transactions.sortingStrategy)\r\n\r\n\tconst isSelectionActive = useStoreState(_ => _.selection.selectionActive)\r\n\tconst isAllSelected = useMemo(() => {\r\n\t\treturn DataUtils.compareArrays(transactions.map(_ => _.id), selection.map(_ => _.id))\r\n\t}, [transactions, selection])\r\n\r\n\tconst handleSelectAll = useStoreActions(_ => _.selection.selectAll)\r\n\tconst handleDeselectAll = useStoreActions(_ => _.selection.deselectAll)\r\n\r\n\treturn {\r\n\t\tisSelectionActive: isSelectionActive,\r\n\t\tisAllSelected: isAllSelected,\r\n\t\tonSelectAll: () => handleSelectAll(transactions.map(_ => _.id)),\r\n\t\tonDeselectAll: () => handleDeselectAll(),\r\n\t\tsortingStrategy: sortingStrategy,\r\n\t\tonToggleSort: toggleSort,\r\n\t}\r\n}","import ReactGA from \"react-ga\";\r\nimport emojiRegex from \"emoji-regex\"\r\nimport { useEffect, useRef, useState } from \"react\"\r\nimport { TransactionFormProps } from \"./TransactionForm\"\r\nimport { useStoreActions, useStoreState } from \"../../store\"\r\n\r\nexport function useTransactionFormController(props: TransactionFormProps) {\r\n\r\n\tconst notify = useStoreActions(_ => _.notification.notify)\r\n\r\n\tconst editTransaction = props.editTransaction\r\n\r\n\tconst categories = useStoreState(_ => _.transactions.categories)\r\n\r\n\tconst postTransaction = useStoreActions(_ => _.transactions.postTransaction)\r\n\tconst putTransaction = useStoreActions(_ => _.transactions.putTransaction)\r\n\r\n\t/**\r\n\t * Loading state\r\n\t */\r\n\tconst [loading, setLoading] = useState(false)\r\n\r\n\t/**\r\n\t * Input state\r\n\t */\r\n\tconst [icon, setIcon] = useState<string>(\"\")\r\n\tconst [sign, setSign] = useState<\"+\" | \"-\">(\"-\")\r\n\tconst [amount, setAmount] = useState<string>(\"\")\r\n\tconst [category, setCategory] = useState<string>(\"\")\r\n\tconst [time, setTime] = useState<Date>(new Date())\r\n\tconst [comment, setComment] = useState<string>(\"\")\r\n\r\n\tconst [emojiPickerAnchor, setEmojiPickerAnchor] = useState<Element | null>(null)\r\n\tconst [emojiPickerOpen, setEmojiPickerOpen] = useState(false)\r\n\r\n\t// If existing category selected and it has an icon, display\r\n\t// it (unless an icon is selected)\r\n\tconst existingCategoryIcon = categories.find(_ => _.value === category)?.icon\r\n\r\n\t// Initialize input state from editTransaction. We use the\r\n\t// `latestEditTransactionId` for preventing double-initializations of\r\n\t// the same transaction.\r\n\tconst latestEditTransactionId = useRef<string>('')\r\n\tuseEffect(() => {\r\n\t\tif (!editTransaction) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (latestEditTransactionId.current === editTransaction.id) {\r\n\t\t\treturn\r\n\t\t}\r\n\t\tlatestEditTransactionId.current = editTransaction.id\r\n\t\tsetSign(editTransaction.amount.sign === 1 ? \"+\" : \"-\")\r\n\t\tsetAmount(editTransaction.amount.decimalValue.toFixed(2))\r\n\t\tsetCategory(editTransaction.category.value)\r\n\t\tsetComment(editTransaction.comment)\r\n\t\tsetTime(editTransaction.date)\r\n\t\tsetIcon(editTransaction.category.icon)\r\n\t}, [editTransaction])\r\n\r\n\t/**\r\n\t * Error state\r\n\t */\r\n\tconst [errors, setErrors] = useState<{\r\n\t\tmain?: string;\r\n\t\tamount?: string;\r\n\t\tcategory?: string;\r\n\t\ttime?: string;\r\n\t\tcomment?: string;\r\n\t}>({})\r\n\r\n\tfunction validateIcon(): string | undefined {\r\n\t\tif (emojiRegex().test(icon)) {\r\n\t\t\treturn icon\r\n\t\t} else {\r\n\t\t\treturn undefined\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Validator for amount\r\n\t */\r\n\tfunction validateAmount(): string | undefined {\r\n\t\t/* eslint-disable-next-line no-useless-escape */\r\n\t\tconst valid = /^-?\\d*[\\.,]?\\d{0,2}$/.test(amount.trim())\r\n\t\tif (!valid) return \"Invalid number\"\r\n\t\treturn undefined\r\n\t}\r\n\r\n\t/**\r\n\t * Validator for category\r\n\t */\r\n\tfunction validateCategory(): string | undefined {\r\n\t\tconst c = category.trim()\r\n\t\tif (c === \"\") return \"Please enter a cetegory\"\r\n\t\treturn undefined\r\n\t}\r\n\r\n\t/**\r\n\t * Validator for time\r\n\t */\r\n\tfunction validateTime(): string | undefined {\r\n\t\tconst valid = time.getTime() > 0 && !isNaN(time.getTime())\r\n\t\tif (!valid) return \"Invalid date\"\r\n\t\treturn undefined\r\n\t}\r\n\r\n\t/**\r\n\t * Validator for comment\r\n\t */\r\n\tfunction validateComment(): string | undefined {\r\n\t\treturn undefined\r\n\t}\r\n\r\n\t/**\r\n\t * Full validation\r\n\t */\r\n\tfunction validateForm(): boolean {\r\n\t\tconst amountValidationError = validateAmount()\r\n\t\tconst categoryValidationError = validateCategory()\r\n\t\tconst timeValidationError = validateTime()\r\n\t\tconst commentValidationError = validateComment()\r\n\r\n\t\tsetErrors({\r\n\t\t\tamount: amountValidationError,\r\n\t\t\tcategory: categoryValidationError,\r\n\t\t\ttime: timeValidationError,\r\n\t\t\tcomment: commentValidationError,\r\n\t\t})\r\n\r\n\t\tif (\r\n\t\t\t!amountValidationError &&\r\n\t\t\t!categoryValidationError &&\r\n\t\t\t!timeValidationError &&\r\n\t\t\t!commentValidationError\r\n\t\t) {\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\t/**\r\n\t * Handle form submission\r\n\t */\r\n\tasync function handleSubmit() {\r\n\t\t/**\r\n\t\t * Validate form\r\n\t\t */\r\n\t\tconst formValid = validateForm()\r\n\t\tif (!formValid) return\r\n\r\n\t\tsetLoading(true)\r\n\r\n\t\t/**\r\n\t\t * Parsing\r\n\t\t */\r\n\t\tconst integerAmount = Math.round(\r\n\t\t\tMath.abs(\r\n\t\t\t\t100 * Number(\r\n\t\t\t\t\tamount.trim().replace(/,/g, \".\")\r\n\t\t\t\t)\r\n\t\t\t) * (sign === \"+\" ? 1 : -1)\r\n\t\t)\r\n\r\n\t\t/**\r\n\t\t * Post or edit transaction\r\n\t\t */\r\n\t\tconst result = editTransaction\r\n\t\t\t? await putTransaction({\r\n\t\t\t\tid: editTransaction.id,\r\n\t\t\t\tintegerAmount,\r\n\t\t\t\tcategory: category.trim(),\r\n\t\t\t\ttime: time.getTime(),\r\n\t\t\t\tcomment: comment.trim(),\r\n\t\t\t\tcategoryIcon: validateIcon(),\r\n\t\t\t})\r\n\t\t\t: await postTransaction({\r\n\t\t\t\tintegerAmount,\r\n\t\t\t\tcategory: category.trim(),\r\n\t\t\t\ttime: time.getTime(),\r\n\t\t\t\tcomment: comment.trim(),\r\n\t\t\t\tcategoryIcon: validateIcon(),\r\n\t\t\t})\r\n\r\n\t\t/**\r\n\t\t * Handle success by reseting form\r\n\t\t */\r\n\t\tif (result.isSuccess()) {\r\n\r\n\t\t\tif (editTransaction) {\r\n\t\t\t\tReactGA.event({\r\n\t\t\t\t\taction: \"Edit Transaction\",\r\n\t\t\t\t\tcategory: \"Transactions\",\r\n\t\t\t\t\tlabel: result.value.category.value,\r\n\t\t\t\t\tvalue: result.value.integerAmount / 100,\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tReactGA.event({\r\n\t\t\t\t\taction: \"Create Transaction\",\r\n\t\t\t\t\tcategory: \"Transactions\",\r\n\t\t\t\t\tlabel: result.value.category.value,\r\n\t\t\t\t\tvalue: result.value.integerAmount / 100,\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tif (editTransaction) {\r\n\t\t\t\tnotify({\r\n\t\t\t\t\tmessage: \"Changes saved\"\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tsetAmount(\"\")\r\n\t\t\tsetCategory(\"\")\r\n\t\t\tsetTime(new Date())\r\n\t\t\tsetComment(\"\")\r\n\t\t\tsetErrors({})\r\n\t\t\tlatestEditTransactionId.current = \"\"\r\n\t\t\tif (props.onClose) {\r\n\t\t\t\tprops.onClose()\r\n\t\t\t}\r\n\t\t\tsetLoading(false)\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Handle error messages\r\n\t\t */\r\n\t\tsetErrors(() => {\r\n\t\t\tconsole.error(result)\r\n\t\t\tif (result.reason === \"invalidServerResponse\") {\r\n\t\t\t\treturn { main: \"Invalid response received from server\" }\r\n\t\t\t}\r\n\t\t\tswitch (result.code) {\r\n\t\t\t\tcase \"request/invalid-request-data\":\r\n\t\t\t\t\tconst e = result.data?.errors ?? {}\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tamount: typeof e.integerAmount === \"string\" ? e.integerAmount : undefined,\r\n\t\t\t\t\t\tcomment: typeof e.comment === \"string\" ? e.comment : undefined,\r\n\t\t\t\t\t\tcategory: typeof e.category === \"string\" ? e.category : undefined,\r\n\t\t\t\t\t\ttime: typeof e.time === \"string\" ? e.time : undefined,\r\n\t\t\t\t\t\tmain: typeof e._root === \"string\" ? e._root\r\n\t\t\t\t\t\t\t: typeof e.id === \"string\" ? e.id\r\n\t\t\t\t\t\t\t\t: typeof e.uid === \"string\" ? e.uid : undefined\r\n\t\t\t\t\t}\r\n\t\t\t\tcase \"transaction/already-exists\":\r\n\t\t\t\t\treturn { main: \"Could not post transaction due to overlapping IDs\" }\r\n\t\t\t\tcase \"auth/unauthorized\":\r\n\t\t\t\t\treturn { main: \"Cannot edit another user's transaction\" }\r\n\t\t\t\tcase \"server/unavailable\":\r\n\t\t\t\t\treturn { main: \"Could not react server. Try again later.\" }\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn { main: \"Error posting transaction.\" }\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tsetLoading(false)\r\n\t}\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\tonSubmit: handleSubmit,\r\n\t\tsign,\r\n\t\tamount,\r\n\t\tcategory,\r\n\t\ttime,\r\n\t\tcomment,\r\n\t\ticon,\r\n\t\texistingCategoryIcon,\r\n\t\temojiPickerOpen,\r\n\t\temojiPickerAnchor,\r\n\t\tsetEmojiPickerOpen,\r\n\t\tsetEmojiPickerAnchor,\r\n\t\tonIconChange: setIcon,\r\n\t\tonSignChange: setSign,\r\n\t\tonAmountChange: setAmount,\r\n\t\tonCategoryChange: setCategory,\r\n\t\tonTimeChange: setTime,\r\n\t\tonCommentChange: setComment,\r\n\t\terrors: errors,\r\n\t\tcategories: categories,\r\n\t\tedit: !!editTransaction,\r\n\t}\r\n}","import \"./EnhancedButton.scss\";\r\nimport React from \"react\"\r\nimport cx from \"classnames\"\r\nimport { Button, ButtonBaseProps, ButtonProps, CircularProgress } from \"@material-ui/core\";\r\n\r\nexport type EnhancedButtonProps<C> = {\r\n\tloading?: boolean;\r\n\tcomponent?: C;\r\n} & ButtonProps & ButtonBaseProps\r\n\r\nexport function EnhancedButton<C extends React.ElementType>(props: EnhancedButtonProps<C>) {\r\n\r\n\tconst { loading, disabled, children, className, ...buttonProps } = props\r\n\r\n\treturn <Button\r\n\t\t{...buttonProps}\r\n\t\tclassName={cx(\"EnhancedButton\", className)}\r\n\t\tdisabled={disabled || loading}\r\n\t>\r\n\t\t{children}\r\n\t\t{\r\n\t\t\tloading ? <div className=\"enhancedButtonLoader\">\r\n\t\t\t\t<CircularProgress\r\n\t\t\t\t\tsize={28}\r\n\t\t\t\t/>\r\n\t\t\t</div> : null\r\n\t\t}\r\n\t</Button>\r\n}","import \"./TransactionForm.scss\";\r\nimport React, { useRef } from \"react\"\r\nimport cx from \"classnames\"\r\nimport { TextField, InputAdornment, Button, ButtonGroup, Menu, IconButton } from \"@material-ui/core\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { Type } from \"../Type/Type\";\r\nimport { useMdMedia, useSmMedia } from \"../../hooks/utils/useMedia\";\r\nimport { Transaction } from \"../../classes/Transaction\";\r\nimport { useTransactionFormController } from \"./useTransactionFormController\";\r\nimport { EnhancedButton } from \"../EnhancedButton/EnhancedButton\";\r\nimport EmojiPicker from \"emoji-picker-react\";\r\nimport { Close } from \"@material-ui/icons\";\r\n\r\nexport type TransactionFormProps = {\r\n\tonClose?(): void;\r\n\r\n\t/**\r\n\t * If this prop is provided, the editor will default to editing\r\n\t * this transaction instead of creating a new transaction.\r\n\t */\r\n\teditTransaction?: Transaction;\r\n\r\n\tvariant?: \"vertical\" | \"horizontal\";\r\n\r\n\thideTitle?: boolean;\r\n\r\n\tshowCloseButton?: boolean;\r\n\r\n}\r\n\r\nexport function TransactionForm(props: TransactionFormProps) {\r\n\r\n\tconst amountInputRef = useRef<HTMLDivElement | null>(null)\r\n\r\n\tconst controller = useTransactionFormController(props)\r\n\r\n\tfunction handleSubmit(e: React.FormEvent) {\r\n\t\te.preventDefault()\r\n\t\tcontroller.onSubmit()\r\n\t}\r\n\r\n\tconst largerLayout = useSmMedia()\r\n\tconst isDesktopLayout = useMdMedia()\r\n\r\n\treturn <form\r\n\t\tclassName={cx(`TransactionForm`, props.variant || \"vertical\", {\r\n\t\t\ttitleHidden: !!props.hideTitle,\r\n\t\t\thasCloseBUtton: !!props.showCloseButton\r\n\t\t})}\r\n\t\tonSubmit={handleSubmit}\r\n\t>\r\n\r\n\t\t{\r\n\t\t\tprops.hideTitle ? null : <div className=\"title\">\r\n\t\t\t\t<Type\r\n\t\t\t\t\tvariant=\"boldcaps\"\r\n\t\t\t\t\tcolor=\"gray-600\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{controller.edit ? \"Edit transaction\" : \"New transaction\"}\r\n\t\t\t\t</Type>\r\n\t\t\t</div>\r\n\t\t}\r\n\r\n\r\n\t\t<ButtonGroup\r\n\t\t\tfullWidth\r\n\t\t\tclassName=\"transactionAmount\"\r\n\t\t>\r\n\t\t\t<Button\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tcolor={controller.sign === \"+\" ? \"primary\" : undefined}\r\n\t\t\t\tvariant={controller.sign === \"+\" ? \"contained\" : \"outlined\"}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tcontroller.onSignChange(\"+\")\r\n\t\t\t\t\tamountInputRef.current?.focus()\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{\"+\"}\r\n\t\t\t</Button>\r\n\t\t\t<Button\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tcolor={controller.sign === \"-\" ? \"primary\" : undefined}\r\n\t\t\t\tvariant={controller.sign === \"-\" ? \"contained\" : \"outlined\"}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tcontroller.onSignChange(\"-\")\r\n\t\t\t\t\tamountInputRef.current?.focus()\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{\"-\"}\r\n\t\t\t</Button>\r\n\t\t\t<TextField\r\n\t\t\t\tvalue={controller.amount}\r\n\t\t\t\tonChange={e => controller.onAmountChange(e.target.value)}\r\n\t\t\t\tonKeyDown={e => {\r\n\t\t\t\t\tswitch (e.key) {\r\n\t\t\t\t\t\tcase \"-\":\r\n\t\t\t\t\t\t\tcontroller.onSignChange(\"-\")\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"+\":\r\n\t\t\t\t\t\t\tcontroller.onSignChange(\"+\")\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t\tid=\"transaction-amount\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tname=\"amount\"\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tlabel=\"Amount\"\r\n\t\t\t\terror={!!controller.errors.amount}\r\n\t\t\t\thelperText={controller.errors.amount}\r\n\t\t\t\tfullWidth\r\n\t\t\t\trequired\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tautoFocus={!controller.edit}\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tinputProps={{\r\n\t\t\t\t\tref: amountInputRef,\r\n\t\t\t\t}}\r\n\t\t\t\tInputProps={{\r\n\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t{\"EUR\"}\r\n\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</ButtonGroup>\r\n\r\n\t\t<Menu\r\n\t\t\tanchorEl={controller.emojiPickerAnchor}\r\n\t\t\topen={controller.emojiPickerOpen}\r\n\t\t\tonClose={() => controller.setEmojiPickerOpen(false)}\r\n\t\t>\r\n\t\t\t<div>\r\n\t\t\t\t<EmojiPicker\r\n\t\t\t\t\tnative\r\n\t\t\t\t\tdisableAutoFocus\r\n\t\t\t\t\tonEmojiClick={(e, emoji) => {\r\n\t\t\t\t\t\tcontroller.setEmojiPickerAnchor(null)\r\n\t\t\t\t\t\tcontroller.setEmojiPickerOpen(false)\r\n\t\t\t\t\t\tcontroller.onIconChange(emoji.emoji)\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</Menu>\r\n\r\n\t\t<ButtonGroup fullWidth className=\"transaction-category\">\r\n\t\t\t<Button\r\n\t\t\t\ttabIndex={-1}\r\n\t\t\t\tclassName=\"transaction-emoji\"\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\tcontroller.setEmojiPickerAnchor(e.currentTarget)\r\n\t\t\t\t\tcontroller.setEmojiPickerOpen(true)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{\r\n\t\t\t\t\tcontroller.icon\r\n\t\t\t\t\t|| controller.existingCategoryIcon\r\n\t\t\t\t\t|| (controller.sign === \"+\" ? \"💰\" : \"💸\")\r\n\t\t\t\t}\r\n\t\t\t</Button>\r\n\t\t\t<Autocomplete\r\n\t\t\t\tinputValue={controller.category}\r\n\t\t\t\tonInputChange={(e, v) => controller.onCategoryChange(v)}\r\n\t\t\t\tid=\"transaction-category\"\r\n\t\t\t\tfreeSolo\r\n\t\t\t\topenOnFocus\r\n\t\t\t\tautoHighlight\r\n\t\t\t\tselectOnFocus\r\n\t\t\t\tdisableClearable\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tautoComplete\r\n\t\t\t\tfullWidth\r\n\t\t\t\toptions={controller.categories.map(_ => _.value)}\r\n\t\t\t\trenderInput={(params) => (\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tname=\"category\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tlabel=\"Category\"\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\terror={!!controller.errors.category}\r\n\t\t\t\t\t\thelperText={controller.errors.category}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t{...params}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t</ButtonGroup>\r\n\r\n\t\t<TextField\r\n\t\t\tvalue={controller.comment}\r\n\t\t\tonChange={e => controller.onCommentChange(e.target.value)}\r\n\t\t\tid=\"transaction-comment\"\r\n\t\t\tclassName=\"transaction-comment\"\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tname=\"comment\"\r\n\t\t\ttype=\"text\"\r\n\t\t\tlabel=\"Comment\"\r\n\t\t\terror={!!controller.errors.comment}\r\n\t\t\thelperText={controller.errors.comment}\r\n\t\t\tfullWidth\r\n\t\t\tsize=\"small\"\r\n\t\t/>\r\n\r\n\t\t<KeyboardDatePicker\r\n\t\t\tvalue={controller.time}\r\n\t\t\tonChange={d => controller.onTimeChange(d as Date)}\r\n\t\t\tformat=\"dd/MM/yyyy\"\r\n\t\t\tautoOk\r\n\t\t\tid=\"transaction-time\"\r\n\t\t\tclassName=\"transaction-time\"\r\n\t\t\tvariant={largerLayout ? \"inline\" : \"dialog\"}\r\n\t\t\tinputVariant=\"outlined\"\r\n\t\t\tlabel=\"Date\"\r\n\t\t\terror={!!controller.errors.time}\r\n\t\t\thelperText={controller.errors.time}\r\n\t\t\tfullWidth\r\n\t\t\trequired\r\n\t\t\tsize=\"small\"\r\n\t\t/>\r\n\r\n\t\t<EnhancedButton\r\n\t\t\ttype=\"submit\"\r\n\t\t\tcolor=\"primary\"\r\n\t\t\tvariant=\"contained\"\r\n\t\t\tclassName=\"submit\"\r\n\t\t\tfullWidth\r\n\t\t\tloading={controller.loading}\r\n\t\t>\r\n\t\t\t{controller.edit ? \"Save\" : \"Create\"}\r\n\t\t</EnhancedButton>\r\n\r\n\t\t{\r\n\t\t\tprops.showCloseButton && (\r\n\t\t\t\tisDesktopLayout\r\n\t\t\t\t\t? <Button\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tclassName=\"close\"\r\n\t\t\t\t\t\tonClick={() => { if (props.onClose) { props.onClose() } }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Close />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t: <IconButton\r\n\t\t\t\t\t\tclassName=\"close\"\r\n\t\t\t\t\t\tonClick={() => { if (props.onClose) { props.onClose() } }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Close />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t</form >\r\n}","import \"./TransactionTableRow.scss\";\r\nimport React from \"react\"\r\nimport cx from \"classnames\"\r\nimport { Transaction } from \"../../classes/Transaction\";\r\nimport { format } from \"date-fns\";\r\nimport { MoneyType } from \"../MoneyType/MoneyType\";\r\nimport { Type } from \"../Type/Type\";\r\nimport {\r\n\tCheckBox as SelectedIcon,\r\n\tCheckBoxOutlineBlank as UnselectedIcon,\r\n} from \"@material-ui/icons\"\r\nimport { useTransactionTableRowController } from \"./useTransactionTableRowController\";\r\nimport { TransactionForm } from \"../TransactionForm/TransactionForm\";\r\n\r\nexport type TransactionTableRowProps = {\r\n\ttransaction: Transaction;\r\n\tgetAllTransactionIdsBetween(aid: string, bid: string): string[];\r\n}\r\n\r\nexport function TransactionTableRow(props: TransactionTableRowProps) {\r\n\r\n\tconst controller = useTransactionTableRowController(props)\r\n\r\n\tif (controller.isEditing) {\r\n\t\treturn <div className={cx(\"TransactionTableRow editing\")}>\r\n\t\t\t<TransactionForm\r\n\t\t\t\thideTitle\r\n\t\t\t\tshowCloseButton\r\n\t\t\t\teditTransaction={props.transaction}\r\n\t\t\t\tonClose={controller.onCloseEditing}\r\n\t\t\t\tvariant=\"horizontal\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t}\r\n\r\n\treturn <div\r\n\t\tclassName={cx(\"TransactionTableRow default\", {\r\n\t\t\tselected: controller.selected,\r\n\t\t\tcontextMenuSelected: controller.contextMenuSelected\r\n\t\t})}\r\n\t\tonClick={controller.onClick}\r\n\t\tonContextMenu={controller.onContextMenu}\r\n\t>\r\n\t\t<div className=\"action\">\r\n\t\t\t{\r\n\t\t\t\tcontroller.selected\r\n\t\t\t\t\t? <SelectedIcon\r\n\t\t\t\t\t\tclassName=\"selected\"\r\n\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\te.stopPropagation()\r\n\t\t\t\t\t\t\tcontroller.onDeselect()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t: <UnselectedIcon\r\n\t\t\t\t\t\tclassName=\"unselected\"\r\n\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\te.stopPropagation()\r\n\t\t\t\t\t\t\tcontroller.onSelect()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t}\r\n\t\t</div>\r\n\t\t<div className=\"category\">\r\n\t\t\t<Type variant=\"bold\" color=\"gray-800\" size=\"md\">\r\n\t\t\t\t<span className=\"categoryIcon\">\r\n\t\t\t\t\t{controller.transaction.icon}\r\n\t\t\t\t</span>\r\n\t\t\t\t{controller.transaction.category.value}\r\n\t\t\t</Type>\r\n\t\t</div>\r\n\t\t<div className=\"amount\">\r\n\t\t\t<MoneyType\r\n\t\t\t\tamount={controller.transaction.amount}\r\n\t\t\t\tvariant=\"bold\"\r\n\t\t\t\tsize=\"md\"\r\n\t\t\t\tcolorIfPositive=\"green-600\"\r\n\t\t\t\tcolorIfNegative=\"red-600\"\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t<div className=\"comment\">\r\n\t\t\t<Type color=\"gray-700\" variant=\"regular\" size=\"md\">\r\n\t\t\t\t{controller.transaction.comment}\r\n\t\t\t</Type>\r\n\t\t</div>\r\n\t\t<div className=\"date\">\r\n\t\t\t<Type color=\"gray-700\" variant=\"regular\" size=\"md\">\r\n\t\t\t\t{toDatestring(controller.transaction.date)}\r\n\t\t\t</Type>\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nfunction toDatestring(date: Date) {\r\n\treturn date.getFullYear() === currentYear\r\n\t\t? format(date, \"d.M.\")\r\n\t\t: format(date, \"d.M.yyyy\")\r\n}\r\n\r\nconst currentYear = new Date().getFullYear()","import React, { useCallback, useMemo } from \"react\"\r\nimport { useTransactionContextMenu } from \"../../contexts/TransactionContextMenu.context\"\r\nimport { useStoreActions, useStoreState } from \"../../store\"\r\nimport { useTransactionEditorDrawerVariableOpenState } from \"../TransactionEditorDrawer/useTransactionEditorDrawerController\"\r\nimport { TransactionTableRowProps } from \"./TransactionTableRow\"\r\n\r\nexport function useTransactionTableRowController(props: TransactionTableRowProps) {\r\n\t/**\r\n\t * Selected\r\n\t */\r\n\tconst selection = useStoreState(_ => _.selection.selection)\r\n\tconst selected = useMemo(() => {\r\n\t\treturn selection.some(_ => _.id === props.transaction.id)\r\n\t}, [props.transaction, selection])\r\n\r\n\t/**\r\n\t * Is the transaction being edited.\r\n\t */\r\n\tconst [editingId, setEditingId] = useTransactionEditorDrawerVariableOpenState()\r\n\tconst isEditing = useMemo(() => {\r\n\t\treturn editingId === props.transaction.id\r\n\t}, [editingId, props.transaction])\r\n\tconst handleCloseEditing = useCallback(() => {\r\n\t\tsetEditingId(null)\r\n\t}, [setEditingId])\r\n\r\n\tconst select = useStoreActions(_ => _.selection.select)\r\n\tconst selectAll = useStoreActions(_ => _.selection.selectAll)\r\n\tconst deselect = useStoreActions(_ => _.selection.deselect)\r\n\tconst deselectAll = useStoreActions(_ => _.selection.deselectAll)\r\n\r\n\t/**\r\n\t * Selection active\r\n\t */\r\n\tconst selectionActive = useStoreState(_ => _.selection.selectionActive)\r\n\r\n\t/**\r\n\t * Handle click\r\n\t */\r\n\tconst handleClick = useCallback((e: React.MouseEvent) => {\r\n\t\tconst isShift = e.shiftKey\r\n\t\tconst isCtrl = e.ctrlKey\r\n\r\n\t\tif (isShift) {\r\n\t\t\tif (selection.length === 0) {\r\n\t\t\t\tselect(props.transaction.id)\r\n\t\t\t} else {\r\n\t\t\t\tselectAll(\r\n\t\t\t\t\tprops.getAllTransactionIdsBetween(\r\n\t\t\t\t\t\tprops.transaction.id,\r\n\t\t\t\t\t\tselection[0].id\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (selected) {\r\n\t\t\t\tif (selection.length <= 1) {\r\n\t\t\t\t\tdeselect(props.transaction.id)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!isCtrl) {\r\n\t\t\t\t\t\tdeselectAll()\r\n\t\t\t\t\t\tselect(props.transaction.id)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdeselect(props.transaction.id)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (!isCtrl) {\r\n\t\t\t\t\tdeselectAll()\r\n\t\t\t\t}\r\n\t\t\t\tselect(props.transaction.id)\r\n\t\t\t}\r\n\t\t}\r\n\t}, [selection, deselect, deselectAll, select, selected, selectAll, props])\r\n\r\n\t/**\r\n\t * Handle context menu\r\n\t */\r\n\tconst contextMenu = useTransactionContextMenu()\r\n\tconst handleContextMenu = useCallback((e: React.MouseEvent) => {\r\n\t\te.preventDefault()\r\n\t\tcontextMenu.setPosition({ top: e.clientY, left: e.clientX })\r\n\t\tcontextMenu.setTransaction(props.transaction)\r\n\t}, [contextMenu, props.transaction])\r\n\tconst contextMenuSelected = useMemo(() => {\r\n\t\tif (contextMenu.transaction) {\r\n\t\t\treturn contextMenu.transaction.id === props.transaction.id\r\n\t\t}\r\n\t\treturn false\r\n\t}, [contextMenu, props.transaction])\r\n\r\n\treturn {\r\n\t\ttransaction: props.transaction,\r\n\r\n\t\tonClick: handleClick,\r\n\t\tonContextMenu: handleContextMenu,\r\n\r\n\t\tisEditing,\r\n\t\tonCloseEditing: handleCloseEditing,\r\n\r\n\t\tselected,\r\n\t\tcontextMenuSelected,\r\n\t\tselectionActive,\r\n\t\tonSelect: () => select(props.transaction.id),\r\n\t\tonDeselect: () => deselect(props.transaction.id),\r\n\t}\r\n}","import \"./TransactionTableRowSkeleton.scss\";\r\nimport React from \"react\"\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport { useRandomValue } from \"../../hooks/utils/useRandomValue\";\r\n\r\nexport type TransactionTableRowSkeletonProps = {\r\n\r\n}\r\n\r\nexport function TransactionTableRowSkeleton(props: TransactionTableRowSkeletonProps) {\r\n\r\n\tconst categoryWidth = useRandomValue(20, 90)\r\n\tconst amountWidth = useRandomValue(48, 64)\r\n\tconst commentWidth = useRandomValue(20, 80)\r\n\tconst dateWidth = useRandomValue(48, 64)\r\n\r\n\treturn <div className=\"TransactionTableRowSkeleton\">\r\n\t\t<div className=\"action\" >\r\n\t\t\t<Skeleton variant=\"rect\" width={20} height={20} animation=\"wave\" />\r\n\t\t</div>\r\n\t\t<div className=\"category\">\r\n\t\t\t<Skeleton variant=\"rect\" width={categoryWidth + \"%\"} height={16} animation=\"wave\" />\r\n\t\t</div>\r\n\t\t<div className=\"amount\">\r\n\t\t\t<Skeleton variant=\"rect\" width={amountWidth} height={16} animation=\"wave\" />\r\n\t\t</div>\r\n\t\t<div className=\"comment\">\r\n\t\t\t<Skeleton variant=\"rect\" width={commentWidth + \"%\"} height={16} animation=\"wave\" />\r\n\t\t</div>\r\n\t\t<div className=\"date\">\r\n\t\t\t<Skeleton variant=\"rect\" width={dateWidth} height={16} animation=\"wave\" />\r\n\t\t</div>\r\n\t</div>\r\n}","import \"./TransactionTable.scss\";\r\nimport React, { createRef, useEffect } from \"react\"\r\nimport { TransactionTableHeader } from \"../TransactionTableHeader/TransactionTableHeader\";\r\nimport { TransactionTableRow } from \"../TransactionTableRow/TransactionTableRow\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport { Type } from \"../Type/Type\";\r\nimport { TransactionTableRowSkeleton } from \"../TransactionTableRowSkeleton/TransactionTableRowSkeleton\";\r\nimport { useTransactionTableController } from \"./useTransactionTableController\";\r\nimport { motion } from \"framer-motion\";\r\nimport { DataUtils } from \"../../utils/DataUtils/DataUtils\";\r\nimport { useLgMedia } from \"../../hooks/utils/useMedia\";\r\n\r\nexport type TransactionTableProps = {\r\n\tshowSkeletons?: boolean;\r\n}\r\n\r\nconst virtualizedListRef = createRef<List>()\r\n\r\nexport function TransactionTable(props: TransactionTableProps) {\r\n\r\n\tconst isLargeScreen = useLgMedia()\r\n\tconst controller = useTransactionTableController(props)\r\n\r\n\t// Recalculate virtualized list row heights each time the \r\n\t// props change / editing state changes / screen size passes\r\n\t// large threshold\r\n\tuseEffect(() => {\r\n\t\tvirtualizedListRef.current?.recomputeRowHeights()\r\n\t}, [props, controller.editingId, isLargeScreen, controller.items])\r\n\r\n\tif (controller.showSkeletons) {\r\n\r\n\t\treturn <div className=\"TransactionTable\">\r\n\t\t\t<TransactionTableHeader />\r\n\t\t\t<div className=\"listContainer\">\r\n\t\t\t\t{\r\n\t\t\t\t\tDataUtils.createIndexArray(16).map(i => {\r\n\t\t\t\t\t\treturn <TransactionTableRowSkeleton key={i} />\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t}\r\n\r\n\treturn <div className=\"TransactionTable\">\r\n\t\t<TransactionTableHeader />\r\n\t\t<motion.div layout=\"position\" className=\"listContainer\">\r\n\t\t\t<AutoSizer className=\"autoSizer\">\r\n\t\t\t\t{\r\n\t\t\t\t\tautoSizer => {\r\n\t\t\t\t\t\treturn <List\r\n\t\t\t\t\t\t\tref={virtualizedListRef}\r\n\t\t\t\t\t\t\tclassName=\"virtualizedList\"\r\n\t\t\t\t\t\t\theight={autoSizer.height}\r\n\t\t\t\t\t\t\twidth={autoSizer.width}\r\n\t\t\t\t\t\t\trowCount={controller.items.length}\r\n\t\t\t\t\t\t\trowHeight={({ index }) => {\r\n\t\t\t\t\t\t\t\treturn controller.items[index].id === controller.editingId\r\n\t\t\t\t\t\t\t\t\t? (isLargeScreen ? 60 : 110)\r\n\t\t\t\t\t\t\t\t\t: 40\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tnoRowsRenderer={() => <div className=\"noTransactions\">\r\n\t\t\t\t\t\t\t\t<Type color=\"gray-700\" variant=\"boldcaps\" size=\"md\">\r\n\t\t\t\t\t\t\t\t\t{\"No transactions\"}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\trowRenderer={(rowProps) => {\r\n\t\t\t\t\t\t\t\tconst entry = controller.items[rowProps.index]\r\n\t\t\t\t\t\t\t\treturn <li key={rowProps.key} style={rowProps.style}>\r\n\t\t\t\t\t\t\t\t\t<TransactionTableRow\r\n\t\t\t\t\t\t\t\t\t\tgetAllTransactionIdsBetween={controller.getAllTransactionIdsBetween}\r\n\t\t\t\t\t\t\t\t\t\ttransaction={entry}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t</AutoSizer>\r\n\t\t</motion.div>\r\n\t</div>\r\n}","import { useCallback, useMemo } from \"react\"\r\nimport { Transaction } from \"../../classes/Transaction\"\r\nimport { useStoreState } from \"../../store\"\r\nimport { useTransactionEditorDrawerVariableOpenState } from \"../TransactionEditorDrawer/useTransactionEditorDrawerController\"\r\nimport { TransactionTableProps } from \"./TransactionTable\"\r\n\r\nexport function useTransactionTableController(props: TransactionTableProps) {\r\n\r\n\tconst items = useStoreState(_ => _.transactions.filteredItems)\r\n\tconst sortingStrategy = useStoreState(_ => _.transactions.sortingStrategy)\r\n\r\n\tconst [editingId] = useTransactionEditorDrawerVariableOpenState()\r\n\r\n\tconst sortedItems = useMemo(() => {\r\n\t\treturn items.sort((a, b) => Transaction.compare(a, b, sortingStrategy))\r\n\t}, [items, sortingStrategy])\r\n\r\n\tconst getAllTransactionIdsBetween = useCallback((aid: string, bid: string): string[] => {\r\n\t\tif (aid === bid) return [aid]\r\n\t\tconst aidx = sortedItems.findIndex(_ => _.id === aid)\r\n\t\tconst bidx = sortedItems.findIndex(_ => _.id === bid)\r\n\t\tif (aidx === -1 || bidx === -1) return []\r\n\t\tconst ids: string[] = []\r\n\t\tconst lidx = Math.min(aidx, bidx)\r\n\t\tconst gidx = Math.max(aidx, bidx)\r\n\t\tfor (let i = lidx; i <= gidx; i++) {\r\n\t\t\tconst id = sortedItems[i]?.id\r\n\t\t\tif (id) ids.push(id)\r\n\t\t}\r\n\t\treturn ids\r\n\t}, [sortedItems])\r\n\r\n\tconst initializedUser = useStoreState(_ => _.auth.initialized)\r\n\tconst initializedItems = useStoreState(_ => _.transactions.initialized)\r\n\tconst shouldShowSkeletons = !initializedItems || !initializedUser\r\n\tconst showSkeletons = props.showSkeletons && shouldShowSkeletons\r\n\r\n\treturn {\r\n\t\titems: sortedItems,\r\n\t\tshowSkeletons,\r\n\t\teditingId,\r\n\t\tgetAllTransactionIdsBetween\r\n\t}\r\n}","import \"./DashboardHeader.scss\";\r\nimport React from \"react\"\r\nimport textureImg from \"../../../images/shapelined-_JBKdviweXI-unsplash.jpg\";\r\nimport { useMdMedia } from \"../../../hooks/utils/useMedia\";\r\nimport { Type } from \"../../../components/Type/Type\";\r\nimport { ExpandLess as IncomesIcon, ExpandMore as ExpensesIcon } from \"@material-ui/icons\";\r\nimport { MoneyType } from \"../../../components/MoneyType/MoneyType\";\r\nimport { useDashboardHeaderController } from \"./useDashboardHeaderController\";\r\n\r\nexport type DashboardHeaderProps = {\r\n}\r\n\r\nexport function DashboardHeader(props: DashboardHeaderProps) {\r\n\r\n\tconst desktopView = useMdMedia()\r\n\r\n\tconst controller = useDashboardHeaderController(props)\r\n\r\n\r\n\t/**\r\n\t * Desktop view\r\n\t */\r\n\tif (desktopView) {\r\n\t\treturn <div className=\"DashboardHeader desktop\">\r\n\r\n\t\t\t<div className=\"left\">\r\n\t\t\t\t<div className=\"title\">\r\n\t\t\t\t\t<Type component=\"h1\" size=\"xl\" color=\"gray-900\" variant=\"bold\">\r\n\t\t\t\t\t\t{\"Your transactions\"}\r\n\t\t\t\t\t</Type>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"transactions-count\">\r\n\t\t\t\t\t<Type size=\"md\" color=\"gray-600\" variant=\"boldcaps\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcontroller.isSelectionActive\r\n\t\t\t\t\t\t\t\t? `Selected ${controller.selectionLength} / ${controller.transactionsCount} transactions`\r\n\t\t\t\t\t\t\t\t: `${controller.transactionsCount} transactions`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</Type>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"right\">\r\n\t\t\t\t<div className=\"total\">\r\n\t\t\t\t\t<MoneyType\r\n\t\t\t\t\t\tanimate\r\n\t\t\t\t\t\tcolorIfPositive=\"green-600\"\r\n\t\t\t\t\t\tcolorIfNegative=\"red-600\"\r\n\t\t\t\t\t\tamount={controller.transactionsTotal}\r\n\t\t\t\t\t\tsize=\"xl\"\r\n\t\t\t\t\t\tvariant=\"bold\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"subtotals\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<IncomesIcon />\r\n\t\t\t\t\t\t<MoneyType\r\n\t\t\t\t\t\t\tanimate\r\n\t\t\t\t\t\t\tcolor=\"gray-700\"\r\n\t\t\t\t\t\t\tamount={controller.transactionsTotalIncome}\r\n\t\t\t\t\t\t\tsize=\"md\"\r\n\t\t\t\t\t\t\tvariant=\"regular\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<ExpensesIcon />\r\n\t\t\t\t\t\t<MoneyType\r\n\t\t\t\t\t\t\tanimate\r\n\t\t\t\t\t\t\tcolor=\"gray-700\"\r\n\t\t\t\t\t\t\tamount={controller.transactionsTotalExpense}\r\n\t\t\t\t\t\t\tsize=\"md\"\r\n\t\t\t\t\t\t\tvariant=\"regular\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t}\r\n\r\n\t/**\r\n\t * Mobile view\r\n\t */\r\n\telse {\r\n\t\treturn <div className=\"DashboardHeader mobile\">\r\n\r\n\t\t\t<div className=\"texture-image-container\">\r\n\t\t\t\t<img src={textureImg} alt=\"\" />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"content\">\r\n\r\n\t\t\t\t<section className=\"title\">\r\n\r\n\t\t\t\t\t<Type variant=\"boldcaps\" size=\"sm\" color=\"white\">\r\n\t\t\t\t\t\t{`${controller.transactionsCount} transactions`}\r\n\t\t\t\t\t</Type>\r\n\t\t\t\t\t<Type variant=\"boldcaps\" size=\"sm\" color=\"blue-300\">\r\n\t\t\t\t\t\t{controller.intervalString}\r\n\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t<section className=\"analytics\">\r\n\r\n\t\t\t\t\t<MoneyType\r\n\t\t\t\t\t\tsize=\"xxl\"\r\n\t\t\t\t\t\tcolor=\"white\"\r\n\t\t\t\t\t\tamount={controller.transactionsTotal}\r\n\t\t\t\t\t\tanimate\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t</section>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t}\r\n} ","import { useMemo } from \"react\"\r\nimport { MoneyAmount } from \"../../../classes/MoneyAmount\"\r\nimport { useStoreState } from \"../../../store\"\r\nimport { DashboardHeaderProps } from \"./DashboardHeader\"\r\n\r\nexport function useDashboardHeaderController(props: DashboardHeaderProps) {\r\n\r\n\tconst intervalString = useStoreState(_ => _.interval.smartDisplayString)\r\n\r\n\tconst transactions = useStoreState(_ => _.transactions.filteredItems)\r\n\r\n\tconst isSelectionActive = useStoreState(_ => _.selection.selectionActive)\r\n\r\n\tconst selectionLength = useStoreState(_ => _.selection.selectionLength)\r\n\r\n\tconst transactionsCount = useMemo(() => {\r\n\t\treturn transactions.length\r\n\t}, [transactions])\r\n\r\n\tconst transactionsTotal = useMemo(() => {\r\n\t\treturn MoneyAmount.sum(transactions.map(_ => _.amount))\r\n\t}, [transactions])\r\n\r\n\tconst transactionsTotalIncome = useMemo(() => {\r\n\t\treturn MoneyAmount.sum(transactions.filter(_ => _.amount.isPositive).map(_ => _.amount))\r\n\t}, [transactions])\r\n\r\n\tconst transactionsTotalExpense = useMemo(() => {\r\n\t\treturn MoneyAmount.sum(transactions.filter(_ => _.amount.isNegative).map(_ => _.amount))\r\n\t}, [transactions])\r\n\r\n\treturn {\r\n\t\tintervalString,\r\n\t\ttransactionsCount,\r\n\t\ttransactionsTotal,\r\n\t\ttransactionsTotalIncome,\r\n\t\ttransactionsTotalExpense,\r\n\t\tisSelectionActive,\r\n\t\tselectionLength,\r\n\t}\r\n}","import \"./Dashboard.scss\"\r\nimport React from \"react\";\r\nimport cx from \"classnames\"\r\nimport { TransactionList } from \"../../components/TransactionList/TransactionList\";\r\nimport { ActionsPanel } from \"./ActionsPanel/ActionsPanel\";\r\nimport { TransactionTable } from \"../../components/TransactionTable/TransactionTable\";\r\nimport { DashboardHeader } from \"./DashboardHeader/DashboardHeader\";\r\nimport { TransactionForm } from \"../../components/TransactionForm/TransactionForm\";\r\nimport { useDashboardController } from \"./useDashboardController\";\r\nimport { AnimatePresence, AnimateSharedLayout, motion } from \"framer-motion\";\r\nimport { useTrueAfterTimeout } from \"../../hooks/utils/useTrueAfterTimeout\";\r\n\r\nexport type DashboardProps = {\r\n}\r\n\r\nexport function Dashboard(props: DashboardProps) {\r\n\r\n\tconst trueAfterTimeout = useTrueAfterTimeout(100)\r\n\r\n\tconst controller = useDashboardController()\r\n\r\n\treturn <div className=\"Dashboard\">\r\n\r\n\t\t<section className=\"header\">\r\n\t\t\t<DashboardHeader />\r\n\t\t</section>\r\n\r\n\t\t<section className=\"panel\">\r\n\t\t\t<ActionsPanel />\r\n\t\t</section>\r\n\r\n\t\t<AnimateSharedLayout>\r\n\t\t\t<AnimatePresence>\r\n\t\t\t\t{\r\n\t\t\t\t\tcontroller.showCreateTransactionForm\r\n\t\t\t\t\t\t? <motion.section\r\n\t\t\t\t\t\t\tinitial={{ opacity: 0, y: -20 }}\r\n\t\t\t\t\t\t\tanimate={{ opacity: 1, y: 0 }}\r\n\t\t\t\t\t\t\texit={{ opacity: 0, y: -20, transition: { type: \"tween\" } }}\r\n\t\t\t\t\t\t\tclassName={cx(\r\n\t\t\t\t\t\t\t\t\"transactionForm\",\r\n\t\t\t\t\t\t\t\t{ open: controller.showCreateTransactionForm }\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<TransactionForm\r\n\t\t\t\t\t\t\t\thideTitle\r\n\t\t\t\t\t\t\t\tvariant=\"horizontal\"\r\n\t\t\t\t\t\t\t\tonClose={controller.handleTransactionFormClose}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</motion.section>\r\n\t\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t</AnimatePresence>\r\n\r\n\t\t\t<motion.section layout={trueAfterTimeout} initial={false} className=\"transactionsList\">\r\n\t\t\t\t{\r\n\t\t\t\t\tcontroller.isDesktopLayout\r\n\t\t\t\t\t\t? <TransactionTable showSkeletons />\r\n\t\t\t\t\t\t: <TransactionList showSkeletons />\r\n\t\t\t\t}\r\n\t\t\t</motion.section>\r\n\t\t</AnimateSharedLayout>\r\n\r\n\t</div>\r\n\r\n}","import { useMemo, useCallback } from \"react\";\r\nimport { useTransactionCreatorDrawerOpenState } from \"../../components/TransactionCreatorDrawer/useTransactionCreatorDrawerController\";\r\nimport { useMdMedia } from \"../../hooks/utils/useMedia\";\r\n\r\nexport function useDashboardController() {\r\n\r\n\tconst isDesktopLayout = useMdMedia()\r\n\r\n\tconst [transactionCreatorFormOpen, setTransactionCreatorFormOpen] = useTransactionCreatorDrawerOpenState()\r\n\r\n\tconst showCreateTransactionForm = useMemo(() => {\r\n\t\treturn isDesktopLayout && transactionCreatorFormOpen\r\n\t}, [isDesktopLayout, transactionCreatorFormOpen])\r\n\r\n\tconst handleTransactionFormClose = useCallback(() => {\r\n\t\tsetTransactionCreatorFormOpen(false)\r\n\t}, [setTransactionCreatorFormOpen])\r\n\r\n\treturn {\r\n\t\tisDesktopLayout,\r\n\t\tshowCreateTransactionForm,\r\n\t\thandleTransactionFormClose,\r\n\t}\r\n\r\n}","import { Failure } from \"./Failure\";\r\n\r\nexport class UnimplementedFailure<T> extends Failure<T, \"unimplemented\"> {\r\n  constructor() {\r\n    super(\"unimplemented\");\r\n  }\r\n}\r\n\r\nexport class UnknownFailure<T> extends Failure<T, \"unknown\"> {\r\n  constructor() {\r\n    super(\"unknown\");\r\n  }\r\n}\r\n\r\nexport class ErrorFailure<T> extends Failure<T, \"error\"> {\r\n  public readonly error: Error;\r\n  constructor(error: Error, options?: { silent?: boolean }) {\r\n    super(\"error\");\r\n    const silent = options?.silent ?? false;\r\n    if (!silent) {\r\n      console.warn(\"An error was converted into a failure\", error);\r\n    }\r\n    this.error = error;\r\n  }\r\n}\r\n","import { Failure } from \"./Failure\";\r\n\r\nexport class SpreadsheetReadRowFailure<T> extends Failure<\r\n  T,\r\n  \"spreadsheet-read-row-failure\"\r\n> {\r\n  constructor() {\r\n    super(\"spreadsheet-read-row-failure\");\r\n  }\r\n}\r\n\r\nexport class SpreadsheetReadFileFailure<T> extends Failure<\r\n  T,\r\n  \"spreadsheet-read-file-failure\"\r\n> {\r\n  constructor() {\r\n    super(\"spreadsheet-read-file-failure\");\r\n  }\r\n}\r\n\r\nexport class SpreadsheetNoFileCreatedFailure<T> extends Failure<\r\n  T,\r\n  \"spreadsheet-no-file-created\"\r\n> {\r\n  constructor() {\r\n    super(\"spreadsheet-no-file-created\");\r\n  }\r\n}\r\n","import { Failure } from \"./Failure\";\r\n\r\nexport class FileReaderFailure<T> extends Failure<T, \"file-reader-failure\"> {\r\n  public readonly event?: ProgressEvent<FileReader>;\r\n\r\n  constructor(event: ProgressEvent<FileReader>) {\r\n    super(\"file-reader-failure\");\r\n    this.event = event;\r\n  }\r\n}\r\n\r\nexport class FileReaderAbortedFailure<T> extends Failure<\r\n  T,\r\n  \"file-reader-aborted\"\r\n> {\r\n  constructor() {\r\n    super(\"file-reader-aborted\");\r\n  }\r\n}\r\n\r\nexport class FileReaderNoEventTargetFailure<T> extends Failure<\r\n  T,\r\n  \"file-reader-no-event-target\"\r\n> {\r\n  constructor() {\r\n    super(\"file-reader-no-event-target\");\r\n  }\r\n}\r\n\r\nexport class FileReaderInvalidTypeFailure<T> extends Failure<\r\n  T,\r\n  \"file-reader-invalid-type\"\r\n> {\r\n  public readonly eventValue: string | ArrayBuffer | null;\r\n\r\n  constructor(eventValue: string | ArrayBuffer | null) {\r\n    super(\"file-reader-invalid-type\");\r\n    this.eventValue = eventValue;\r\n  }\r\n}\r\n\r\nexport class FileReaderMissingFileFailure<T> extends Failure<\r\n  T,\r\n  \"file-reader-missing-file-failure\"\r\n> {\r\n  constructor() {\r\n    super(\"file-reader-missing-file-failure\");\r\n  }\r\n}\r\n","import {\r\n  FileReaderAbortedFailure,\r\n  FileReaderFailure,\r\n  FileReaderInvalidTypeFailure,\r\n  FileReaderMissingFileFailure,\r\n  FileReaderNoEventTargetFailure,\r\n} from \"../../result/FileFailures\";\r\nimport { Success } from \"../../result/Success\";\r\n\r\ntype FileReaderResult<T> =\r\n  | Success<T>\r\n  | FileReaderMissingFileFailure<T>\r\n  | FileReaderFailure<T>\r\n  | FileReaderAbortedFailure<T>\r\n  | FileReaderInvalidTypeFailure<T>\r\n  | FileReaderNoEventTargetFailure<T>;\r\n\r\nexport class FileIO {\r\n  /**\r\n   * Read file from HTML input element as ArrayBuffer\r\n   */\r\n  static async readFileAsArrayBuffer(input: HTMLInputElement) {\r\n    return new Promise<FileReaderResult<ArrayBuffer>>((resolve) => {\r\n      const file = input.files ? input.files[0] : undefined;\r\n\r\n      if (!file) {\r\n        return new FileReaderMissingFileFailure();\r\n      }\r\n\r\n      const reader = new FileReader();\r\n\r\n      reader.onerror = (error) => {\r\n        resolve(new FileReaderFailure(error));\r\n      };\r\n\r\n      reader.onabort = () => {\r\n        resolve(new FileReaderAbortedFailure());\r\n      };\r\n\r\n      reader.onload = (event) => {\r\n        if (!event.target || event.target.result === null) {\r\n          resolve(new FileReaderNoEventTargetFailure());\r\n        } else if (typeof event.target.result === \"string\") {\r\n          resolve(new FileReaderInvalidTypeFailure(event.target.result));\r\n        } else {\r\n          resolve(new Success(event.target.result));\r\n        }\r\n      };\r\n\r\n      reader.readAsArrayBuffer(file);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Read file from HTML input element as text\r\n   */\r\n  static async readFileAsText(input: HTMLInputElement) {\r\n    return new Promise<FileReaderResult<string>>((resolve) => {\r\n      const file = input.files ? input.files[0] : undefined;\r\n\r\n      if (!file) {\r\n        return new FileReaderMissingFileFailure();\r\n      }\r\n\r\n      const reader = new FileReader();\r\n\r\n      reader.onerror = (error) => {\r\n        resolve(new FileReaderFailure(error));\r\n      };\r\n\r\n      reader.onabort = () => {\r\n        resolve(new FileReaderAbortedFailure());\r\n      };\r\n\r\n      reader.onload = (event) => {\r\n        if (typeof event.target?.result === \"string\") {\r\n          resolve(new Success(event.target.result));\r\n        } else if (!event.target) {\r\n          resolve(new FileReaderNoEventTargetFailure());\r\n        } else {\r\n          resolve(new FileReaderInvalidTypeFailure(event.target.result));\r\n        }\r\n      };\r\n\r\n      reader.readAsText(file);\r\n    });\r\n  }\r\n}\r\n","import * as yup from \"yup\";\r\nimport { JsonTransactionInitializer } from \"../../classes/Transaction\";\r\nimport { Spreadsheet } from \"./Spreadsheet\";\r\n\r\n/* eslint-disable no-useless-escape */\r\n\r\nexport type IOJsonTransaction = Pick<\r\n  JsonTransactionInitializer,\r\n  \"category\" | \"comment\" | \"integerAmount\" | \"time\"\r\n>;\r\n\r\nexport class TransactionSpreadsheet extends Spreadsheet<IOJsonTransaction> {\r\n  /**\r\n   * The spreadsheet schema\r\n   */\r\n  public schema = yup\r\n    .object<IOJsonTransaction>({\r\n      comment: yup.string(),\r\n      category: yup.string().defined().min(1),\r\n      integerAmount: yup.number().defined().integer(),\r\n      time: yup.number().defined().positive().integer(),\r\n    })\r\n    .defined();\r\n\r\n  /**\r\n   * The spreadsheet options\r\n   */\r\n  public options = {\r\n    category: {\r\n      names: [\"Kategoria\", \"Category\", \"Class\", \"Luokka\"],\r\n    },\r\n    integerAmount: {\r\n      names: [\"Summa\", \"Sum\", \"Määrä\", \"Amount\"],\r\n      transformBeforeValidation: (value: any) => {\r\n        const string = String(value)\r\n          .replace(/,/g, \".\")\r\n          .replace(/[^\\d\\-\\.]/g, \"\");\r\n        const number = Number(string);\r\n        return Math.round(number * 100);\r\n      },\r\n    },\r\n    time: {\r\n      names: [\"Aika\", \"Time\", \"Päiväys\", \"Päivä\", \"Päivämäärä\", \"Pvm\", \"Date\"],\r\n      transformBeforeValidation: (value: any) => {\r\n        return excelDateToJSDate(Number(value)).getTime();\r\n      },\r\n    },\r\n    comment: {\r\n      names: [\r\n        \"Kommentti\",\r\n        \"Selite\",\r\n        \"Seloste\",\r\n        \"Lisätieto\",\r\n        \"Details\",\r\n        \"Comment\",\r\n        \"Explanation\",\r\n        \"Description\",\r\n      ],\r\n    },\r\n  };\r\n\r\n  /**\r\n   * Spreadsheet creator\r\n   */\r\n  createRow(row: IOJsonTransaction): object {\r\n    return {\r\n      amount: row.integerAmount / 100,\r\n      comment: row.comment || \"\",\r\n      category: row.category,\r\n      time: new Date(row.time),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Spreadsheet file name\r\n   */\r\n  getFileName() {\r\n    const datestring = new Date().toLocaleDateString();\r\n    return `Nexpenda - ${datestring}`;\r\n  }\r\n\r\n  /**\r\n   * Spreadsheet sheet name\r\n   */\r\n  getFileSheetName() {\r\n    return `Transactions`;\r\n  }\r\n\r\n  /**\r\n   * Spreadsheet row order\r\n   */\r\n  sortRows(rows: IOJsonTransaction[]): IOJsonTransaction[] {\r\n    return rows.sort((a, b) => {\r\n      return a.time - b.time;\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Converts an excel serial date\r\n *\r\n * `ddddd.ttttt` where `ddddd` is the integer amount of days since\r\n * January 0, 1900 (including 29.2.1900 which does not exist) and\r\n * `ttttt` is the fraction of a 24-hour day.\r\n *\r\n * Thank you to stackoverflow user silkfire\r\n * https://stackoverflow.com/questions/16229494/converting-excel-date-serial-number-to-date-using-javascript\r\n *\r\n * @param serial Excel date serial number\r\n */\r\nfunction excelDateToJSDate(serial: number) {\r\n  var utc_days = Math.floor(serial - 25569);\r\n  var utc_value = utc_days * 86400;\r\n  var date_info = new Date(utc_value * 1000);\r\n\r\n  var fractional_day = serial - Math.floor(serial) + 0.0000001;\r\n\r\n  var total_seconds = Math.floor(86400 * fractional_day);\r\n\r\n  var seconds = total_seconds % 60;\r\n\r\n  total_seconds -= seconds;\r\n\r\n  var hours = Math.floor(total_seconds / (60 * 60));\r\n  var minutes = Math.floor(total_seconds / 60) % 60;\r\n\r\n  return new Date(\r\n    date_info.getFullYear(),\r\n    date_info.getMonth(),\r\n    date_info.getDate(),\r\n    hours,\r\n    minutes,\r\n    seconds\r\n  );\r\n}\r\n","import XLSX from \"xlsx\";\r\nimport * as yup from \"yup\";\r\nimport { Failure } from \"../../result/Failure\";\r\nimport { ErrorFailure } from \"../../result/GenericFailures\";\r\nimport {\r\n  SpreadsheetNoFileCreatedFailure,\r\n  SpreadsheetReadFileFailure,\r\n  SpreadsheetReadRowFailure,\r\n} from \"../../result/SpreadsheetFailures\";\r\nimport { Success } from \"../../result/Success\";\r\nimport { FileIO } from \"./FileIO\";\r\n\r\nexport type SpreadsheetReadFileResult<T> = {\r\n  rows: T[];\r\n  succeeded: number;\r\n  failed: number;\r\n  total: number;\r\n};\r\n\r\nexport abstract class Spreadsheet<T extends object> {\r\n  /**\r\n   * The latest created file for downloading\r\n   */\r\n  private _workbook?: XLSX.WorkBook;\r\n\r\n  /**\r\n   * Rows count\r\n   */\r\n  protected _rowsCount: number = 0;\r\n\r\n  /**\r\n   * Escpaes a filename: removes unwanted characters and slices to\r\n   * wanted length\r\n   */\r\n  static escapeFileName(name: string, filetype?: string) {\r\n    /* eslint-disable no-useless-escape */\r\n    return name\r\n      .replace(/[\\:\\\\\\/\\?\\*\\[\\]]/g, \"\")\r\n      .slice(0, 29 - (filetype?.length ?? 0))\r\n      .concat(filetype ? \".\" + filetype : \"\");\r\n  }\r\n\r\n  /**\r\n   * The schema (must be implemented by implementing class)\r\n   */\r\n  public abstract schema: yup.ObjectSchema<T>;\r\n\r\n  /**\r\n   * Options for spreadsheet (must be implemented by implementing class)\r\n   */\r\n  public abstract options: {\r\n    [C in keyof T]: {\r\n      names: string[];\r\n      transformBeforeValidation?: (value: any) => any;\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Parses and validates a single row\r\n   */\r\n  private async parseRow(row: any) {\r\n    if (typeof row !== \"object\" || !row) {\r\n      return new SpreadsheetReadRowFailure<T>();\r\n    }\r\n    try {\r\n      const transformed: { [C in keyof T]?: any } = {};\r\n      Object.keys(this.options).forEach((key) => {\r\n        const options = this.options[key as keyof T];\r\n        const columnKey = Object.keys(row).find((_) => {\r\n          return options.names\r\n            .map((_) => _.toLowerCase())\r\n            .includes(_.toLowerCase());\r\n        });\r\n        if (columnKey) {\r\n          const columnValue = row[columnKey];\r\n          transformed[key as keyof T] = options.transformBeforeValidation\r\n            ? options.transformBeforeValidation(columnValue)\r\n            : columnValue;\r\n        }\r\n      });\r\n      const validation = await this.schema.validate(transformed);\r\n      return new Success(validation);\r\n    } catch (e) {\r\n      return new ErrorFailure<T>(e, { silent: true });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Takes a HTML input (input) and reads a file from it. On file upload,\r\n   * parses the file to an arraybuffer, then an XLSX workbook, from which\r\n   * it parses all the rows to objects and returns all the succesfully\r\n   * parsed rows.\r\n   *\r\n   * @param input HTMLInputElement (with type of file)\r\n   */\r\n  async readFile(input: HTMLInputElement) {\r\n    try {\r\n      // Parse as text\r\n      const arrayBuffer = await FileIO.readFileAsArrayBuffer(input);\r\n      if (arrayBuffer.isFailure()) {\r\n        return new SpreadsheetReadFileFailure<SpreadsheetReadFileResult<T>>();\r\n      }\r\n\r\n      // Create workbook and read to JSON\r\n      const workbook = XLSX.read(arrayBuffer.value, { type: \"buffer\" });\r\n      this._workbook = workbook;\r\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\r\n      const json = XLSX.utils.sheet_to_json(sheet, { raw: true });\r\n\r\n      // Parse rows\r\n      const rowParsers = json.map((row) => this.parseRow(row));\r\n      const parsedRows = await Promise.all(rowParsers);\r\n      const succeededRows = Success.All(parsedRows);\r\n      const failedRows = Failure.All(parsedRows);\r\n\r\n      // Warn on failed rows\r\n      if (failedRows.length > 0) {\r\n        console.warn(`Failed parsing ${failedRows.length} rows`, failedRows);\r\n      }\r\n\r\n      // Return succeeded rows and count of failed rows\r\n      return new Success<SpreadsheetReadFileResult<T>>({\r\n        rows: succeededRows.map((_) => _.value),\r\n        succeeded: succeededRows.length,\r\n        failed: failedRows.length,\r\n        total: succeededRows.length + failedRows.length,\r\n      });\r\n    } catch (error) {\r\n      return new ErrorFailure<SpreadsheetReadFileResult<T>>(error, {\r\n        silent: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Function to convert a row into a JSON object for downloading. Must\r\n   * be implemented by an extending class.\r\n   */\r\n  protected abstract createRow(row: T): object;\r\n\r\n  /**\r\n   * Function to sort rows. Must be implemented by an extending class.\r\n   */\r\n  protected abstract sortRows(rows: T[]): T[];\r\n\r\n  /**\r\n   * Function to generate a name for the created file. Must be implemented\r\n   * by an extending class.\r\n   */\r\n  protected abstract getFileName(): string;\r\n\r\n  /**\r\n   * Function to generate a name for the sheet of the created file. Must be\r\n   * implemented by an extending class.\r\n   */\r\n  protected abstract getFileSheetName(): string;\r\n\r\n  /**\r\n   * Gets number of rows\r\n   */\r\n  getRowsCount(): number {\r\n    return this._rowsCount;\r\n  }\r\n\r\n  /**\r\n   * Generates a spreadsheet for downloading\r\n   */\r\n  createFile(rows: T[]) {\r\n    /**\r\n     * Create new book\r\n     */\r\n    const workbook = XLSX.utils.book_new();\r\n\r\n    /**\r\n     * Update rows count\r\n     */\r\n    this._rowsCount = rows.length;\r\n\r\n    /**\r\n     * Sort rows and map to objects of wanted shape\r\n     */\r\n    const sortedRows = this.sortRows(rows);\r\n    const createdRows = sortedRows.map((row) => this.createRow(row));\r\n\r\n    /**\r\n     * Create worksheet from mapped and sorted rows and add to workbook\r\n     */\r\n    const worksheet = XLSX.utils.json_to_sheet(createdRows);\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, this.getFileSheetName());\r\n\r\n    /**\r\n     * Save workbook\r\n     */\r\n    this._workbook = workbook;\r\n  }\r\n\r\n  /**\r\n   * Downloads a created file\r\n   */\r\n  downloadFile() {\r\n    /**\r\n     * Ensure a workbook exists\r\n     */\r\n    if (!this._workbook) {\r\n      return new SpreadsheetNoFileCreatedFailure<void>();\r\n    }\r\n\r\n    /**\r\n     * Download file\r\n     */\r\n    const filename = Spreadsheet.escapeFileName(this.getFileName(), \"xlsx\");\r\n    XLSX.writeFile(this._workbook, filename);\r\n    return Success.Empty();\r\n  }\r\n}\r\n","import \"./FileUploader.scss\";\r\nimport React from \"react\"\r\nimport { EnhancedButton } from \"../EnhancedButton/EnhancedButton\";\r\nimport { Publish as UploadIcon, Close as CancelIcon } from \"@material-ui/icons\"\r\nimport { Button, ButtonGroup } from \"@material-ui/core\";\r\nimport { useFileUploaderController } from \"./useFileUploaderController\";\r\n\r\nexport type FileUploaderProps = {\r\n}\r\n\r\nexport function FileUploader(props: FileUploaderProps) {\r\n\r\n\tconst controller = useFileUploaderController(props)\r\n\r\n\tconst buttonLabel = (() => {\r\n\t\tif (controller.result === null) {\r\n\t\t\treturn \"Error\"\r\n\t\t} else if (controller.result) {\r\n\t\t\treturn `Upload ${controller.result.succeeded} rows`\r\n\t\t} else if (controller.uploading) {\r\n\t\t\treturn \"Uploading...\"\r\n\t\t} else if (controller.parsing) {\r\n\t\t\treturn \"Reading file...\"\r\n\t\t} else {\r\n\t\t\treturn \"Upload file\"\r\n\t\t}\r\n\t})()\r\n\r\n\treturn <div className=\"FileUploader\">\r\n\r\n\t\t<ButtonGroup\r\n\t\t\tcolor=\"primary\"\r\n\t\t\tfullWidth\r\n\t\t>\r\n\r\n\t\t\t{\r\n\t\t\t\tcontroller.result\r\n\t\t\t\t\t? <EnhancedButton\r\n\t\t\t\t\t\tkey=\"file-uploader-button-no-result\"\r\n\t\t\t\t\t\tcomponent=\"label\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tvariant={\"contained\"}\r\n\t\t\t\t\t\tonClick={() => controller.handleUpload()}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tloading={controller.uploading || controller.parsing}\r\n\t\t\t\t\t\tendIcon={<UploadIcon />}\r\n\t\t\t\t\t\tchildren={buttonLabel}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t: <EnhancedButton\r\n\t\t\t\t\t\tkey=\"file-uploader-button-has-result\"\r\n\t\t\t\t\t\tcomponent=\"label\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tloading={controller.uploading || controller.parsing}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{buttonLabel}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\tstyle={{ display: \"none\" }}\r\n\t\t\t\t\t\t\tonChange={controller.handleFileUpload}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</EnhancedButton>\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\t{\r\n\t\t\t\tcontroller.result\r\n\t\t\t\t\t? <Button\r\n\t\t\t\t\t\tclassName=\"cancelButton\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tvariant={\"outlined\"}\r\n\t\t\t\t\t\tonClick={controller.handleCancel}\r\n\t\t\t\t\t\tdisabled={controller.uploading || controller.parsing}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CancelIcon />\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t: null\r\n\t\t\t}\r\n\r\n\t\t</ButtonGroup>\r\n\r\n\t</div >\r\n}","import ReactGA from \"react-ga\";\r\nimport React, { useState } from \"react\"\r\nimport { useStoreActions } from \"../../store\"\r\nimport { DataUtils } from \"../../utils/DataUtils/DataUtils\"\r\nimport { SpreadsheetReadFileResult } from \"../../utils/FileIO/Spreadsheet\"\r\nimport { IOJsonTransaction, TransactionSpreadsheet } from \"../../utils/FileIO/TransactionSpreadsheet\"\r\nimport { FileUploaderProps } from \"./FileUploader\"\r\n\r\nexport function useFileUploaderController(props: FileUploaderProps) {\r\n\r\n\tconst postTransactions = useStoreActions(_ => _.transactions.postTransactions)\r\n\r\n\tconst [result, setResult] = useState<undefined | null | SpreadsheetReadFileResult<IOJsonTransaction>>()\r\n\tconst [parsing, setParsing] = useState(false)\r\n\tconst [uploading, setUploading] = useState(false)\r\n\r\n\tconst notify = useStoreActions(_ => _.notification.notify)\r\n\r\n\t/**\r\n\t * Canceling resets all status\r\n\t */\r\n\tfunction handleCancel() {\r\n\t\tsetResult(undefined)\r\n\t\tsetParsing(false)\r\n\t\tsetUploading(false)\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param e Change event from an input[type=\"file\"] element after a file\r\n\t * has been uploaded.\r\n\t */\r\n\tasync function handleFileUpload(e: React.ChangeEvent<HTMLInputElement>) {\r\n\r\n\t\t// Mark as parsing\r\n\t\tsetParsing(true)\r\n\r\n\t\t// Read the result to a transaction spreadsheet\r\n\t\tconst transactionSpreadsheet = new TransactionSpreadsheet()\r\n\t\tconst readResult = await transactionSpreadsheet.readFile(e.target)\r\n\r\n\t\t// If read succeeded, show result, else show error\r\n\t\tif (readResult.isSuccess()) {\r\n\t\t\tReactGA.event({\r\n\t\t\t\taction: \"Upload Transactions File\",\r\n\t\t\t\tcategory: \"Transactions Files\",\r\n\t\t\t\tlabel: \"Upload file\",\r\n\t\t\t\tvalue: readResult.value.total,\r\n\t\t\t})\r\n\t\t\tconst s = readResult.value.succeeded\r\n\t\t\tconst t = readResult.value.total\r\n\t\t\tnotify({ message: `File read (${s}/ ${t} rows)` })\r\n\t\t\tsetResult(readResult.value)\r\n\t\t} else {\r\n\t\t\tnotify({ message: `Error reading file` })\r\n\t\t\tsetResult(null)\r\n\t\t}\r\n\r\n\t\t// Reset parsing\r\n\t\tsetParsing(false)\r\n\t}\r\n\r\n\t/**\r\n\t * After a file has been read, handle uploading the rows to the\r\n\t * server.\r\n\t */\r\n\tasync function handleUpload() {\r\n\r\n\t\t// Find all rows to upload, if none exist, notify error and stop\r\n\t\tconst rowsToUpload = result?.rows\r\n\t\tif (!rowsToUpload) {\r\n\t\t\tsetParsing(false)\r\n\t\t\tsetUploading(false)\r\n\t\t\treturn notify({\r\n\t\t\t\tmessage: \"No transactions found in file\",\r\n\t\t\t\tseverity: \"warning\",\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// Start uploading indicator\r\n\t\tsetUploading(true)\r\n\r\n\t\t// Chunkify rows to chunks of hundreds and post those chunks one by one\r\n\t\tconst chunks = DataUtils.chunkify(rowsToUpload, 100)\r\n\t\tconst postResults: PromiseType<ReturnType<typeof postTransactions>>[] = []\r\n\t\tfor (const chunk of chunks) {\r\n\t\t\tconst result = await postTransactions(chunk)\r\n\t\t\tpostResults.push(result)\r\n\t\t}\r\n\r\n\t\t// Check whether all chunks were succesfully posted\r\n\t\tif (postResults.every(_ => _.isSuccess())) {\r\n\r\n\t\t\t// Count total number of rows uploaded\r\n\t\t\tconst total = postResults.reduce((sum, chunk) => {\r\n\t\t\t\tif (chunk.isSuccess()) {\r\n\t\t\t\t\treturn sum + chunk.value.t.length\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn sum\r\n\t\t\t\t}\r\n\t\t\t}, 0)\r\n\r\n\t\t\t// Notify success\r\n\t\t\tnotify({\r\n\t\t\t\tmessage: `${total} / ${rowsToUpload.length} transactions succesfully uploaded.`,\r\n\t\t\t\tseverity: \"success\"\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// Check if any failures occured\r\n\t\tconst failure = postResults.find(_ => _.isFailure())\r\n\t\tif (failure && failure.isFailure()) {\r\n\t\t\tnotify({\r\n\t\t\t\tmessage:\r\n\t\t\t\t\tfailure.reason === \"invalidServerResponse\"\r\n\t\t\t\t\t\t? \"Invalid response from server\"\r\n\t\t\t\t\t\t: \"Failure to upload transactions\",\r\n\t\t\t\tseverity: \"error\",\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// Rest status\r\n\t\tsetUploading(false)\r\n\t\tsetResult(undefined)\r\n\t\tsetParsing(false)\r\n\t}\r\n\r\n\treturn {\r\n\t\thandleFileUpload,\r\n\t\thandleUpload,\r\n\t\thandleCancel,\r\n\t\tparsing,\r\n\t\tuploading,\r\n\t\tresult,\r\n\t}\r\n}","import \"./FileDownloader.scss\";\r\nimport React from \"react\"\r\nimport { EnhancedButton } from \"../EnhancedButton/EnhancedButton\";\r\nimport { GetApp as DownloadIcon } from \"@material-ui/icons\"\r\nimport { useFileDownloaderController } from \"./useFileDownloaderController\";\r\n\r\nexport type FileDownloaderProps = {\r\n}\r\n\r\nexport function FileDownloader(props: FileDownloaderProps) {\r\n\r\n\tconst controller = useFileDownloaderController(props)\r\n\r\n\treturn <EnhancedButton\r\n\t\tcomponent=\"label\"\r\n\t\tcolor=\"primary\"\r\n\t\tonClick={controller.handleClick}\r\n\t\tfullWidth\r\n\t\tvariant=\"outlined\"\r\n\t\tloading={controller.loading}\r\n\t\tendIcon={<DownloadIcon />}\r\n\t>\r\n\t\t{\"Download file\"}\r\n\t</EnhancedButton>\r\n}","import ReactGA from \"react-ga\";\r\nimport { useCallback, useState } from \"react\"\r\nimport { useStoreActions, useStoreState } from \"../../store\"\r\nimport { TransactionSpreadsheet } from \"../../utils/FileIO/TransactionSpreadsheet\"\r\nimport { FileDownloaderProps } from \"./FileDownloader\"\r\n\r\nexport function useFileDownloaderController(props: FileDownloaderProps) {\r\n\r\n\tconst transactions = useStoreState(_ => _.transactions.items)\r\n\r\n\tconst notify = useStoreActions(_ => _.notification.notify)\r\n\r\n\tconst [loading, setLoading] = useState(false)\r\n\r\n\tconst handleDownload = useCallback(async () => {\r\n\r\n\t\tsetLoading(true)\r\n\r\n\t\tconst spreadsheet = new TransactionSpreadsheet()\r\n\r\n\t\tspreadsheet.createFile(transactions.map(t => ({\r\n\t\t\tcategory: t.category.value,\r\n\t\t\tintegerAmount: t.amount.value,\r\n\t\t\ttime: t.date.getTime(),\r\n\t\t\tcomment: t.comment,\r\n\t\t})))\r\n\r\n\t\tspreadsheet.downloadFile()\r\n\r\n\t\tsetLoading(false)\r\n\r\n\t\tReactGA.event({\r\n\t\t\taction: \"Download Transactions File\",\r\n\t\t\tcategory: \"Transactions Files\",\r\n\t\t\tlabel: spreadsheet.getFileName(),\r\n\t\t\tvalue: spreadsheet.getRowsCount(),\r\n\t\t})\r\n\r\n\t\tnotify({\r\n\t\t\tmessage: `File downloaded.`\r\n\t\t})\r\n\r\n\t}, [setLoading, notify, transactions])\r\n\r\n\treturn {\r\n\t\tloading,\r\n\t\thandleClick: handleDownload,\r\n\t}\r\n}","import \"./UserAvatar.scss\";\r\nimport React from \"react\"\r\nimport cx from \"classnames\"\r\nimport { useUserAvatarController } from \"./useUserAvatarController\"\r\nimport { Avatar, AvatarProps, CircularProgress } from \"@material-ui/core\";\r\n\r\nexport type UserAvatarProps = {\r\n\r\n} & AvatarProps\r\n\r\nexport function UserAvatar(props: UserAvatarProps) {\r\n\r\n\tconst { className, ...MuiAvatarProps } = props\r\n\r\n\tconst controller = useUserAvatarController(props)\r\n\r\n\treturn <Avatar\r\n\t\tclassName={cx(\"UserAvatar\", className)}\r\n\t\t{...MuiAvatarProps}\r\n\t>\r\n\t\t{\r\n\t\t\tcontroller.user\r\n\t\t\t\t? controller.user.photoUrl\r\n\t\t\t\t\t? <img alt=\"profileimage\" src={controller.user.photoUrl} />\r\n\t\t\t\t\t: controller.user.initials\r\n\t\t\t\t: <CircularProgress variant=\"indeterminate\" />\r\n\t\t}\r\n\t</Avatar>\r\n}","import { useStoreState } from \"../../store\"\r\nimport { UserAvatarProps } from \"./UserAvatar\"\r\n\r\nexport function useUserAvatarController(props: UserAvatarProps) {\r\n\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\r\n\treturn { user }\r\n\r\n}","import \"./SettingsProfilePanel.scss\";\r\nimport React from \"react\"\r\nimport { useSettingsProfilePanelController } from \"./useSettingsProfilePanelController\"\r\nimport { CircularProgress, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Type } from \"../../../components/Type/Type\";\r\nimport { Clear as ClearIcon, Check as CheckIcon, Edit as EditIcon } from \"@material-ui/icons\";\r\nimport { UserAvatar } from \"../../../components/UserAvatar/UserAvatar\";\r\n\r\nexport type SettingsProfilePanelProps = {\r\n\r\n}\r\n\r\nexport function SettingsProfilePanel(props: SettingsProfilePanelProps) {\r\n\r\n\tconst controller = useSettingsProfilePanelController(props)\r\n\r\n\tif (!controller.user) return null\r\n\r\n\treturn <div className=\"SettingsProfilePanel\">\r\n\r\n\t\t<div className=\"avatarContainer\">\r\n\t\t\t<UserAvatar />\r\n\t\t</div>\r\n\r\n\t\t<div className=\"nameContainer\" onClick={controller.name.handleStartEdit}>\r\n\t\t\t{\r\n\t\t\t\tcontroller.name.editing\r\n\t\t\t\t\t? <div className=\"editNameContainer\">\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid={controller.editNameInputId}\r\n\t\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\t\tvalue={controller.name.value}\r\n\t\t\t\t\t\t\tonChange={e => controller.name.setValue(e.target.value)}\r\n\t\t\t\t\t\t\tonKeyDown={e => {\r\n\t\t\t\t\t\t\t\tif (e.key === \"Escape\") {\r\n\t\t\t\t\t\t\t\t\tcontroller.name.handleCancelEdit()\r\n\t\t\t\t\t\t\t\t} else if (e.key === \"Enter\") {\r\n\t\t\t\t\t\t\t\t\tcontroller.name.handleSubmit()\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tdisabled={controller.name.loading}\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\te.stopPropagation()\r\n\t\t\t\t\t\t\t\tcontroller.name.handleSubmit()\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcontroller.name.loading\r\n\t\t\t\t\t\t\t\t\t? <CircularProgress size={24} />\r\n\t\t\t\t\t\t\t\t\t: <CheckIcon className=\"check\" />\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tdisabled={controller.name.loading}\r\n\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\te.stopPropagation();\r\n\t\t\t\t\t\t\t\tcontroller.name.handleCancelEdit();\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ClearIcon className=\"clear\" />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: <div className=\"editableContainer\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Type component=\"label\" size=\"sm\" variant=\"boldcaps\" color=\"gray-700\">\r\n\t\t\t\t\t\t\t\t{\"Name\"}\r\n\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t\t{controller.user.displayName}\r\n\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<IconButton onClick={(e) => {\r\n\t\t\t\t\t\t\te.stopPropagation()\r\n\t\t\t\t\t\t\tcontroller.name.handleStartEdit()\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\r\n\t\t<div className=\"emailContainer\">\r\n\t\t\t<Type component=\"label\" size=\"sm\" variant=\"boldcaps\" color=\"gray-700\">\r\n\t\t\t\t{\"Email\"}\r\n\t\t\t</Type>\r\n\t\t\t<Type>\r\n\t\t\t\t{controller.user.email}\r\n\t\t\t</Type>\r\n\t\t</div>\r\n\r\n\t</div>\r\n}","import \"./SettingsSection.scss\";\r\nimport React from \"react\"\r\nimport cx from \"classnames\"\r\nimport { Type } from \"../../../components/Type/Type\";\r\n\r\nexport type SettingsSectionProps = {\r\n\tsectionTitle: string;\r\n} & React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>\r\n\r\nexport function SettingsSection(props: SettingsSectionProps) {\r\n\r\n\tconst { sectionTitle, className, ...divProps } = props\r\n\r\n\treturn <section className={cx(\"SettingsSection\", className)} {...divProps}>\r\n\t\t<div className=\"sectionTitle\">\r\n\t\t\t<Type size=\"md\" component=\"h2\" variant=\"bold\" color=\"gray-500\">\r\n\t\t\t\t{props.sectionTitle}\r\n\t\t\t</Type>\r\n\t\t</div>\r\n\t\t<div className=\"content\">\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t</section>\r\n}","import \"./Settings.scss\";\r\nimport React from \"react\"\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\nimport { ExitToApp as LogoutIcon } from \"@material-ui/icons\";\r\nimport { Type } from \"../../components/Type/Type\";\r\nimport { FileUploader } from \"../../components/FileUploader/FileUploader\";\r\nimport { FileDownloader } from \"../../components/FileDownloader/FileDownloader\";\r\nimport { useSettingsController } from \"./useSettingsController\";\r\nimport { SettingsProfilePanel } from \"./SettingsProfilePanel/SettingsProfilePanel\";\r\nimport { SettingsSection } from \"./SettingsSection/SettingsSection\";\r\n\r\nexport type SettingsProps = {\r\n}\r\n\r\nexport function Settings(props: SettingsProps) {\r\n\r\n\tconst controller = useSettingsController()\r\n\r\n\t// Loading\r\n\tif (!controller.user) {\r\n\t\treturn <div className=\"Settings loading\">\r\n\t\t\t<CircularProgress />\r\n\t\t\t<Type>\r\n\t\t\t\t{\"Loading profile\"}\r\n\t\t\t</Type>\r\n\t\t</div>\r\n\t}\r\n\r\n\treturn <div className=\"Settings\">\r\n\r\n\t\t<SettingsSection className=\"profilePanel\" sectionTitle=\"Profile\">\r\n\t\t\t<SettingsProfilePanel />\r\n\t\t\t<Button\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tonClick={controller.handleLogout}\r\n\t\t\t\tstartIcon={<LogoutIcon />}\r\n\t\t\t\tfullWidth\r\n\t\t\t>\r\n\t\t\t\t{\"Log out\"}\r\n\t\t\t</Button>\r\n\t\t</SettingsSection>\r\n\r\n\t\t<SettingsSection className=\"fileHandlers\" sectionTitle=\"Export and import data\">\r\n\t\t\t<FileUploader />\r\n\t\t\t<FileDownloader />\r\n\t\t</SettingsSection>\r\n\r\n\t\t<SettingsSection sectionTitle=\"Version\">\r\n\t\t\t<Type>\r\n\t\t\t\t{\"1.0.0\"}\r\n\t\t\t</Type>\r\n\t\t</SettingsSection>\r\n\r\n\r\n\t</div >\r\n}","import ReactGA from \"react-ga\";\r\nimport { useCallback } from \"react\"\r\nimport { useStoreState, useStoreActions } from \"../../store\"\r\nimport { useRedirect } from \"../../hooks/utils/useRedirect\"\r\n\r\n\r\nexport function useSettingsController() {\r\n\tconst redirect = useRedirect()\r\n\r\n\t/**\r\n\t * Auth and logout\r\n\t */\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\tconst logout = useStoreActions(_ => _.auth.logout)\r\n\tconst handleLogout = useCallback(async function () {\r\n\t\tconst result = await logout()\r\n\t\tif (result.isSuccess()) {\r\n\t\t\tReactGA.event({\r\n\t\t\t\taction: \"Logout\",\r\n\t\t\t\tcategory: \"User\",\r\n\t\t\t})\r\n\t\t\tredirect(_ => _.login)\r\n\t\t}\r\n\t}, [logout, redirect])\r\n\r\n\treturn {\r\n\t\tuser,\r\n\t\thandleLogout,\r\n\t}\r\n}","import \"./AnalyticsHeader.scss\";\r\nimport React from \"react\";\r\nimport textureImg from \"../../../images/shapelined-_JBKdviweXI-unsplash.jpg\";\r\nimport { Type } from \"../../../components/Type/Type\";\r\nimport { useAnalyticsHeaderController } from \"./useAnalyticsHeaderController\";\r\nimport { useMdMedia } from \"../../../hooks/utils/useMedia\";\r\n\r\n\r\nexport function AnalyticsHeader() {\r\n\tuseAnalyticsHeaderController()\r\n\r\n\tconst isDesktop = useMdMedia()\r\n\r\n\tif (isDesktop) {\r\n\t\treturn <header className=\"AnalyticsHeader desktop\">\r\n\r\n\t\t\t<div className=\"title\">\r\n\t\t\t\t<Type component=\"h1\" size=\"xl\" color=\"gray-900\" variant=\"bold\">\r\n\t\t\t\t\t{\"Analytics\"}\r\n\t\t\t\t</Type>\r\n\t\t\t</div>\r\n\r\n\t\t</header>\r\n\t}\r\n\r\n\telse {\r\n\r\n\t\treturn <header className=\"AnalyticsHeader mobile\">\r\n\r\n\r\n\t\t\t<div className=\"texture-image-container\">\r\n\t\t\t\t<img src={textureImg} alt=\"\" />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"title\">\r\n\t\t\t\t<Type component=\"h1\" size=\"xl\" color=\"white\" variant=\"bold\">\r\n\t\t\t\t\t{\"Analytics\"}\r\n\t\t\t\t</Type>\r\n\t\t\t</div>\r\n\r\n\t\t</header>\r\n\r\n\t}\r\n\r\n}","import { useStoreState } from \"../../../store\";\r\n\r\nexport function useAnalyticsHeaderController() {\r\n\tconst intervalLabel = useStoreState(_ => _.interval.smartDisplayString)\r\n\r\n\treturn {\r\n\t\tintervalLabel\r\n\t}\r\n}","import React from \"react\";\r\nimport { IntervalManager } from \"../../../components/IntervalManager/IntervalManager\";\r\nimport { useMdMedia } from \"../../../hooks/utils/useMedia\";\r\nimport \"./AnalyticsPanel.scss\";\r\n\r\nexport type AnalyticsPanelProps = {\r\n\r\n}\r\n\r\nexport function AnalyticsPanel(props: AnalyticsPanelProps) {\r\n\r\n\tconst isDesktopLayout = useMdMedia()\r\n\r\n\treturn <div className=\"AnalyticsPanel\">\r\n\t\t<IntervalManager reverseControls={!isDesktopLayout} />\r\n\t</div>\r\n}","import { DateUtils } from \"../DateUtils/DateUtils\";\r\nimport { CalculateAnalyticsArguments } from \"./calculateAnalytics\";\r\n\r\nexport function calculateAnalyticsAllTime(args: CalculateAnalyticsArguments) {\r\n  // Record total\r\n  const total = {\r\n    total: 0,\r\n    incomes: 0,\r\n    expenses: 0,\r\n  };\r\n\r\n  // Record all incomes, expenses, their total sums and the\r\n  // cumulative sums for each month\r\n  const months: Record<\r\n    number,\r\n    {\r\n      key: number;\r\n      incomes: number;\r\n      expenses: number;\r\n      total: number;\r\n      cumulativeTotal: number;\r\n    }\r\n  > = {};\r\n\r\n  // Go through each transaction and count them towards their month\r\n  args.transactions.forEach((transaction) => {\r\n    // Get month key\r\n    const key = DateUtils.serializeMonth(transaction.date);\r\n\r\n    // Initialize missing months\r\n    if (!months[key]) {\r\n      months[key] = {\r\n        key,\r\n        incomes: 0,\r\n        expenses: 0,\r\n        total: 0,\r\n        cumulativeTotal: 0,\r\n      };\r\n    }\r\n\r\n    // Count amount values\r\n    total.total += transaction.amount.value;\r\n    months[key].total += transaction.amount.value;\r\n    if (transaction.amount.value > 0) {\r\n      total.incomes += transaction.amount.value;\r\n      months[key].incomes += transaction.amount.value;\r\n    }\r\n    if (transaction.amount.value < 0) {\r\n      total.expenses += transaction.amount.value;\r\n      months[key].expenses += transaction.amount.value;\r\n    }\r\n  });\r\n\r\n  // Calculate the cumulative sum\r\n  let accumulator = 0;\r\n  const sortedMonths = Object.values(months).sort((a, b) => a.key - b.key);\r\n  for (const month of sortedMonths) {\r\n    accumulator += month.total;\r\n    month.cumulativeTotal += accumulator;\r\n  }\r\n\r\n  return { total, months };\r\n}\r\n","import { Category } from \"../../classes/Category\";\r\nimport { CalculateAnalyticsArguments } from \"./calculateAnalytics\";\r\nimport {\r\n  subMonths,\r\n  startOfMonth,\r\n  endOfMonth,\r\n  differenceInMonths,\r\n  isAfter,\r\n} from \"date-fns\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nexport function calculateAnalyticsPastYear(args: CalculateAnalyticsArguments) {\r\n  // Get the earliest month possible and use this as a starting date\r\n  // if transactions do not exist over 12 months ago\r\n  const earliest = startOfMonth(\r\n    args.transactions.reduce((min, next) => {\r\n      return next.date.getTime() < min.getTime() ? next.date : min;\r\n    }, new Date())\r\n  );\r\n\r\n  // Get date for month 12 months ago\r\n  const yearAgo = startOfMonth(subMonths(new Date(), 11));\r\n\r\n  // Starting month is a year ago or on earliest transaction date\r\n  // if earliest transaction date is within 12 months\r\n  const startingMonth = isAfter(earliest, yearAgo) ? earliest : yearAgo;\r\n  const endingMonth = endOfMonth(new Date());\r\n\r\n  // Get number of months\r\n  const monthsCount = 1 + differenceInMonths(endingMonth, startingMonth);\r\n\r\n  const total = {\r\n    total: 0,\r\n    average: 0,\r\n    incomes: 0,\r\n    incomesAverage: 0,\r\n    expenses: 0,\r\n    expensesAverage: 0,\r\n    transactions: 0,\r\n    transactionsAverage: 0,\r\n  };\r\n\r\n  const categories: {\r\n    max: {\r\n      incomes: number;\r\n      expenses: number;\r\n    };\r\n    incomes: Record<\r\n      string,\r\n      {\r\n        id: string;\r\n        category: Category;\r\n        total: number;\r\n        average: number;\r\n        transactions: number;\r\n        percentageOfTotal: number;\r\n        percentageOfMax: number;\r\n      }\r\n    >;\r\n    expenses: Record<\r\n      string,\r\n      {\r\n        id: string;\r\n        category: Category;\r\n        total: number;\r\n        average: number;\r\n        transactions: number;\r\n        percentageOfTotal: number;\r\n        percentageOfMax: number;\r\n      }\r\n    >;\r\n  } = {\r\n    max: {\r\n      incomes: 0,\r\n      expenses: 0,\r\n    },\r\n    incomes: {},\r\n    expenses: {},\r\n  };\r\n\r\n  args.transactions\r\n    .filter((transaction) => {\r\n      return transaction.filter(\"\", startingMonth, endingMonth);\r\n    })\r\n    .forEach((transaction) => {\r\n      // Count transaction and its total\r\n      total.total += transaction.amount.value;\r\n      total.transactions += 1;\r\n\r\n      // Count income and income category\r\n      if (transaction.amount.value > 0) {\r\n        total.incomes += transaction.amount.value;\r\n\r\n        // Initialize income category if it doesn't yet exist\r\n        if (!categories.incomes[transaction.category.id]) {\r\n          categories.incomes[transaction.category.id] = {\r\n            id: uuid(),\r\n            category: transaction.category,\r\n            total: 0,\r\n            average: 0,\r\n            transactions: 0,\r\n            percentageOfTotal: 0,\r\n            percentageOfMax: 0,\r\n          };\r\n        }\r\n\r\n        // Count towards category\r\n        const category = categories.incomes[transaction.category.id];\r\n        category.total += transaction.amount.value;\r\n        category.transactions += 1;\r\n      }\r\n\r\n      // Count expense and expense category\r\n      if (transaction.amount.value < 0) {\r\n        total.expenses += transaction.amount.value;\r\n\r\n        // Initialize expense category if it doesn't yet exist\r\n        if (!categories.expenses[transaction.category.id]) {\r\n          categories.expenses[transaction.category.id] = {\r\n            id: uuid(),\r\n            category: transaction.category,\r\n            total: 0,\r\n            average: 0,\r\n            transactions: 0,\r\n            percentageOfTotal: 0,\r\n            percentageOfMax: 0,\r\n          };\r\n        }\r\n\r\n        // Count towards category\r\n        const category = categories.expenses[transaction.category.id];\r\n        category.total += transaction.amount.value;\r\n        category.transactions += 1;\r\n      }\r\n    });\r\n\r\n  // Utility average function\r\n  const avg = (num: number) => num / (monthsCount || 1);\r\n\r\n  // Calculate averages\r\n  total.average = avg(total.total);\r\n  total.incomesAverage = avg(total.incomes);\r\n  total.expensesAverage = avg(total.expenses);\r\n  total.transactionsAverage = avg(total.transactions);\r\n  Object.values(categories.incomes).forEach((category) => {\r\n    category.average = avg(category.total);\r\n  });\r\n  Object.values(categories.expenses).forEach((category) => {\r\n    category.average = avg(category.total);\r\n  });\r\n\r\n  // Calculate max income and expense category averages\r\n  categories.max.incomes = Object.values(categories.incomes).reduce(\r\n    (max, next) => (next.average > max ? next.average : max),\r\n    0\r\n  );\r\n  categories.max.expenses = Object.values(categories.expenses).reduce(\r\n    (max, next) => (next.average < max ? next.average : max),\r\n    0\r\n  );\r\n\r\n  // Calculate all percentages (in averages, not totals)\r\n  Object.values(categories.incomes).forEach((category) => {\r\n    const max = categories.max.incomes;\r\n    const tot = total.incomesAverage;\r\n    category.percentageOfMax = max === 0 ? 0 : 100 * (category.average / max);\r\n    category.percentageOfTotal = tot === 0 ? 0 : 100 * (category.average / tot);\r\n  });\r\n  Object.values(categories.expenses).forEach((category) => {\r\n    const max = categories.max.expenses;\r\n    const tot = total.expensesAverage;\r\n    category.percentageOfMax = max === 0 ? 0 : 100 * (category.average / max);\r\n    category.percentageOfTotal = tot === 0 ? 0 : 100 * (category.average / tot);\r\n  });\r\n\r\n  return {\r\n    total,\r\n    categories,\r\n    monthsCount,\r\n    startingMonth,\r\n    endingMonth,\r\n  };\r\n}\r\n","import { Category } from \"../../classes/Category\";\r\nimport { CalculateAnalyticsArguments } from \"./calculateAnalytics\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nexport function calculateAnalyticsSelected(args: CalculateAnalyticsArguments) {\r\n  const total = {\r\n    total: 0,\r\n    incomes: 0,\r\n    expenses: 0,\r\n    transactions: 0,\r\n  };\r\n\r\n  const categories: {\r\n    max: {\r\n      incomes: number;\r\n      expenses: number;\r\n    };\r\n    incomes: Record<\r\n      string,\r\n      {\r\n        id: string;\r\n        category: Category;\r\n        total: number;\r\n        transactions: number;\r\n        percentageOfTotal: number;\r\n        percentageOfMax: number;\r\n      }\r\n    >;\r\n    expenses: Record<\r\n      string,\r\n      {\r\n        id: string;\r\n        category: Category;\r\n        total: number;\r\n        transactions: number;\r\n        percentageOfTotal: number;\r\n        percentageOfMax: number;\r\n      }\r\n    >;\r\n  } = {\r\n    max: {\r\n      incomes: 0,\r\n      expenses: 0,\r\n    },\r\n    incomes: {},\r\n    expenses: {},\r\n  };\r\n\r\n  args.transactions\r\n    .filter((transaction) => {\r\n      return transaction.filter(\"\", args.interval.start, args.interval.end);\r\n    })\r\n    .forEach((transaction) => {\r\n      // Count transaction and its total\r\n      total.total += transaction.amount.value;\r\n      total.transactions += 1;\r\n\r\n      // Count income and income category\r\n      if (transaction.amount.value > 0) {\r\n        total.incomes += transaction.amount.value;\r\n\r\n        // Initialize income category if it doesn't yet exist\r\n        if (!categories.incomes[transaction.category.id]) {\r\n          categories.incomes[transaction.category.id] = {\r\n            id: uuid(),\r\n            category: transaction.category,\r\n            total: 0,\r\n            transactions: 0,\r\n            percentageOfTotal: 0,\r\n            percentageOfMax: 0,\r\n          };\r\n        }\r\n\r\n        // Count towards category\r\n        const category = categories.incomes[transaction.category.id];\r\n        category.total += transaction.amount.value;\r\n        category.transactions += 1;\r\n      }\r\n\r\n      // Count expense and expense category\r\n      if (transaction.amount.value < 0) {\r\n        total.expenses += transaction.amount.value;\r\n\r\n        // Initialize expense category if it doesn't yet exist\r\n        if (!categories.expenses[transaction.category.id]) {\r\n          categories.expenses[transaction.category.id] = {\r\n            id: uuid(),\r\n            category: transaction.category,\r\n            total: 0,\r\n            transactions: 0,\r\n            percentageOfTotal: 0,\r\n            percentageOfMax: 0,\r\n          };\r\n        }\r\n\r\n        // Count towards category\r\n        const category = categories.expenses[transaction.category.id];\r\n        category.total += transaction.amount.value;\r\n        category.transactions += 1;\r\n      }\r\n    });\r\n\r\n  // Calculate max income and expense categories\r\n  categories.max.incomes = Object.values(categories.incomes).reduce(\r\n    (max, next) => (next.total > max ? next.total : max),\r\n    0\r\n  );\r\n  categories.max.expenses = Object.values(categories.expenses).reduce(\r\n    (max, next) => (next.total < max ? next.total : max),\r\n    0\r\n  );\r\n\r\n  // Calculate all percentages\r\n  Object.values(categories.incomes).forEach((category) => {\r\n    const max = categories.max.incomes;\r\n    const tot = total.incomes;\r\n    category.percentageOfMax = max === 0 ? 0 : 100 * (category.total / max);\r\n    category.percentageOfTotal = tot === 0 ? 0 : 100 * (category.total / tot);\r\n  });\r\n  Object.values(categories.expenses).forEach((category) => {\r\n    const max = categories.max.expenses;\r\n    const tot = total.expenses;\r\n    category.percentageOfMax = max === 0 ? 0 : 100 * (category.total / max);\r\n    category.percentageOfTotal = tot === 0 ? 0 : 100 * (category.total / tot);\r\n  });\r\n\r\n  return {\r\n    total,\r\n    categories,\r\n  };\r\n}\r\n","import React, { useContext, useMemo } from \"react\";\r\nimport { useStoreState } from \"../store\"\r\nimport { calculateAnalytics } from \"../utils/AnalyticsUtils/calculateAnalytics\"\r\n\r\ntype AnalyticsContextType = ReturnType<typeof calculateAnalytics>\r\n\r\nconst AnalyticsContext = React.createContext<AnalyticsContextType>(getDefaultAnalyticsContextValue())\r\n\r\nexport function useAnalyticsContext() {\r\n\treturn useContext(AnalyticsContext)\r\n}\r\n\r\nexport function AnalyticsContextProvider(\r\n\tprops: { children?: React.ReactNode }\r\n) {\r\n\tconst transactions = useStoreState(_ => _.transactions.items)\r\n\tconst categories = useStoreState(_ => _.transactions.categories)\r\n\tconst startDate = useStoreState(_ => _.interval.startDate)\r\n\tconst endDate = useStoreState(_ => _.interval.endDate)\r\n\r\n\tconst analytics = useMemo(() => {\r\n\t\treturn calculateAnalytics({\r\n\t\t\ttransactions,\r\n\t\t\tcategories,\r\n\t\t\tinterval: {\r\n\t\t\t\tstart: startDate,\r\n\t\t\t\tend: endDate,\r\n\t\t\t}\r\n\t\t})\r\n\t}, [transactions, categories, startDate, endDate])\r\n\r\n\treturn <AnalyticsContext.Provider value={analytics}>\r\n\t\t{props.children}\r\n\t</AnalyticsContext.Provider>\r\n}\r\n\r\nfunction getDefaultAnalyticsContextValue(): AnalyticsContextType {\r\n\treturn {\r\n\t\tallTime: {\r\n\t\t\tmonths: {},\r\n\t\t\ttotal: {\r\n\t\t\t\ttotal: 0,\r\n\t\t\t\tincomes: 0,\r\n\t\t\t\texpenses: 0,\r\n\t\t\t}\r\n\t\t},\r\n\t\tpastYear: {\r\n\t\t\tcategories: {\r\n\t\t\t\tincomes: {},\r\n\t\t\t\texpenses: {},\r\n\t\t\t\tmax: {\r\n\t\t\t\t\texpenses: 0,\r\n\t\t\t\t\tincomes: 0,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tendingMonth: new Date(),\r\n\t\t\tstartingMonth: new Date(),\r\n\t\t\tmonthsCount: 0,\r\n\t\t\ttotal: {\r\n\t\t\t\ttransactionsAverage: 0,\r\n\t\t\t\ttransactions: 0,\r\n\t\t\t\ttotal: 0,\r\n\t\t\t\tincomesAverage: 0,\r\n\t\t\t\tincomes: 0,\r\n\t\t\t\texpensesAverage: 0,\r\n\t\t\t\texpenses: 0,\r\n\t\t\t\taverage: 0,\r\n\t\t\t}\r\n\t\t},\r\n\t\tselected: {\r\n\t\t\tcategories: {\r\n\t\t\t\tincomes: {},\r\n\t\t\t\texpenses: {},\r\n\t\t\t\tmax: {\r\n\t\t\t\t\tincomes: 0,\r\n\t\t\t\t\texpenses: 0,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttotal: {\r\n\t\t\t\texpenses: 0,\r\n\t\t\t\tincomes: 0,\r\n\t\t\t\ttransactions: 0,\r\n\t\t\t\ttotal: 0,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}","import { Category } from \"../../classes/Category\";\r\nimport { Transaction } from \"../../classes/Transaction\";\r\nimport { calculateAnalyticsAllTime } from \"./calculateAnalyticsAllTime\";\r\nimport { calculateAnalyticsPastYear } from \"./calculateAnalyticsPastYear\";\r\nimport { calculateAnalyticsSelected } from \"./calculateAnalyticsSelected\";\r\n\r\nexport type CalculateAnalyticsArguments = {\r\n  transactions: Transaction[];\r\n  categories: Category[];\r\n  interval: {\r\n    start: Date;\r\n    end: Date;\r\n  };\r\n};\r\n\r\nexport function calculateAnalytics(args: CalculateAnalyticsArguments) {\r\n  return {\r\n    allTime: calculateAnalyticsAllTime(args),\r\n    selected: calculateAnalyticsSelected(args),\r\n    pastYear: calculateAnalyticsPastYear(args),\r\n  };\r\n}\r\n","import \"./AnalyticsBlock.scss\"\r\nimport React from \"react\";\r\nimport cx from \"classnames\"\r\nimport { Type } from \"../../../components/Type/Type\";\r\n\r\nexport type AnalyticsBlockProps = {\r\n\theader?: string;\r\n\theaderIcon?: React.ReactNode;\r\n\theaderContent?: React.ReactNode;\r\n} & React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>\r\n\r\nexport function AnalyticsBlock(props: AnalyticsBlockProps) {\r\n\r\n\tconst {\r\n\t\tclassName,\r\n\t\tchildren,\r\n\t\theader,\r\n\t\theaderIcon,\r\n\t\theaderContent,\r\n\t\t...divProps\r\n\t} = props\r\n\r\n\treturn <div\r\n\t\tclassName={cx(\"AnalyticsBlock\", props.className)}\r\n\t\t{...divProps}\r\n\t>\r\n\t\t<div className=\"header\">\r\n\t\t\t{headerIcon}\r\n\t\t\t<Type variant=\"bold\">\r\n\t\t\t\t{header}\r\n\t\t\t</Type>\r\n\t\t\t<div className=\"header-content\">\r\n\t\t\t\t{props.headerContent}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"content\">\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t</div>\r\n}","import \"./AnalyticsTotals.scss\";\r\nimport React from \"react\"\r\nimport { useAnalyticsTotalsController } from \"./useAnalyticsTotalsController\"\r\nimport { Type } from \"../../../components/Type/Type\";\r\nimport { MoneyType } from \"../../../components/MoneyType/MoneyType\";\r\nimport { Functions as TotalsIcon } from \"@material-ui/icons\"\r\nimport { AnalyticsBlock } from \"../AnalyticsBlock/AnalyticsBlock\";\r\n\r\nexport type AnalyticsTotalsProps = {\r\n}\r\n\r\nexport function AnalyticsTotals(props: AnalyticsTotalsProps) {\r\n\r\n\tconst controller = useAnalyticsTotalsController(props)\r\n\r\n\treturn <AnalyticsBlock\r\n\t\theader=\"Totals\"\r\n\t\theaderIcon={<TotalsIcon />}\r\n\t>\r\n\t\t<div className=\"AnalyticsTotals\">\r\n\t\t\t<div className=\"header\">\r\n\t\t\t\t<Type color=\"gray-600\" variant=\"boldcaps\">\r\n\t\t\t\t\t{\"Total\"}\r\n\t\t\t\t</Type>\r\n\t\t\t\t<Type color=\"gray-600\" size=\"md\">\r\n\t\t\t\t\t{`(${controller.totals.transactions} transactions)`}\r\n\t\t\t\t</Type>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"total\">\r\n\t\t\t\t<MoneyType\r\n\t\t\t\t\tanimate\r\n\t\t\t\t\tamount={controller.totals.total}\r\n\t\t\t\t\tsize=\"xxl\"\r\n\t\t\t\t\tcolorIfPositive=\"green-600\"\r\n\t\t\t\t\tcolorIfNegative=\"red-600\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"subtotals\">\r\n\t\t\t\t<MoneyType\r\n\t\t\t\t\tanimate\r\n\t\t\t\t\tamount={controller.totals.incomes}\r\n\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\tvariant=\"regular\"\r\n\t\t\t\t\tcolorIfPositive=\"green-600\"\r\n\t\t\t\t\tcolorIfNegative=\"red-600\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Type color=\"gray-800\" size=\"md\">{\"/\"}</Type>\r\n\t\t\t\t<MoneyType\r\n\t\t\t\t\tanimate\r\n\t\t\t\t\tamount={controller.totals.expenses}\r\n\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\tvariant=\"regular\"\r\n\t\t\t\t\tcolorIfPositive=\"green-600\"\r\n\t\t\t\t\tcolorIfNegative=\"red-600\"\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t</AnalyticsBlock>\r\n}","import { useAnalyticsContext } from \"../../../contexts/AnalyticsContext.context\"\r\nimport { AnalyticsTotalsProps } from \"./AnalyticsTotals\"\r\n\r\nexport function useAnalyticsTotalsController(props: AnalyticsTotalsProps) {\r\n\tconst analytics = useAnalyticsContext()\r\n\r\n\treturn {\r\n\t\ttotals: analytics.selected.total\r\n\t}\r\n}","import \"./AnalyticsCategory.scss\";\nimport React from \"react\";\nimport { useAnalyticsCategoryController } from \"./useAnalyticsCategoryController\";\nimport { createClassnames } from \"../../../utils/Utils/createClassnames\";\nimport { motion } from \"framer-motion\";\nimport { Category } from \"../../../classes/Category\";\nimport { Type } from \"../../../components/Type/Type\";\nimport { MoneyType } from \"../../../components/MoneyType/MoneyType\";\n\nexport type AnalyticsCategoryProps = {\n\tvariant: \"income\" | \"expense\";\n\tshow?: \"percentage\" | \"value\";\n\tcategory: Category;\n\tcount: number;\n\ttotal: number;\n\tpercentageOfMax: number;\n\tpercentageOfTotal: number;\n};\n\nexport function AnalyticsCategory(props: AnalyticsCategoryProps) {\n\tuseAnalyticsCategoryController(props)\n\n\tconst cx = createClassnames(props.variant)\n\n\treturn <motion.li layout className={cx(\"AnalyticsCategory\")}>\n\t\t<span className=\"category\">\n\t\t\t<span className=\"icon\">\n\t\t\t\t{\n\t\t\t\t\tprops.category?.icon\n\t\t\t\t\t|| (props.variant === \"income\" ? \"💰\" : \"💸\")\n\t\t\t\t}\n\t\t\t</span>\n\t\t\t<Type\n\t\t\t\tcomponent=\"span\"\n\t\t\t\tclassName=\"name\"\n\t\t\t\tcolor=\"green-800\"\n\t\t\t\tvariant=\"bold\"\n\t\t\t>\n\t\t\t\t{props.category?.value || \"\"}\n\t\t\t</Type>\n\t\t\t<Type\n\t\t\t\tsize=\"sm\"\n\t\t\t\tcomponent=\"span\"\n\t\t\t\tclassName=\"count\"\n\t\t\t\tcolor=\"gray-600\"\n\t\t\t\tvariant=\"bold\"\n\t\t\t>\n\t\t\t\t{\"x\"}{props.count}\n\t\t\t</Type>\n\t\t</span>\n\t\t{\n\t\t\tprops.show === \"percentage\"\n\t\t\t\t? <Type\n\t\t\t\t\tclassName=\"amount\"\n\t\t\t\t\tcolor={props.variant === \"income\" ? \"green-600\" : \"red-600\"}\n\t\t\t\t\tvariant=\"bold\"\n\t\t\t\t>\n\t\t\t\t\t{props.percentageOfTotal.toFixed(1) + \" %\"}\n\t\t\t\t</Type>\n\t\t\t\t: <MoneyType\n\t\t\t\t\tanimate\n\t\t\t\t\tclassName=\"amount\"\n\t\t\t\t\tcolorIfPositive=\"green-600\"\n\t\t\t\t\tcolorIfNegative=\"red-600\"\n\t\t\t\t\tamount={props.total}\n\t\t\t\t/>\n\t\t}\n\t\t<motion.div\n\t\t\tlayoutId={`${props.variant}-${props.category.id}`}\n\t\t\tclassName=\"bars\"\n\t\t>\n\t\t\t<motion.div\n\t\t\t\tlayoutId={`${props.variant}-${props.category.id}-background-bar`}\n\t\t\t\tclassName={cx(\"backgroundBar\")}\n\t\t\t\tanimate={{ visibility: \"visible\" }}\n\t\t\t/>\n\t\t\t<motion.div\n\t\t\t\tlayoutId={`${props.variant}-${props.category.id}-active-bar`}\n\t\t\t\tclassName={cx(\"activeBar\")}\n\t\t\t\tanimate={{ width: `${props.percentageOfMax}%`, visibility: \"visible\" }}\n\t\t\t/>\n\t\t</motion.div>\n\t</motion.li>\n}","import \"./AnalyticsCategories.scss\";\r\nimport React from \"react\"\r\nimport { useAnalyticsCategoriesController } from \"./useAnalyticsCategoriesController\"\r\nimport { AnalyticsBlock } from \"../AnalyticsBlock/AnalyticsBlock\";\r\nimport { Category as CategoriesIcon } from \"@material-ui/icons\"\r\nimport { Type } from \"../../../components/Type/Type\";\r\nimport { AnimateSharedLayout, motion } from \"framer-motion\"\r\nimport { AnalyticsCategory } from \"../AnalyticsCategory/AnalyticsCategory\";\r\nimport { Button, ButtonGroup } from \"@material-ui/core\";\r\n\r\nexport type AnalyticsCategoriesProps = {\r\n}\r\n\r\nexport function AnalyticsCategories(props: AnalyticsCategoriesProps) {\r\n\r\n\tconst controller = useAnalyticsCategoriesController(props)\r\n\r\n\treturn <AnalyticsBlock\r\n\t\theader=\"Categories\"\r\n\t\theaderIcon={<CategoriesIcon />}\r\n\t\theaderContent={<div className=\"AnalyticsCategories__headerContent\">\r\n\t\t\t<ButtonGroup size=\"small\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tvariant={controller.isShowingValues ? \"contained\" : \"outlined\"}\r\n\t\t\t\t\tonClick={controller.showValues}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\"€\"}\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tvariant={controller.isShowingPercentages ? \"contained\" : \"outlined\"}\r\n\t\t\t\t\tonClick={controller.showPercentages}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\"%\"}\r\n\t\t\t\t</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t</div>}\r\n\t>\r\n\t\t<div className=\"AnalyticsCategories\">\r\n\t\t\t<AnimateSharedLayout>\r\n\t\t\t\t<motion.div layout className=\"incomes\">\r\n\t\t\t\t\t<Type color=\"gray-600\" variant=\"boldcaps\">\r\n\t\t\t\t\t\t{\"Incomes\"}\r\n\t\t\t\t\t</Type>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcontroller.hasNoIncomes\r\n\t\t\t\t\t\t\t\t? <div className=\"empty\">\r\n\t\t\t\t\t\t\t\t\t<Type color=\"gray-600\">\r\n\t\t\t\t\t\t\t\t\t\t{`No incomes available`}\r\n\t\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t: controller.incomes.map((category, i) => (\r\n\t\t\t\t\t\t\t\t\t<AnalyticsCategory\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"income\"\r\n\t\t\t\t\t\t\t\t\t\tshow={controller.isShowingPercentages ? \"percentage\" : \"value\"}\r\n\t\t\t\t\t\t\t\t\t\tcategory={category.category}\r\n\t\t\t\t\t\t\t\t\t\ttotal={category.total}\r\n\t\t\t\t\t\t\t\t\t\tcount={category.transactions}\r\n\t\t\t\t\t\t\t\t\t\tpercentageOfMax={category.percentageOfMax}\r\n\t\t\t\t\t\t\t\t\t\tpercentageOfTotal={category.percentageOfTotal}\r\n\t\t\t\t\t\t\t\t\t\tkey={category.category.id}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</motion.div>\r\n\t\t\t\t<motion.div layout className=\"expenses\">\r\n\t\t\t\t\t<Type color=\"gray-600\" variant=\"boldcaps\">\r\n\t\t\t\t\t\t{\"Expenses\"}\r\n\t\t\t\t\t</Type>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcontroller.hasNoExpenses\r\n\t\t\t\t\t\t\t\t? <div className=\"empty\">\r\n\t\t\t\t\t\t\t\t\t<Type color=\"gray-600\">\r\n\t\t\t\t\t\t\t\t\t\t{`No expenses available`}\r\n\t\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t: controller.expenses.map((category, i) => (\r\n\t\t\t\t\t\t\t\t\t<AnalyticsCategory\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"expense\"\r\n\t\t\t\t\t\t\t\t\t\tshow={controller.isShowingPercentages ? \"percentage\" : \"value\"}\r\n\t\t\t\t\t\t\t\t\t\tcategory={category.category}\r\n\t\t\t\t\t\t\t\t\t\ttotal={category.total}\r\n\t\t\t\t\t\t\t\t\t\tcount={category.transactions}\r\n\t\t\t\t\t\t\t\t\t\tpercentageOfMax={category.percentageOfMax}\r\n\t\t\t\t\t\t\t\t\t\tpercentageOfTotal={category.percentageOfTotal}\r\n\t\t\t\t\t\t\t\t\t\tkey={category.id}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</motion.div>\r\n\t\t\t</AnimateSharedLayout>\r\n\t\t</div>\r\n\t</AnalyticsBlock>\r\n\r\n}","import { useState } from \"react\"\r\nimport { useAnalyticsContext } from \"../../../contexts/AnalyticsContext.context\"\r\nimport { AnalyticsCategoriesProps } from \"./AnalyticsCategories\"\r\n\r\nexport function useAnalyticsCategoriesController(props: AnalyticsCategoriesProps) {\r\n\r\n\tconst analytics = useAnalyticsContext()\r\n\r\n\tconst [isShowingPercentages, setIsShowingPercentages] = useState(false)\r\n\r\n\tconst categories = analytics.selected.categories\r\n\r\n\tconst incomes = Object.values(categories.incomes).sort((a, b) => {\r\n\t\treturn b.total - a.total\r\n\t})\r\n\tconst expenses = Object.values(categories.expenses).sort((a, b) => {\r\n\t\treturn a.total - b.total\r\n\t})\r\n\r\n\tconst hasNoIncomes = incomes.length === 0\r\n\tconst hasNoExpenses = expenses.length === 0\r\n\r\n\treturn {\r\n\t\tincomes,\r\n\t\texpenses,\r\n\t\thasNoIncomes,\r\n\t\thasNoExpenses,\r\n\t\tisShowingPercentages,\r\n\t\tisShowingValues: !isShowingPercentages,\r\n\t\tshowPercentages() {\r\n\t\t\tsetIsShowingPercentages(true)\r\n\t\t},\r\n\t\tshowValues() {\r\n\t\t\tsetIsShowingPercentages(false)\r\n\t\t},\r\n\t}\r\n}","import \"./AnalyticsAllTimeLine.scss\";\r\nimport React from \"react\"\r\nimport { useAnalyticsAllTimeLineController } from \"./useAnalyticsAllTimeLineController\"\r\nimport { AnalyticsBlock } from \"../AnalyticsBlock/AnalyticsBlock\";\r\nimport { ShowChart as ChartIcon } from \"@material-ui/icons\"\r\nimport { ResponsiveContainer, LineChart, YAxis, Tooltip, Line, CartesianGrid } from \"recharts\"\r\nimport { theme } from \"../../../styles/main\";\r\nimport { MoneyAmount } from \"../../../classes/MoneyAmount\";\r\nimport { format } from \"date-fns\";\r\nimport { Type } from \"../../../components/Type/Type\";\r\nimport { MoneyType } from \"../../../components/MoneyType/MoneyType\";\r\n\r\nexport type AnalyticsAllTimeLineProps = {\r\n}\r\n\r\nexport function AnalyticsAllTimeLine(props: AnalyticsAllTimeLineProps) {\r\n\r\n\tconst controller = useAnalyticsAllTimeLineController(props)\r\n\r\n\treturn <AnalyticsBlock\r\n\t\theader=\"All time\"\r\n\t\theaderIcon={<ChartIcon />}\r\n\t\theaderContent={<div className=\"AnalyticsAllTimeLine__total\">\r\n\t\t\t<Type color=\"gray-700\">\r\n\t\t\t\t{`In total you have saved`}\r\n\t\t\t</Type>\r\n\t\t\t<MoneyType\r\n\t\t\t\tamount={controller.total}\r\n\t\t\t\tcolorIfPositive=\"green-600\"\r\n\t\t\t\tcolorIfNegative=\"red-600\"\r\n\t\t\t/>\r\n\t\t</div>}\r\n\t>\r\n\t\t<div className=\"AnalyticsAllTimeLine\">\r\n\t\t\t<div className=\"chart\">\r\n\t\t\t\t<ResponsiveContainer height={200} width=\"100%\">\r\n\r\n\t\t\t\t\t<LineChart\r\n\t\t\t\t\t\tdata={controller.data}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CartesianGrid\r\n\t\t\t\t\t\t\tvertical={false}\r\n\t\t\t\t\t\t\tcolor={theme.blue_200}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<YAxis\r\n\t\t\t\t\t\t\ttickLine={false}\r\n\t\t\t\t\t\t\ttickFormatter={(value) => MoneyAmount.largeFormat(Number(value))}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\tformatter={(value: any) => MoneyAmount.format(Number(value))}\r\n\t\t\t\t\t\t\tlabelFormatter={label => format(controller.deserializeMonth(Number(label) + controller.labelOffset), \"MMMM, yyyy\")}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Line\r\n\t\t\t\t\t\t\tstrokeWidth={2}\r\n\t\t\t\t\t\t\ttype=\"natural\"\r\n\t\t\t\t\t\t\tdataKey=\"y\"\r\n\t\t\t\t\t\t\tstroke={theme.blue_400}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</LineChart>\r\n\t\t\t\t</ResponsiveContainer>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</AnalyticsBlock>\r\n}","import { useAnalyticsContext } from \"../../../contexts/AnalyticsContext.context\";\r\nimport { DateUtils } from \"../../../utils/DateUtils/DateUtils\";\r\nimport { AnalyticsAllTimeLineProps } from \"./AnalyticsAllTimeLine\"\r\n\r\nexport function useAnalyticsAllTimeLineController(props: AnalyticsAllTimeLineProps) {\r\n\r\n\tconst analytics = useAnalyticsContext()\r\n\r\n\tconst data: { x: number, y: number }[] =\r\n\t\tObject.values(analytics.allTime.months)\r\n\t\t\t.sort((a, b) => a.key - b.key)\r\n\t\t\t.map((month) => ({ x: month.key, y: month.cumulativeTotal }))\r\n\r\n\tconst labelOffset = Object.values(analytics.allTime.months)\r\n\t\t.reduce((min, next) => next.key < min ? next.key : min, Infinity)\r\n\r\n\tconst total = analytics.allTime.total.total\r\n\r\n\treturn {\r\n\t\tdata,\r\n\t\tlabelOffset,\r\n\t\ttotal,\r\n\t\tserializeMonth: DateUtils.serializeMonth,\r\n\t\tdeserializeMonth: DateUtils.deserializeMonth,\r\n\t}\r\n}","import \"./AnalyticsAllTimeColumns.scss\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { MoneyAmount } from \"../../../classes/MoneyAmount\";\nimport { format } from \"date-fns\";\nimport { useAnalyticsAllTimeColumnsController } from \"./useAnalyticsAllTimeColumnsController\";\nimport { AnalyticsBlock } from \"../AnalyticsBlock/AnalyticsBlock\";\nimport { BarChart as BarChartIcon } from \"@material-ui/icons\";\nimport { Bar, CartesianGrid, ResponsiveContainer, ComposedChart, YAxis, Tooltip, Line } from \"recharts\";\nimport { theme } from \"../../../styles/main\";\n\nexport type AnalyticsAllTimeColumnsProps = {\n\n};\n\nexport function AnalyticsAllTimeColumns(props: AnalyticsAllTimeColumnsProps) {\n\n\tconst controller = useAnalyticsAllTimeColumnsController(props)\n\n\treturn <AnalyticsBlock\n\t\theader=\"Monthly totals\"\n\t\theaderIcon={<BarChartIcon />}\n\t>\n\t\t<div className={cx(\"AnalyticsAllTimeColumns\")}>\n\t\t\t<div className=\"chart\">\n\t\t\t\t<ResponsiveContainer height={250} width=\"100%\">\n\t\t\t\t\t<ComposedChart\n\t\t\t\t\t\tstackOffset=\"sign\"\n\t\t\t\t\t\tdata={controller.data}\n\t\t\t\t\t>\n\t\t\t\t\t\t<CartesianGrid\n\t\t\t\t\t\t\tvertical={false}\n\t\t\t\t\t\t\tcolor={theme.blue_200}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<YAxis\n\t\t\t\t\t\t\ttickLine={false}\n\t\t\t\t\t\t\ttickFormatter={(value) => MoneyAmount.largeFormat(Number(value))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\tformatter={(value: any) => MoneyAmount.format(Number(value))}\n\t\t\t\t\t\t\tlabelFormatter={label => format(controller.deserializeMonth(Number(label) + controller.labelOffset), \"MMMM, yyyy\")}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Bar\n\t\t\t\t\t\t\tdataKey=\"Incomes\"\n\t\t\t\t\t\t\tfill={theme.green_300}\n\t\t\t\t\t\t\tstackId=\"stack\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Bar\n\t\t\t\t\t\t\tdataKey=\"Expenses\"\n\t\t\t\t\t\t\tfill={theme.red_300}\n\t\t\t\t\t\t\tstackId=\"stack\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Line\n\t\t\t\t\t\t\tdataKey=\"Total\"\n\t\t\t\t\t\t\tstroke={theme.blue_300}\n\t\t\t\t\t\t\tstrokeWidth={2}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ComposedChart>\n\t\t\t\t</ResponsiveContainer>\n\t\t\t</div>\n\t\t</div>\n\t</AnalyticsBlock>\n}","import { useAnalyticsContext } from \"../../../contexts/AnalyticsContext.context\";\nimport { DateUtils } from \"../../../utils/DateUtils/DateUtils\";\nimport { AnalyticsAllTimeColumnsProps } from \"./AnalyticsAllTimeColumns\";\n\nexport function useAnalyticsAllTimeColumnsController(\n  props: AnalyticsAllTimeColumnsProps\n) {\n  const analytics = useAnalyticsContext();\n\n  const data = Object.values(analytics.allTime.months)\n    .sort((a, b) => a.key - b.key)\n    .map((month) => ({\n      name: month.key,\n      Total: month.total,\n      Incomes: month.incomes,\n      Expenses: month.expenses,\n      Cumulative: month.cumulativeTotal,\n    }));\n\n  const labelOffset = Object.values(analytics.allTime.months).reduce(\n    (min, next) => (next.key < min ? next.key : min),\n    Infinity\n  );\n\n  return {\n    data,\n    labelOffset,\n    serializeMonth: DateUtils.serializeMonth,\n    deserializeMonth: DateUtils.deserializeMonth,\n  };\n}\n","import \"./AnalyticsAverageCategories.scss\";\nimport React from \"react\";\nimport { useAnalyticsAverageCategoriesController } from \"./useAnalyticsAverageCategoriesController\";\nimport { AnalyticsBlock } from \"../AnalyticsBlock/AnalyticsBlock\";\nimport { Category as CategoriesIcon } from \"@material-ui/icons\"\nimport { Type } from \"../../../components/Type/Type\";\nimport { AnimateSharedLayout, motion } from \"framer-motion\"\nimport { AnalyticsCategory } from \"../AnalyticsCategory/AnalyticsCategory\";\nimport { Button, ButtonGroup } from \"@material-ui/core\";\n\nexport type AnalyticsAverageCategoriesProps = {\n\tshowOnly?: \"incomes\" | \"expenses\";\n};\n\nexport function AnalyticsAverageCategories(props: AnalyticsAverageCategoriesProps) {\n\n\tconst controller = useAnalyticsAverageCategoriesController(props)\n\n\treturn <AnalyticsBlock\n\t\theader=\"Category averages\"\n\t\theaderIcon={<CategoriesIcon />}\n\t\theaderContent={<div className=\"AnalyticsAverageCategories__headerContent\">\n\t\t\t<ButtonGroup size=\"small\">\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tvariant={controller.isShowingValues ? \"contained\" : \"outlined\"}\n\t\t\t\t\tonClick={controller.showValues}\n\t\t\t\t>\n\t\t\t\t\t{\"€\"}\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tvariant={controller.isShowingPercentages ? \"contained\" : \"outlined\"}\n\t\t\t\t\tonClick={controller.showPercentages}\n\t\t\t\t>\n\t\t\t\t\t{\"%\"}\n\t\t\t\t</Button>\n\t\t\t</ButtonGroup>\n\t\t</div>}\n\t>\n\t\t<div className=\"AnalyticsAverageCategories\">\n\t\t\t<AnimateSharedLayout>\n\t\t\t\t{\n\t\t\t\t\tprops.showOnly === \"expenses\" ? null :\n\t\t\t\t\t\t< motion.div layout className=\"incomes\">\n\t\t\t\t\t\t\t<Type color=\"gray-600\" variant=\"boldcaps\">\n\t\t\t\t\t\t\t\t{\"Average incomes / month\"}\n\t\t\t\t\t\t\t</Type>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.hasNoIncomes\n\t\t\t\t\t\t\t\t\t\t? <div className=\"empty\">\n\t\t\t\t\t\t\t\t\t\t\t<Type color=\"gray-600\">\n\t\t\t\t\t\t\t\t\t\t\t\t{`No incomes available`}\n\t\t\t\t\t\t\t\t\t\t\t</Type>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t: controller.incomes.map((category, i) => (\n\t\t\t\t\t\t\t\t\t\t\t<AnalyticsCategory\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"income\"\n\t\t\t\t\t\t\t\t\t\t\t\tshow={controller.isShowingPercentages ? \"percentage\" : \"value\"}\n\t\t\t\t\t\t\t\t\t\t\t\tcategory={category.category}\n\t\t\t\t\t\t\t\t\t\t\t\ttotal={category.average}\n\t\t\t\t\t\t\t\t\t\t\t\tcount={category.transactions}\n\t\t\t\t\t\t\t\t\t\t\t\tpercentageOfMax={category.percentageOfMax}\n\t\t\t\t\t\t\t\t\t\t\t\tpercentageOfTotal={category.percentageOfTotal}\n\t\t\t\t\t\t\t\t\t\t\t\tkey={category.category.id}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</motion.div>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tprops.showOnly === \"incomes\" ? null :\n\t\t\t\t\t\t<motion.div layout className=\"expenses\">\n\t\t\t\t\t\t\t<Type color=\"gray-600\" variant=\"boldcaps\">\n\t\t\t\t\t\t\t\t{\"Average expenses / month\"}\n\t\t\t\t\t\t\t</Type>\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tcontroller.hasNoExpenses\n\t\t\t\t\t\t\t\t\t\t? <div className=\"empty\">\n\t\t\t\t\t\t\t\t\t\t\t<Type color=\"gray-600\">\n\t\t\t\t\t\t\t\t\t\t\t\t{`No expenses available`}\n\t\t\t\t\t\t\t\t\t\t\t</Type>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t: controller.expenses.map((category, i) => (\n\t\t\t\t\t\t\t\t\t\t\t<AnalyticsCategory\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"expense\"\n\t\t\t\t\t\t\t\t\t\t\t\tshow={controller.isShowingPercentages ? \"percentage\" : \"value\"}\n\t\t\t\t\t\t\t\t\t\t\t\tcategory={category.category}\n\t\t\t\t\t\t\t\t\t\t\t\ttotal={category.average}\n\t\t\t\t\t\t\t\t\t\t\t\tcount={category.transactions}\n\t\t\t\t\t\t\t\t\t\t\t\tpercentageOfMax={category.percentageOfMax}\n\t\t\t\t\t\t\t\t\t\t\t\tpercentageOfTotal={category.percentageOfTotal}\n\t\t\t\t\t\t\t\t\t\t\t\tkey={category.id}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</motion.div>\n\t\t\t\t}\n\t\t\t</AnimateSharedLayout>\n\t\t</div>\n\t</AnalyticsBlock >\n}","import { useState } from \"react\";\nimport { useAnalyticsContext } from \"../../../contexts/AnalyticsContext.context\";\nimport { AnalyticsAverageCategoriesProps } from \"./AnalyticsAverageCategories\";\n\nexport function useAnalyticsAverageCategoriesController(\n  props: AnalyticsAverageCategoriesProps\n) {\n  const analytics = useAnalyticsContext();\n\n  const [isShowingPercentages, setIsShowingPercentages] = useState(false);\n\n  const categories = analytics.pastYear.categories;\n\n  const incomes = Object.values(categories.incomes).sort((a, b) => {\n    return b.total - a.total;\n  });\n  const expenses = Object.values(categories.expenses).sort((a, b) => {\n    return a.total - b.total;\n  });\n\n  const hasNoIncomes = incomes.length === 0;\n  const hasNoExpenses = expenses.length === 0;\n\n  return {\n    incomes,\n    expenses,\n    hasNoIncomes,\n    hasNoExpenses,\n    isShowingPercentages,\n    isShowingValues: !isShowingPercentages,\n    showPercentages() {\n      setIsShowingPercentages(true);\n    },\n    showValues() {\n      setIsShowingPercentages(false);\n    },\n  };\n}\n","import \"./AnalyticsAverageTotals.scss\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { useAnalyticsAverageTotalsController } from \"./useAnalyticsAverageTotalsController\";\nimport { Type } from \"../../../components/Type/Type\";\nimport { MoneyType } from \"../../../components/MoneyType/MoneyType\";\nimport { Functions as TotalsIcon } from \"@material-ui/icons\"\nimport { AnalyticsBlock } from \"../AnalyticsBlock/AnalyticsBlock\";\n\nexport type AnalyticsAverageTotalsProps = {\n\n};\n\nexport function AnalyticsAverageTotals(props: AnalyticsAverageTotalsProps) {\n\n\tconst controller = useAnalyticsAverageTotalsController(props)\n\n\treturn <AnalyticsBlock\n\t\theader=\"Monthly average\"\n\t\theaderIcon={<TotalsIcon />}\n\t>\n\t\t<div className={cx(\"AnalyticsAverageTotals\")}>\n\t\t\t<div className=\"AnalyticsTotals\">\n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<Type color=\"gray-600\" variant=\"boldcaps\">\n\t\t\t\t\t\t{\"Average / Month\"}\n\t\t\t\t\t</Type>\n\t\t\t\t\t<Type color=\"gray-600\" size=\"md\">\n\t\t\t\t\t\t{`(${controller.totals.transactionsAverage.toFixed(1)} transactions)`}\n\t\t\t\t\t</Type>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"total\">\n\t\t\t\t\t<MoneyType\n\t\t\t\t\t\tanimate\n\t\t\t\t\t\tamount={controller.totals.average}\n\t\t\t\t\t\tsize=\"xxl\"\n\t\t\t\t\t\tcolorIfPositive=\"green-600\"\n\t\t\t\t\t\tcolorIfNegative=\"red-600\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"subtotals\">\n\t\t\t\t\t<MoneyType\n\t\t\t\t\t\tanimate\n\t\t\t\t\t\tamount={controller.totals.incomesAverage}\n\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\tvariant=\"regular\"\n\t\t\t\t\t\tcolorIfPositive=\"green-600\"\n\t\t\t\t\t\tcolorIfNegative=\"red-600\"\n\t\t\t\t\t/>\n\t\t\t\t\t<Type color=\"gray-800\" size=\"md\">{\"/\"}</Type>\n\t\t\t\t\t<MoneyType\n\t\t\t\t\t\tanimate\n\t\t\t\t\t\tamount={controller.totals.expensesAverage}\n\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\tvariant=\"regular\"\n\t\t\t\t\t\tcolorIfPositive=\"green-600\"\n\t\t\t\t\t\tcolorIfNegative=\"red-600\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div >\n\t\t</div>\n\t</AnalyticsBlock>\n}","import { useAnalyticsContext } from \"../../../contexts/AnalyticsContext.context\";\nimport { AnalyticsAverageTotalsProps } from \"./AnalyticsAverageTotals\";\n\nexport function useAnalyticsAverageTotalsController(\n  props: AnalyticsAverageTotalsProps\n) {\n  const ctx = useAnalyticsContext();\n\n  return {\n    totals: ctx.pastYear.total,\n  };\n}\n","import \"./Analytics.scss\";\r\nimport React from \"react\"\r\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\"\r\nimport { AnalyticsHeader } from \"./AnalyticsHeader/AnalyticsHeader\";\r\nimport { theme } from \"../../styles/main\";\r\nimport { useMdMedia } from \"../../hooks/utils/useMedia\";\r\nimport { AnalyticsPanel } from \"./AnalyticsPanel/AnalyticsPanel\";\r\nimport { AnalyticsTotals } from \"./AnalyticsTotals/AnalyticsTotals\";\r\nimport { AnalyticsCategories } from \"./AnalyticsCategories/AnalyticsCategories\";\r\nimport { AnalyticsAllTimeLine } from \"./AnalyticsAllTimeLine/AnalyticsAllTimeLine\";\r\nimport { AnalyticsContextProvider } from \"../../contexts/AnalyticsContext.context\";\r\nimport { useAnalyticsController } from \"./useAnalyticsController\";\r\nimport { Type } from \"../../components/Type/Type\";\r\nimport { AnalyticsAllTimeColumns } from \"./AnalyticsAllTimeColumns/AnalyticsAllTimeColumns\";\r\nimport { AnalyticsAverageCategories } from \"./AnalyticsAverageCategories/AnalyticsAverageCategories\";\r\nimport { AnalyticsAverageTotals } from \"./AnalyticsAverageTotals/AnalyticsAverageTotals\";\r\n\r\nexport type AnalyticsProps = {\r\n}\r\n\r\nexport function Analytics(props: AnalyticsProps) {\r\n\tconst controller = useAnalyticsController(props)\r\n\tconst isDesktop = useMdMedia()\r\n\r\n\treturn <AnalyticsContextProvider>\r\n\t\t<div className=\"Analytics\">\r\n\r\n\t\t\t<section className=\"headerContainer\" >\r\n\t\t\t\t<AnalyticsHeader />\r\n\t\t\t\t{\r\n\t\t\t\t\t!isDesktop && <div className=\"panelContainer\">\r\n\t\t\t\t\t\t<AnalyticsPanel />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</section>\r\n\r\n\r\n\t\t\t<section className=\"analyticsBlocksContainer\">\r\n\t\t\t\t<AnalyticsAllTimeLine />\r\n\t\t\t\t<AnalyticsAllTimeColumns />\r\n\t\t\t\t<Type\r\n\t\t\t\t\tcomponent=\"h2\"\r\n\t\t\t\t\tvariant=\"bold\"\r\n\t\t\t\t\tsize=\"xl\"\r\n\t\t\t\t\tcolor=\"gray-900\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{controller.intervalLabel}\r\n\t\t\t\t</Type>\r\n\t\t\t\t<ResponsiveMasonry\r\n\t\t\t\t\tcolumnsCountBreakPoints={{ 350: 1, 700: 2 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Masonry gutter={theme.spacing_4}>\r\n\t\t\t\t\t\t<AnalyticsTotals />\r\n\t\t\t\t\t\t<AnalyticsCategories />\r\n\t\t\t\t\t</Masonry>\r\n\t\t\t\t</ResponsiveMasonry>\r\n\t\t\t\t<Type\r\n\t\t\t\t\tcomponent=\"h2\"\r\n\t\t\t\t\tvariant=\"bold\"\r\n\t\t\t\t\tsize=\"xl\"\r\n\t\t\t\t\tcolor=\"gray-900\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{\"Past year habits\"}\r\n\t\t\t\t</Type>\r\n\t\t\t\t<ResponsiveMasonry\r\n\t\t\t\t\tcolumnsCountBreakPoints={{ 350: 1, 700: 2 }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Masonry gutter={theme.spacing_4}>\r\n\t\t\t\t\t\t<AnalyticsAverageTotals />\r\n\t\t\t\t\t\t<AnalyticsAverageCategories showOnly=\"incomes\" />\r\n\t\t\t\t\t\t<AnalyticsAverageCategories showOnly=\"expenses\" />\r\n\t\t\t\t\t</Masonry>\r\n\t\t\t\t</ResponsiveMasonry>\r\n\t\t\t</section>\r\n\r\n\t\t</div>\r\n\t</AnalyticsContextProvider>\r\n}","import { useStoreState } from \"../../store\"\r\nimport { AnalyticsProps } from \"./Analytics\"\r\n\r\nexport function useAnalyticsController(props: AnalyticsProps) {\r\n\tconst intervalLabel = useStoreState(_ => _.interval.smartDisplayString)\r\n\r\n\treturn {\r\n\t\tintervalLabel,\r\n\t}\r\n}","import ReactGA from \"react-ga\";\r\nimport { useState } from \"react\"\r\nimport * as yup from \"yup\";\r\nimport { useStoreActions } from \"../../store\";\r\nimport { useRedirect } from \"../../hooks/utils/useRedirect\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\n\r\nexport const forgotPasswordValidationSchema = yup.object({\r\n\temail: yup.string().defined().min(3).max(255).email(),\r\n}).defined()\r\n\r\nexport type ForgotPasswordFormType = yup.InferType<typeof forgotPasswordValidationSchema>\r\n\r\nexport function useForgotPasswordController() {\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst forgotPassword = useStoreActions(_ => _.auth.forgotPassword)\r\n\tconst loginWithGoogle = useStoreActions(_ => _.auth.loginWithGoogle)\r\n\r\n\t/**\r\n\t * Submit error state\r\n\t */\r\n\tconst [error, setError] = useState<string>()\r\n\r\n\t/**\r\n\t * Was password forget send succesful\r\n\t */\r\n\tconst [success, setSuccess] = useState<boolean>(false)\r\n\r\n\t/**\r\n\t * Form state\r\n\t */\r\n\tconst form = useForm<ForgotPasswordFormType>({\r\n\t\tresolver: yupResolver(forgotPasswordValidationSchema),\r\n\t})\r\n\r\n\t/**\r\n\t * Submit handler function\r\n\t */\r\n\tasync function submitHandler(values: ForgotPasswordFormType) {\r\n\t\tsetError(undefined)\r\n\t\tconst result = await forgotPassword(values)\r\n\t\tif (result.isSuccess()) {\r\n\t\t\tReactGA.event({\r\n\t\t\t\taction: \"Forgot Password\",\r\n\t\t\t\tcategory: \"User\",\r\n\t\t\t})\r\n\t\t\tsetSuccess(true)\r\n\t\t} else {\r\n\t\t\tsetError(() => {\r\n\t\t\t\tswitch (result.reason) {\r\n\t\t\t\t\tcase \"invalidServerResponse\":\r\n\t\t\t\t\t\treturn \"Invalid response received from server.\"\r\n\t\t\t\t\tcase \"network\":\r\n\t\t\t\t\t\tswitch (result.code) {\r\n\t\t\t\t\t\t\tcase \"request/invalid-request-data\":\r\n\t\t\t\t\t\t\t\treturn \"Invalid email or password.\"\r\n\t\t\t\t\t\t\tcase \"request/too-many-requests\":\r\n\t\t\t\t\t\t\t\treturn \"You are trying too fast! Try again later.\"\r\n\t\t\t\t\t\t\tcase \"auth/invalid-credentials\":\r\n\t\t\t\t\t\t\t\treturn \"Wrong password or the user does not have a password.\"\r\n\t\t\t\t\t\t\tcase \"auth/user-not-found\":\r\n\t\t\t\t\t\t\t\treturn \"No user exists with that email.\"\r\n\t\t\t\t\t\t\tcase \"server/unavailable\":\r\n\t\t\t\t\t\t\t\treturn \"Could not contact server. Try again later.\"\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\tconsole.warn(\"Uncaught error code in login:\", result)\r\n\t\t\t\t\t\t\t\treturn \"An error occured while logging in. Try again.\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSubmit = form.handleSubmit(submitHandler)\r\n\r\n\tasync function handleLogin() {\r\n\t\tredirect(_ => _.login)\r\n\t}\r\n\r\n\tasync function handleCreateAccount() {\r\n\t\tredirect(_ => _.register)\r\n\t}\r\n\r\n\tasync function handleGoogleSubmit() {\r\n\t\tloginWithGoogle()\r\n\t}\r\n\r\n\tconst emailError = form.formState.touched.email && form.errors.email?.message\r\n\r\n\treturn {\r\n\t\thandleSubmit,\r\n\t\thandleCreateAccount,\r\n\t\thandleGoogleSubmit,\r\n\t\thandleLogin,\r\n\t\tsuccess,\r\n\t\terror,\r\n\t\temailError,\r\n\t\tform\r\n\t}\r\n}","import \"./ForgotPassword.scss\";\r\nimport React from \"react\"\r\nimport { useForgotPasswordController } from \"./useForgotPasswordController\";\r\nimport { TextField, Button, InputAdornment } from \"@material-ui/core\";\r\nimport { Email as EmailIcon } from \"@material-ui/icons\";\r\nimport { Type } from \"../../components/Type/Type\";\r\n\r\nexport function ForgotPassword() {\r\n\r\n\tconst controller = useForgotPasswordController()\r\n\r\n\treturn <div className=\"ForgotPassword\">\r\n\r\n\t\t<Type\r\n\t\t\tcomponent=\"h1\"\r\n\t\t\tvariant=\"bold\"\r\n\t\t\tcolor=\"black\"\r\n\t\t\tsize=\"xxl\"\r\n\t\t>\r\n\t\t\t{\"Forgot password\"}\r\n\t\t</Type>\r\n\r\n\t\t<main>\r\n\t\t\t{\r\n\t\t\t\tcontroller.success\r\n\t\t\t\t\t? <Type>\r\n\t\t\t\t\t\t{\"Recovery email sent. Check your email.\"}\r\n\t\t\t\t\t</Type>\r\n\t\t\t\t\t: <form noValidate onSubmit={controller.handleSubmit}>\r\n\r\n\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t{\"Enter your email below and we will send you an email containing a link, which you can use to change your password.\"}\r\n\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"login-email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tinputRef={controller.form.register}\r\n\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\terror={!!controller.emailError}\r\n\t\t\t\t\t\t\thelperText={controller.emailError}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<EmailIcon />\r\n\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Send recovery email\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcontroller.error\r\n\t\t\t\t\t\t\t\t? <Type color=\"red-600\">\r\n\t\t\t\t\t\t\t\t\t{controller.error}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</form >\r\n\t\t\t}\r\n\t\t</main>\r\n\r\n\t\t<footer>\r\n\t\t\t<Button onClick={() => controller.handleLogin()}>\r\n\t\t\t\t{\"Back\"}\r\n\t\t\t</Button>\r\n\t\t</footer>\r\n\r\n\t</div >\r\n}","import \"./TransactionEditorDrawer.scss\";\r\nimport React from \"react\"\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport { useMdMedia } from \"../../hooks/utils/useMedia\";\r\nimport { TransactionForm } from \"../TransactionForm/TransactionForm\";\r\nimport { useTransactionEditorDrawerController } from \"./useTransactionEditorDrawerController\";\r\n\r\nexport type TransactionEditorDrawerProps = {\r\n}\r\n\r\nexport function TransactionEditorDrawer(props: TransactionEditorDrawerProps) {\r\n\r\n\tconst controller = useTransactionEditorDrawerController(props)\r\n\r\n\tconst isLargerScreen = useMdMedia()\r\n\r\n\treturn <Drawer\r\n\t\tclassName=\"TransactionEditorDrawer\"\r\n\t\topen={!!controller.selectedItem}\r\n\t\tonClose={controller.onClose}\r\n\t\tanchor={isLargerScreen ? \"left\" : \"bottom\"}\r\n\t>\r\n\t\t<div className=\"TransactionEditorDrawer__Content\">\r\n\t\t\t<TransactionForm\r\n\t\t\t\tonClose={controller.onClose}\r\n\t\t\t\teditTransaction={controller.selectedItem}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t</Drawer>\r\n}","import \"./TransactionCreatorDrawer.scss\";\r\nimport React from \"react\"\r\nimport { TransactionForm } from \"../TransactionForm/TransactionForm\";\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport { useMdMedia } from \"../../hooks/utils/useMedia\";\r\nimport { useTransactionCreatorDrawerController } from \"./useTransactionCreatorDrawerController\";\r\n\r\nexport type TransactionCreatorDrawerProps = {}\r\n\r\nexport function TransactionCreatorDrawer(props: TransactionCreatorDrawerProps) {\r\n\r\n\tconst largerScreen = useMdMedia()\r\n\r\n\tconst controller = useTransactionCreatorDrawerController(props)\r\n\r\n\treturn <Drawer\r\n\t\tclassName=\"TransactionCreatorDrawer\"\r\n\t\topen={controller.open}\r\n\t\tonClose={controller.onClose}\r\n\t\tanchor={largerScreen ? \"left\" : \"bottom\"}\r\n\t>\r\n\t\t<div className=\"TransactionCreatorDrawer__Content\">\r\n\t\t\t<TransactionForm\r\n\t\t\t\tonClose={controller.onClose}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t</Drawer>\r\n}","import { Ref, useCallback, useImperativeHandle, useRef, } from \"react\"\r\nimport { useHashOpenState } from \"../../hooks/state/useHashOpenState\"\r\nimport { useRedirect } from \"../../hooks/utils/useRedirect\"\r\nimport { useStoreActions, useStoreState } from \"../../store\"\r\nimport { UserMenuProps } from \"./UserMenu\"\r\n\r\nexport type UserMenuRef = {\r\n\topen(e: React.MouseEvent<HTMLElement>): void;\r\n}\r\n\r\nexport const UserMenuOpenHash = \"usermenu\"\r\n\r\nexport function useUserMenuOpenState() {\r\n\treturn useHashOpenState(UserMenuOpenHash)\r\n}\r\n\r\nexport function useUserMenuController(props: UserMenuProps, ref: Ref<UserMenuRef>) {\r\n\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\tconst logout = useStoreActions(_ => _.auth.logout)\r\n\tconst notify = useStoreActions(_ => _.notification.notify)\r\n\tconst redirect = useRedirect()\r\n\r\n\t// Open state\r\n\tconst [open, setOpen] = useUserMenuOpenState()\r\n\r\n\t// Latest anchor\r\n\tconst anchor = useRef<HTMLElement | null>(null)\r\n\r\n\t// Close function\r\n\tconst handleClose = useCallback(() => {\r\n\t\tanchor.current = null\r\n\t\tsetOpen(false)\r\n\t}, [anchor, setOpen])\r\n\r\n\t// Open function\r\n\tconst handleOpen = useCallback((e: React.MouseEvent<HTMLElement>) => {\r\n\t\tanchor.current = e.currentTarget\r\n\t\tsetOpen(true)\r\n\t}, [anchor, setOpen])\r\n\r\n\t// Expose the opening function to a parent component\r\n\tuseImperativeHandle(ref, (): UserMenuRef => ({\r\n\t\topen: handleOpen\r\n\t}))\r\n\r\n\t// Settings action\r\n\tconst handleSettings = useCallback(() => {\r\n\t\thandleClose()\r\n\t\tredirect(_ => _.settings)\r\n\t}, [handleClose, redirect])\r\n\r\n\t// Logout action\r\n\tconst handleLogout = useCallback(async () => {\r\n\t\thandleClose()\r\n\t\tconst result = await logout()\r\n\t\tif (result.isFailure()) {\r\n\t\t\tnotify({\r\n\t\t\t\tmessage: `Logout failed`,\r\n\t\t\t\tseverity: \"error\"\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tredirect(_ => _.login)\r\n\t\t}\r\n\t}, [logout, handleClose, redirect, notify])\r\n\r\n\treturn {\r\n\t\topen,\r\n\t\tsetOpen,\r\n\t\tanchor,\r\n\t\thandleClose,\r\n\t\thandleOpen,\r\n\t\tuser,\r\n\t\thandleSettings,\r\n\t\thandleLogout,\r\n\t}\r\n\r\n}","import React from \"react\";\r\nimport cx from \"classnames\"\r\nimport { Drawer, DrawerProps, Menu, MenuProps } from \"@material-ui/core\";\r\nimport { useMdMedia } from \"../../hooks/utils/useMedia\";\r\n\r\nexport type ResponsiveMenuProps = {\r\n\topen: boolean,\r\n\tonClose(event: {}, reason: \"backdropClick\" | \"escapeKeyDown\"): void;\r\n\tclassName?: string;\r\n\tMenuProps?: Omit<MenuProps, \"children\" | \"onClose\" | \"open\">,\r\n\tDrawerProps?: Omit<DrawerProps, \"children\" | \"onClose\" | \"open\">,\r\n\tchildren?: React.ReactNode\r\n}\r\n\r\nexport function ResponsiveMenu(props: ResponsiveMenuProps) {\r\n\r\n\tconst shouldRenderMenu = useMdMedia()\r\n\r\n\tif (shouldRenderMenu) {\r\n\t\treturn <Menu\r\n\t\t\tclassName={cx(\r\n\t\t\t\tprops.className,\r\n\t\t\t\tprops.MenuProps?.className,\r\n\t\t\t\t\"ResponsiveMenu ResponsiveMenu__Menu\"\r\n\t\t\t)}\r\n\t\t\topen={props.open}\r\n\t\t\tonClose={props.onClose}\r\n\t\t\tchildren={props.children}\r\n\t\t\t{...{\r\n\t\t\t\t...props.MenuProps\r\n\t\t\t}}\r\n\t\t/>\r\n\t} else {\r\n\t\treturn <Drawer\r\n\t\t\tclassName={cx(\r\n\t\t\t\tprops.className,\r\n\t\t\t\tprops.DrawerProps?.className,\r\n\t\t\t\t\"ResponsiveMenu ResponsiveMenu__Drawer\"\r\n\t\t\t)}\r\n\t\t\topen={props.open}\r\n\t\t\tonClose={props.onClose}\r\n\t\t\tchildren={props.children}\r\n\t\t\t{...{\r\n\t\t\t\tanchor: \"bottom\",\r\n\t\t\t\t...props.DrawerProps\r\n\t\t\t}}\r\n\t\t/>\r\n\t}\r\n\r\n}","import \"./UserMenu.scss\";\r\nimport React, { forwardRef, Ref } from \"react\"\r\nimport cx from \"classnames\"\r\nimport { UserMenuRef, useUserMenuController } from \"./useUserMenuController\"\r\nimport { MenuItem, MenuList } from \"@material-ui/core\";\r\nimport { ExitToApp as LogoutIcon, Settings as SettingsIcon } from \"@material-ui/icons\";\r\nimport { Type } from \"../Type/Type\";\r\nimport { ResponsiveMenu, ResponsiveMenuProps } from \"../ResponsiveMenu/ResponsiveMenu\";\r\n\r\nexport type UserMenuProps = {\r\n\r\n} & Omit<ResponsiveMenuProps, \"open\" | \"onClose\">\r\n\r\nexport const UserMenu = forwardRef((props: UserMenuProps, ref: Ref<UserMenuRef>) => {\r\n\r\n\tconst controller = useUserMenuController(props, ref)\r\n\r\n\tconst { className, ...ResponsiveMenuProps } = props\r\n\r\n\treturn <ResponsiveMenu\r\n\t\tclassName={cx(\"UserMenu\", className)}\r\n\t\topen={controller.open}\r\n\t\tonClose={controller.handleClose}\r\n\t\tMenuProps={{\r\n\t\t\tanchorEl: controller.anchor.current,\r\n\t\t\tanchorOrigin: { horizontal: \"right\", vertical: \"bottom\" },\r\n\t\t\ttransformOrigin: { horizontal: \"right\", vertical: \"top\" },\r\n\t\t\tgetContentAnchorEl: null,\r\n\t\t}}\r\n\t\t{...ResponsiveMenuProps}\r\n\t>\r\n\t\t<div className=\"UserMenu__content\" >\r\n\t\t\t<section className=\"profile\">\r\n\t\t\t\t<Type variant=\"bold\" size=\"lg\" component=\"h2\">\r\n\t\t\t\t\t{controller.user?.displayName ?? \"Not logged in\"}\r\n\t\t\t\t</Type>\r\n\t\t\t\t<Type color=\"gray-700\">\r\n\t\t\t\t\t{controller.user?.email ?? \"No email\"}\r\n\t\t\t\t</Type>\r\n\t\t\t</section>\r\n\t\t\t<section className=\"actions\">\r\n\t\t\t\t<MenuList>\r\n\t\t\t\t\t<MenuItem onClick={controller.handleSettings}>\r\n\t\t\t\t\t\t<SettingsIcon />\r\n\t\t\t\t\t\t<Type variant=\"bold\">\r\n\t\t\t\t\t\t\t{\"Settings\"}\r\n\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t<MenuItem onClick={controller.handleLogout}>\r\n\t\t\t\t\t\t<LogoutIcon />\r\n\t\t\t\t\t\t<Type variant=\"bold\">\r\n\t\t\t\t\t\t\t{\"Log out\"}\r\n\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t</MenuList>\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t</ResponsiveMenu>\r\n})","import \"./UserManager.scss\";\r\nimport React from \"react\"\r\nimport { useUserManagerController } from \"./useUserManagerController\";\r\nimport { UserAvatar } from \"../UserAvatar/UserAvatar\";\r\nimport { UserMenu } from \"../UserMenu/UserMenu\";\r\n\r\nexport type UserManagerProps = {\r\n\r\n}\r\n\r\nexport function UserManager(props: UserManagerProps) {\r\n\r\n\tconst controller = useUserManagerController(props)\r\n\r\n\treturn <div className=\"UserManager\">\r\n\t\t<UserAvatar\r\n\t\t\ttabIndex={0}\r\n\t\t\tonClick={(e) => {\r\n\t\t\t\tif (controller.userMenuRef.current) {\r\n\t\t\t\t\tcontroller.userMenuRef.current.open(e)\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t/>\r\n\t\t<UserMenu ref={controller.userMenuRef} />\r\n\t</div>\r\n}","import { useRef } from \"react\"\r\nimport { useStoreState } from \"../../store\"\r\nimport { UserMenuRef } from \"../UserMenu/useUserMenuController\"\r\nimport { UserManagerProps } from \"./UserManager\"\r\n\r\nexport function useUserManagerController(props: UserManagerProps) {\r\n\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\r\n\tconst userMenuRef = useRef<UserMenuRef | null>(null)\r\n\r\n\treturn {\r\n\t\tuser,\r\n\t\tuserMenuRef\r\n\t}\r\n}","import \"./Header.scss\";\r\nimport React from \"react\"\r\nimport { IntervalManager } from \"../IntervalManager/IntervalManager\";\r\nimport { UserManager } from \"../UserManager/UserManager\";\r\n\r\nexport type HeaderProps = {\r\n\r\n}\r\n\r\nexport function Header(props: HeaderProps) {\r\n\treturn <div className=\"Header\">\r\n\r\n\t\t<div className=\"intervalManager\">\r\n\t\t\t<IntervalManager />\r\n\t\t</div>\r\n\r\n\t\t<div className=\"profileManager\">\r\n\t\t\t<UserManager />\r\n\t\t</div>\r\n\r\n\t</div>\r\n}","import \"./Logo.scss\";\r\nimport React from \"react\"\r\nimport cx from \"classnames\"\r\nimport { TypeProps } from \"../Type/Type\";\r\nimport { useLogoController } from \"./useLogoController\";\r\n\r\nexport type LogoProps = {\r\n\tsize?: TypeProps[\"size\"];\r\n} & React.DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\nexport function Logo(props: LogoProps) {\r\n\r\n\tconst { className, size, ...spanProps } = props\r\n\r\n\tconst controller = useLogoController()\r\n\r\n\treturn <span\r\n\t\tclassName={cx(\"Logo\", className, `size-${size}`)}\r\n\t\tonClick={controller.handleClick}\r\n\t\t{...spanProps}\r\n\t>\r\n\t\t<span className=\"letter-0\">N</span>\r\n\t\t<span className=\"letter-1\">e</span>\r\n\t\t<span className=\"letter-2\">x</span>\r\n\t\t<span className=\"letter-3\">p</span>\r\n\t\t<span className=\"letter-4\">e</span>\r\n\t\t<span className=\"letter-5\">n</span>\r\n\t\t<span className=\"letter-6\">d</span>\r\n\t\t<span className=\"letter-7\">a</span>\r\n\t\t<span className=\"letter-8\">.</span>\r\n\t</span>\r\n}","import { useCallback } from \"react\";\r\nimport { useRedirect } from \"../../hooks/utils/useRedirect\";\r\nimport { useStoreState } from \"../../store\";\r\n\r\nexport function useLogoController() {\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst isLoggedIn = useStoreState(_ => _.auth.isLoggedIn)\r\n\r\n\tconst handleClick = useCallback(() => {\r\n\t\tif (isLoggedIn) {\r\n\t\t\tredirect(_ => _.dashboard)\r\n\t\t} else {\r\n\t\t\tredirect(_ => _.login)\r\n\t\t}\r\n\t}, [isLoggedIn, redirect])\r\n\r\n\treturn { handleClick }\r\n\r\n}","import \"./Sidebar.scss\";\r\nimport React from \"react\"\r\nimport cx from \"classnames\"\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport {\r\n\tHome as DashboardIcon,\r\n\tBarChart2 as AnalyticsIcon,\r\n\tUser as UserIcon,\r\n\tBriefcase as BudgetIcon,\r\n\tPlusCircle as PlusIcon\r\n} from \"react-feather\"\r\nimport { useMdMedia } from \"../../hooks/utils/useMedia\";\r\nimport { Type } from \"../../components/Type/Type\";\r\nimport { Logo } from \"../../components/Logo/Logo\";\r\nimport { motion, Variants } from \"framer-motion\";\r\nimport { useSidebarController } from \"./useSidebarController\";\r\n\r\nexport type SidebarProps = {\r\n}\r\n\r\nexport function Sidebar(props: SidebarProps) {\r\n\r\n\tconst isSidebarView = useMdMedia()\r\n\r\n\tconst controller = useSidebarController(props)\r\n\r\n\treturn <>\r\n\r\n\t\t<aside className=\"Sidebar\">\r\n\r\n\t\t\t{\r\n\r\n\t\t\t\tisSidebarView\r\n\t\t\t\t\t? <div className=\"sidebar\">\r\n\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t/** \r\n\t\t\t\t\t\t\t * Desktop sidebar layout\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t<div className=\"header\">\r\n\r\n\t\t\t\t\t\t\t<Logo />\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"body\">\r\n\r\n\t\t\t\t\t\t\t<div className=\"selections\">\r\n\r\n\t\t\t\t\t\t\t\t<Type\r\n\t\t\t\t\t\t\t\t\tclassName=\"selections-title\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"boldcaps\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"gray-800\"\r\n\t\t\t\t\t\t\t\t\tsize=\"sm\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\"Tools\"}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={controller.onDashboard}\r\n\t\t\t\t\t\t\t\t\tclassName={cx(\"selection\", { active: controller.isDashboard })}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<DashboardIcon />\r\n\t\t\t\t\t\t\t\t\t<Type variant=\"bold\">{\"Dashboard\"}</Type>\r\n\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={controller.onAnalytics}\r\n\t\t\t\t\t\t\t\t\tclassName={cx(\"selection\", { active: controller.isAnalytics })}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<AnalyticsIcon />\r\n\t\t\t\t\t\t\t\t\t<Type variant=\"bold\">{\"Analytics\"}</Type>\r\n\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={controller.onBudget}\r\n\t\t\t\t\t\t\t\t\tclassName={cx(\"selection\", { active: controller.isBudget })}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<BudgetIcon />\r\n\t\t\t\t\t\t\t\t\t<Type variant=\"bold\">{\"Budget\"}</Type>\r\n\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={controller.onSettings}\r\n\t\t\t\t\t\t\t\t\tclassName={cx(\"selection\", { active: controller.isSettings })}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<UserIcon />\r\n\t\t\t\t\t\t\t\t\t<Type variant=\"bold\">{\"Settings\"}</Type>\r\n\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: <div className=\"tabs\">\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t * Mobile bottom navigation\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t<motion.div\r\n\t\t\t\t\t\t\tclassName=\"tabContainer\"\r\n\t\t\t\t\t\t\tvariants={tabVariants}\r\n\t\t\t\t\t\t\tanimate={controller.isDashboard ? \"active\" : \"inactive\"}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: controller.isDashboard })}\r\n\t\t\t\t\t\t\t\tonClick={controller.onDashboard}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<DashboardIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t</motion.div>\r\n\r\n\t\t\t\t\t\t<motion.div\r\n\t\t\t\t\t\t\tclassName=\"tabContainer\"\r\n\t\t\t\t\t\t\tvariants={tabVariants}\r\n\t\t\t\t\t\t\tanimate={controller.isAnalytics ? \"active\" : \"inactive\"}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: controller.isAnalytics })}\r\n\t\t\t\t\t\t\t\tonClick={controller.onAnalytics}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<AnalyticsIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t</motion.div>\r\n\r\n\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={cx(\"tab\", \"add\")}\r\n\t\t\t\t\t\t\t\tonClick={controller.onTransactionCreatorOpen}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<PlusIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<motion.div\r\n\t\t\t\t\t\t\tclassName=\"tabContainer\"\r\n\t\t\t\t\t\t\tvariants={tabVariants}\r\n\t\t\t\t\t\t\tanimate={controller.isBudget ? \"active\" : \"inactive\"}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: controller.isBudget })}\r\n\t\t\t\t\t\t\t\tonClick={controller.onBudget}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<BudgetIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t</motion.div>\r\n\r\n\t\t\t\t\t\t<motion.div\r\n\t\t\t\t\t\t\tclassName=\"tabContainer\"\r\n\t\t\t\t\t\t\tvariants={tabVariants}\r\n\t\t\t\t\t\t\tanimate={controller.isSettings ? \"active\" : \"inactive\"}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: controller.isSettings })}\r\n\t\t\t\t\t\t\t\tonClick={controller.onSettings}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<UserIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t</motion.div>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</aside>\r\n\r\n\t</>\r\n}\r\n\r\nconst tabVariants: Variants = {\r\n\t\"inactive\": {\r\n\t\tscale: 1,\r\n\t},\r\n\t\"active\": {\r\n\t\tscale: 1.5,\r\n\t\ttransition: {\r\n\t\t\trepeatType: \"mirror\",\r\n\t\t\trepeat: 1,\r\n\t\t}\r\n\t}\r\n}","import { useRouteMatch } from \"react-router-dom\"\r\nimport { routes } from \"../../Routes\"\r\nimport { useRedirect } from \"../../hooks/utils/useRedirect\"\r\nimport { useStoreState, useStoreActions } from \"../../store\"\r\nimport { useTransactionCreatorDrawerOpenState } from \"../../components/TransactionCreatorDrawer/useTransactionCreatorDrawerController\"\r\nimport { SidebarProps } from \"./Sidebar\"\r\n\r\nexport function useSidebarController(props: SidebarProps) {\r\n\r\n\tconst dashboardMatch = useRouteMatch(routes.dashboard)\r\n\tconst analyticsMatch = useRouteMatch(routes.analytics)\r\n\tconst budgetMatch = useRouteMatch(routes.budget)\r\n\tconst settingsMatch = useRouteMatch(routes.settings)\r\n\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\r\n\tconst logout = useStoreActions(_ => _.auth.logout)\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst [, setTransactionCreatorOpen] = useTransactionCreatorDrawerOpenState()\r\n\r\n\treturn {\r\n\t\tisDashboard: !!dashboardMatch,\r\n\t\tisAnalytics: !!analyticsMatch,\r\n\t\tisBudget: !!budgetMatch,\r\n\t\tisSettings: !!settingsMatch,\r\n\r\n\t\tonDashboard: () => redirect(routes.dashboard),\r\n\t\tonAnalytics: () => redirect(routes.analytics),\r\n\t\tonBudget: () => redirect(routes.budget),\r\n\t\tonSettings: () => redirect(routes.settings),\r\n\r\n\t\tuser: user,\r\n\t\tlogout: () => logout(),\r\n\r\n\r\n\t\tonTransactionCreatorOpen: () => setTransactionCreatorOpen(true),\r\n\t}\r\n}","import \"./AppFrame.scss\";\r\nimport React from \"react\"\r\nimport { TransactionEditorDrawer } from \"../TransactionEditorDrawer/TransactionEditorDrawer\";\r\nimport { TransactionCreatorDrawer } from \"../TransactionCreatorDrawer/TransactionCreatorDrawer\";\r\nimport { Header } from \"../Header/Header\";\r\nimport { useAppFrameController } from \"./useAppFrameController\";\r\nimport { Sidebar } from \"../../views/Sidebar/Sidebar\";\r\nimport { useMdMedia } from \"../../hooks/utils/useMedia\";\r\n\r\nexport type AppFrameProps = {\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nexport function AppFrame(props: AppFrameProps) {\r\n\r\n\tconst controller = useAppFrameController(props)\r\n\r\n\tconst isDesktopLayout = useMdMedia()\r\n\r\n\treturn <div className=\"AppFrame\">\r\n\t\t{\r\n\t\t\tcontroller.initialized && <>\r\n\t\t\t\t{isDesktopLayout ? null : <TransactionCreatorDrawer />}\r\n\t\t\t\t{isDesktopLayout ? null : <TransactionEditorDrawer />}\r\n\t\t\t</>\r\n\t\t}\r\n\t\t<div className=\"header\">\r\n\t\t\t<Header />\r\n\t\t</div>\r\n\t\t<div className=\"sidebar\">\r\n\t\t\t<Sidebar />\r\n\t\t</div>\r\n\t\t<div className=\"main\">\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t</div>\r\n}","import { useStoreState } from \"../../store\"\r\nimport { AppFrameProps } from \"./AppFrame\"\r\n\r\nexport function useAppFrameController(props: AppFrameProps) {\r\n\r\n\tconst initialized = useStoreState(_ => _.auth.initialized)\r\n\r\n\treturn { initialized }\r\n}","import ReactGA from \"react-ga\";\r\nimport { useCallback, useEffect, useState } from \"react\"\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useRedirect } from \"../../hooks/utils/useRedirect\"\r\nimport * as yup from \"yup\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport const changePasswordValidationSchema = yup.object({\r\n\tpassword: yup.string().defined().min(6).max(255),\r\n}).defined()\r\n\r\nexport type ChangePasswordFormType = yup.InferType<typeof changePasswordValidationSchema>\r\n\r\n\r\nexport function useChangePasswordController() {\r\n\t/**\r\n\t * React hook form\r\n\t */\r\n\tconst form = useForm<ChangePasswordFormType>({\r\n\t\tresolver: yupResolver(changePasswordValidationSchema),\r\n\t})\r\n\r\n\tconst { token } = useParams<{ token?: string }>()\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst validateChangePasswordToken = useStoreActions(_ => _.auth.validateChangePasswordToken)\r\n\tconst changePassword = useStoreActions(_ => _.auth.changePassword)\r\n\r\n\t/**\r\n\t * Result from server whether the token is valid: for a valid\r\n\t * token the server will return the user's email, which is stored\r\n\t * here as a string to signal a valid token.\r\n\t * \r\n\t * We use null to signal an invalid token, when the server responds\r\n\t * with an error and undefined to signal a loading state.\r\n\t */\r\n\tconst [validTokenEmail, setValidTokenEmail] = useState<string | null | undefined>()\r\n\r\n\tconst [passwordChangeSuccessful, setPasswordChangeSuccessful] = useState(false)\r\n\r\n\tconst [error, setError] = useState<string>()\r\n\r\n\t/**\r\n\t * Initially loading the token validity state from the server\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tif (token) {\r\n\t\t\tvalidateChangePasswordToken({ token }).then(result => {\r\n\t\t\t\tif (result.isSuccess()) {\r\n\t\t\t\t\tsetValidTokenEmail(result.value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetValidTokenEmail(null)\r\n\t\t\t\t\tswitch (result.reason) {\r\n\t\t\t\t\t\tcase \"invalidServerResponse\":\r\n\t\t\t\t\t\t\tsetError(\"Could not contact server. Try again later.\")\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"network\":\r\n\t\t\t\t\t\t\tswitch (result.code) {\r\n\t\t\t\t\t\t\t\tcase \"request/too-many-requests\":\r\n\t\t\t\t\t\t\t\t\tsetError(\"You are trying too fast. Try again later.\t\")\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}, []) // eslint-disable-line\r\n\r\n\t/**\r\n\t * If no token is present, automatically redirect the user\r\n\t */\r\n\tif (!token) {\r\n\t\tredirect(_ => _.login)\r\n\t}\r\n\r\n\t/**\r\n\t * Handle submitting\r\n\t */\r\n\tfunction submitHandler(values: ChangePasswordFormType) {\r\n\t\tif (token) {\r\n\t\t\tchangePassword({ ...values, token }).then(result => {\r\n\t\t\t\tif (result.isSuccess()) {\r\n\t\t\t\t\tReactGA.event({\r\n\t\t\t\t\t\taction: \"Change Password\",\r\n\t\t\t\t\t\tcategory: \"User\",\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tsetPasswordChangeSuccessful(true)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetError(\"Could not change password\")\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSubmit = form.handleSubmit(submitHandler)\r\n\r\n\t/**\r\n\t * Password visible state\r\n\t */\r\n\tconst [passwordVisible, setPasswordVisible] = useState(false)\r\n\r\n\tconst togglePasswordVisibility = useCallback(() => {\r\n\t\tsetPasswordVisible(value => !value)\r\n\t}, [setPasswordVisible])\r\n\r\n\t/**\r\n\t * Email and password error shorthands for react hook form\r\n\t */\r\n\tconst passwordError = form.formState.touched.password && form.errors.password?.message\r\n\r\n\treturn {\r\n\t\tvalidTokenEmail,\r\n\t\tloading: validTokenEmail === undefined,\r\n\t\tpasswordChangeSuccessful,\r\n\t\thandleSubmit,\r\n\t\thandleLogin: () => redirect(_ => _.login),\r\n\t\terror,\r\n\t\tpasswordVisible,\r\n\t\tsetPasswordVisible,\r\n\t\ttogglePasswordVisibility,\r\n\t\tpasswordError,\r\n\t\tform\r\n\t}\r\n}","import \"./ChangePassword.scss\";\r\nimport React from \"react\"\r\nimport { useChangePasswordController } from \"./useChangePasswordController\";\r\nimport { Type } from \"../../components/Type/Type\";\r\nimport { TextField, InputAdornment, IconButton, Button, CircularProgress } from \"@material-ui/core\";\r\nimport {\r\n\tVisibility as PasswordVisibleIcon,\r\n\tVisibilityOff as PasswordInvisibleIcon,\r\n} from \"@material-ui/icons\";\r\n\r\n\r\nexport function ChangePassword() {\r\n\r\n\tconst controller = useChangePasswordController()\r\n\r\n\treturn <div className=\"ChangePassword\">\r\n\r\n\t\t<Type\r\n\t\t\tcomponent=\"h1\"\r\n\t\t\tvariant=\"bold\"\r\n\t\t\tcolor=\"black\"\r\n\t\t\tsize=\"xxl\"\r\n\t\t>\r\n\t\t\t{\"Change your password\"}\r\n\t\t</Type>\r\n\r\n\t\t<main>\r\n\t\t\t{(() => {\r\n\r\n\t\t\t\tif (controller.loading) {\r\n\r\n\t\t\t\t\treturn <CircularProgress />\r\n\r\n\t\t\t\t} else if (!controller.validTokenEmail) {\r\n\r\n\t\t\t\t\treturn <>\r\n\r\n\t\t\t\t\t\t<Type color=\"red-600\">\r\n\t\t\t\t\t\t\t{controller.error ?? \"Invalid password change link\"}\r\n\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t<footer>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={controller.handleLogin}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{\"Back to login\"}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</footer>\r\n\r\n\t\t\t\t\t</>\r\n\r\n\t\t\t\t} else if (controller.passwordChangeSuccessful) {\r\n\r\n\t\t\t\t\treturn <>\r\n\r\n\t\t\t\t\t\t<Type color=\"green-600\" variant=\"bold\">\r\n\t\t\t\t\t\t\t{\"Password changed for \" + controller.validTokenEmail}\r\n\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t<footer>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={controller.handleLogin}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{\"Login\"}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</footer>\r\n\r\n\t\t\t\t\t</>\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn <form onSubmit={controller.handleSubmit}>\r\n\r\n\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t{\"Enter a new password for \" + controller.validTokenEmail}\r\n\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"change-password\"\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\ttype={controller.passwordVisible ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\tinputRef={controller.form.register}\r\n\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\terror={!!controller.passwordError}\r\n\t\t\t\t\t\t\thelperText={controller.passwordError}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<IconButton onClick={controller.togglePasswordVisibility} size=\"small\">\r\n\t\t\t\t\t\t\t\t\t\t{controller.passwordVisible ? <PasswordVisibleIcon /> : <PasswordInvisibleIcon />}\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Change password\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcontroller.error ?\r\n\t\t\t\t\t\t\t\t<Type color=\"red-600\">\r\n\t\t\t\t\t\t\t\t\t{controller.error}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t<footer>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\t\tonClick={controller.handleLogin}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{\"Back to login\"}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</footer>\r\n\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t})()}\r\n\t\t</main>\r\n\t</div>\r\n}","import \"./ConfirmEmail.scss\";\r\nimport React from \"react\"\r\nimport { Type } from \"../../components/Type/Type\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\nimport { useConfirmEmailController } from \"./useConfirmEmailController\";\r\n\r\nexport type ConfirmEmailProps = {\r\n}\r\n\r\nexport function ConfirmEmail(props: ConfirmEmailProps) {\r\n\r\n\tconst controller = useConfirmEmailController()\r\n\r\n\treturn <div className=\"ConfirmEmail\">\r\n\r\n\t\t<Type\r\n\t\t\tcomponent=\"h1\"\r\n\t\t\tvariant=\"bold\"\r\n\t\t\tcolor=\"black\"\r\n\t\t\tsize=\"xxl\"\r\n\t\t>\r\n\t\t\t{\"Confirm your email\"}\r\n\t\t</Type>\r\n\r\n\t\t<main>\r\n\t\t\t{(() => {\r\n\r\n\t\t\t\tswitch (controller.success) {\r\n\r\n\t\t\t\t\tcase undefined:\r\n\r\n\t\t\t\t\t\treturn <CircularProgress />\r\n\r\n\t\t\t\t\tcase false:\r\n\r\n\t\t\t\t\t\treturn <>\r\n\r\n\t\t\t\t\t\t\t<Type color=\"red-600\">\r\n\t\t\t\t\t\t\t\t{controller.error ?? \"Invalid password change link\"}\r\n\t\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t\t<footer>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\tonClick={controller.handleLogin}\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\"Back to login\"}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</footer>\r\n\r\n\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t\tcase true:\r\n\r\n\t\t\t\t\t\treturn <>\r\n\r\n\t\t\t\t\t\t\t<Type color=\"green-600\" variant=\"bold\" component=\"h2\" size=\"lg\">\r\n\t\t\t\t\t\t\t\t{\"Email succesfully confirmed\"}\r\n\t\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={controller.handleLogin}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{\"Login\"}\r\n\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t})()}\r\n\t\t</main>\r\n\r\n\t</div>\r\n}","import ReactGA from \"react-ga\";\r\nimport { useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useRedirect } from \"../../hooks/utils/useRedirect\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport function useConfirmEmailController() {\r\n\r\n\tconst { token } = useParams<{ token?: string }>()\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst confirmEmail = useStoreActions(_ => _.auth.confirmEmail)\r\n\r\n\t/**\r\n\t * Boolean for whether confirmation was successful or not: undefined\r\n\t * signals a loading value\r\n\t */\r\n\tconst [success, setSuccess] = useState<boolean>()\r\n\r\n\tconst [error, setError] = useState<string | null>(null)\r\n\r\n\t/**\r\n\t * Initially loading the token validity state from the server\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tif (token) {\r\n\t\t\tconfirmEmail({ token }).then(result => {\r\n\t\t\t\tsetSuccess(result.isSuccess())\r\n\t\t\t\tif (result.isSuccess()) {\r\n\t\t\t\t\tReactGA.event({\r\n\t\t\t\t\t\taction: \"Confirm Email\",\r\n\t\t\t\t\t\tcategory: \"User\",\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswitch (result.reason) {\r\n\t\t\t\t\t\tcase \"invalidServerResponse\":\r\n\t\t\t\t\t\t\tsetError(\"Could not contact server. Try again later.\")\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"network\":\r\n\t\t\t\t\t\t\tswitch (result.code) {\r\n\t\t\t\t\t\t\t\tcase \"request/too-many-requests\":\r\n\t\t\t\t\t\t\t\t\tsetError(\"You are trying too fast. Try again later.\")\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}, []) // eslint-disable-line\r\n\r\n\t/**\r\n\t * If no token is present, automatically redirect the user\r\n\t */\r\n\tif (!token) {\r\n\t\tredirect(_ => _.login)\r\n\t}\r\n\r\n\tconst handleLogin = () => redirect(_ => _.login)\r\n\r\n\treturn {\r\n\t\tsuccess,\r\n\t\thandleLogin,\r\n\t\terror,\r\n\t}\r\n}","import \"./Budget.scss\";\r\nimport React from \"react\"\r\nimport { Type } from \"../../components/Type/Type\";\r\n\r\nexport type BudgetProps = {\r\n\r\n}\r\n\r\nexport function Budget(props: BudgetProps) {\r\n\treturn <div className=\"Budget\">\r\n\t\t<div style={{\r\n\t\t\twidth: \"100%\",\r\n\t\t\tpadding: \"4rem 0\",\r\n\t\t\tdisplay: \"grid\",\r\n\t\t\tplaceItems: \"center\",\r\n\t\t}}>\r\n\t\t\t<Type>\r\n\t\t\t\t{\"Budgets feature is coming here in a future version\"}\r\n\t\t\t</Type>\r\n\t\t</div>\r\n\t</div>\r\n}","import ReactGA from \"react-ga\";\r\nlet deferredPromptEvent: any;\r\n\r\n/**\r\n * Provides a function to trigger the PWA installation. If the installation\r\n * is unavailable, returns null\r\n */\r\nexport function usePwaInstall() {\r\n  return Boolean(deferredPromptEvent)\r\n    ? async () => {\r\n        deferredPromptEvent.prompt();\r\n        const choiceResult = await deferredPromptEvent.userChoice;\r\n        if (choiceResult) {\r\n          ReactGA.event({\r\n            action: \"Install PWA\",\r\n            category: \"PWA\",\r\n          });\r\n        }\r\n        return choiceResult;\r\n      }\r\n    : null;\r\n}\r\n\r\n// Catch the install event and prevent initial prompt\r\nwindow.addEventListener(\"beforeinstallprompt\", (e) => {\r\n  e.preventDefault();\r\n  ReactGA.event({\r\n    action: \"Display PWA Installer\",\r\n    category: \"PWA\",\r\n    nonInteraction: true,\r\n  });\r\n  deferredPromptEvent = e;\r\n});\r\n","import { usePwaInstall } from \"../../hooks/application/usePwaInstall\";\r\n\r\nexport function useAuthFrameController() {\r\n\r\n\tconst handlePwaInstall = usePwaInstall()\r\n\r\n\treturn { handlePwaInstall }\r\n\r\n}","import \"./AuthFrame.scss\";\r\nimport React from \"react\"\r\nimport { Logo } from \"../Logo/Logo\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useAuthFrameController } from \"./useAuthFrameController\";\r\n\r\nexport type AuthFrameProps = {\r\n\tchildren?: React.ReactNode;\r\n}\r\n\r\nexport function AuthFrame(props: AuthFrameProps) {\r\n\r\n\tconst controller = useAuthFrameController()\r\n\r\n\treturn <div className=\"AuthFrame\">\r\n\r\n\t\t<nav>\r\n\t\t\t<Logo />\r\n\t\t\t{\r\n\t\t\t\tcontroller.handlePwaInstall\r\n\t\t\t\t\t? <Button\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tonClick={controller.handlePwaInstall}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\"Install\"}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t: null\r\n\t\t\t}\r\n\t\t</nav>\r\n\r\n\t\t<div className=\"content\">{props.children}</div>\r\n\r\n\t</div>\r\n}","import { useEffect } from \"react\";\r\nimport { useRouteData } from \"./useRouteData\";\r\n\r\nfunction getDocumentTitle(subtitle?: string) {\r\n  const base = `Nexpenda`;\r\n\r\n  if (!subtitle) {\r\n    return base;\r\n  } else {\r\n    return `${base} | ${subtitle}`;\r\n  }\r\n}\r\n\r\nexport function usePathTitle() {\r\n  const routeData = useRouteData();\r\n\r\n  useEffect(() => {\r\n    document.title = getDocumentTitle(routeData?.title);\r\n    return () => {\r\n      document.title = getDocumentTitle();\r\n    };\r\n  });\r\n}\r\n","import \"./Logout.scss\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport { useLogoutController } from \"./useLogoutController\";\nimport { Type } from \"../../components/Type/Type\";\n\nexport type LogoutProps = {\n\n};\n\nexport function Logout(props: LogoutProps) {\n\n\tconst controller = useLogoutController(props)\n\n\treturn <div className={cx(\"Logout\")}>\n\t\t<Type>\n\t\t\t{\"You have been logged out. You should be redirected momentarily.\"}\n\t\t</Type>\n\t\t<Type>\n\t\t\t{\"If you have not been redirected,\"}\n\t\t\t<span className=\"anchor\" onClick={controller.handleRedirect}>\n\t\t\t\t{\"click here\"}\n\t\t\t</span>\n\t\t\t{\"to return to the login page.\"}\n\t\t</Type>\n\t</div>\n}","import { useEffect } from \"react\";\nimport { LoggedOutEvent } from \"../../history/LoggedOutEvent\";\nimport { useRedirect } from \"../../hooks/utils/useRedirect\";\nimport { routes } from \"../../Routes\";\nimport { StorageService } from \"../../services/StorageService\";\nimport { useStoreActions } from \"../../store\";\nimport { LogoutProps } from \"./Logout\";\n\nexport function useLogoutController(props: LogoutProps) {\n  const pushEvent = useStoreActions((_) => _.history.pushEvent);\n  const redirect = useRedirect();\n\n  useEffect(() => {\n    const hadAccessToken = StorageService.components.hadAccessToken;\n    if (hadAccessToken.getValue()) {\n      pushEvent(new LoggedOutEvent());\n      hadAccessToken.clearValue();\n    }\n    redirect(routes.login);\n  }, [pushEvent, redirect]);\n\n  function handleRedirect() {\n    redirect(routes.login);\n  }\n\n  return { handleRedirect };\n}\n","import React from \"react\"\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Login } from './views/Login/Login';\r\nimport { Register } from './views/Register/Register';\r\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute';\r\nimport { Dashboard } from './views/Dashboard/Dashboard';\r\nimport { Settings } from \"./views/Settings/Settings\";\r\nimport { Analytics } from \"./views/Analytics/Analytics\";\r\nimport { ForgotPassword } from \"./views/ForgotPassword/ForgotPassword\";\r\nimport { AppFrame } from \"./components/AppFrame/AppFrame\";\r\nimport { ChangePassword } from \"./views/ChangePassword/ChangePassword\";\r\nimport { ConfirmEmail } from \"./views/ConfirmEmail/ConfirmEmail\";\r\nimport { Budget } from \"./views/Budget/Budget\";\r\nimport { AuthFrame } from \"./components/AuthFrame/AuthFrame\";\r\nimport { usePathTitle } from \"./hooks/application/usePathTitle\";\r\nimport { Logout } from \"./views/Logout/Logout\";\r\n\r\nexport type RouteData = {\r\n\tname: string,\r\n\tpath: string,\r\n\ttitle: string,\r\n}\r\n\r\nexport type VariableRouteData = (s: string) => RouteData\r\n\r\nexport const routes = {\r\n\tapproot: {\r\n\t\tname: \"approot\",\r\n\t\tpath: \"/app\",\r\n\t\ttitle: \"\"\r\n\t} as RouteData,\r\n\tdashboard: {\r\n\t\tname: \"dashboard\",\r\n\t\tpath: \"/app/dashboard\",\r\n\t\ttitle: \"Dashboard\"\r\n\t} as RouteData,\r\n\tanalytics: {\r\n\t\tname: \"analytics\",\r\n\t\tpath: \"/app/analytics\",\r\n\t\ttitle: \"Analytics\"\r\n\t} as RouteData,\r\n\tbudget: {\r\n\t\tname: \"budget\",\r\n\t\tpath: \"/app/budget\",\r\n\t\ttitle: \"Budget\"\r\n\t} as RouteData,\r\n\tsettings: {\r\n\t\tname: \"settings\",\r\n\t\tpath: \"/app/settings\",\r\n\t\ttitle: \"Settings\"\r\n\t} as RouteData,\r\n\tlogin: {\r\n\t\tname: \"login\",\r\n\t\tpath: \"/\",\r\n\t\ttitle: \"Login\"\r\n\t} as RouteData,\r\n\tforgotPassword: {\r\n\t\tname: \"forgotPassword\",\r\n\t\tpath: \"/forgotPassword\",\r\n\t\ttitle: \"Forgot Password\"\r\n\t} as RouteData,\r\n\tregister: {\r\n\t\tname: \"register\",\r\n\t\tpath: \"/register\",\r\n\t\ttitle: \"Register\"\r\n\t} as RouteData,\r\n\tlogOut: {\r\n\t\tname: \"logOut\",\r\n\t\tpath: \"/logout\",\r\n\t\ttitle: \"Log out\"\r\n\t} as RouteData,\r\n\tchangePassword(token: string): RouteData {\r\n\t\treturn {\r\n\t\t\tname: \"changePassword\",\r\n\t\t\tpath: `/changePassword/${token}`,\r\n\t\t\ttitle: \"Change Password\"\r\n\t\t}\r\n\t},\r\n\tconfirmEmail(token: string): RouteData {\r\n\t\treturn {\r\n\t\t\tname: \"confirmEmail\",\r\n\t\t\tpath: `/confirmEmail/${token}`,\r\n\t\t\ttitle: \"Confirm Email\"\r\n\t\t}\r\n\t}\r\n} as const;\r\n\r\nexport function Routes() {\r\n\r\n\tusePathTitle()\r\n\r\n\treturn <Switch>\r\n\r\n\t\t<Route exact path={routes.login.path}>\r\n\t\t\t<AuthFrame>\r\n\t\t\t\t<Login />\r\n\t\t\t</AuthFrame>\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.register.path}>\r\n\t\t\t<AuthFrame>\r\n\t\t\t\t<Register />\r\n\t\t\t</AuthFrame>\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.forgotPassword.path}>\r\n\t\t\t<AuthFrame>\r\n\t\t\t\t<ForgotPassword />\r\n\t\t\t</AuthFrame>\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.changePassword(\":token\").path}>\r\n\t\t\t<AuthFrame>\r\n\t\t\t\t<ChangePassword />\r\n\t\t\t</AuthFrame>\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.confirmEmail(\":token\").path}>\r\n\t\t\t<AuthFrame>\r\n\t\t\t\t<ConfirmEmail />\r\n\t\t\t</AuthFrame>\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.logOut.path}>\r\n\t\t\t<AuthFrame>\r\n\t\t\t\t<Logout />\r\n\t\t\t</AuthFrame>\r\n\t\t</Route>\r\n\r\n\t\t<ProtectedRoute exact path={routes.dashboard.path}>\r\n\t\t\t<AppFrame>\r\n\t\t\t\t<Dashboard />\r\n\t\t\t</AppFrame>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.analytics.path}>\r\n\t\t\t<AppFrame>\r\n\t\t\t\t<Analytics />\r\n\t\t\t</AppFrame>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.budget.path}>\r\n\t\t\t<AppFrame>\r\n\t\t\t\t<Budget />\r\n\t\t\t</AppFrame>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.settings.path}>\r\n\t\t\t<AppFrame>\r\n\t\t\t\t<Settings />\r\n\t\t\t</AppFrame>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<Route path=\"/\">\r\n\t\t\t<Redirect to={routes.dashboard.path} />\r\n\t\t</Route>\r\n\t</Switch>\r\n\r\n}","/**\r\n * Minimum possible date (`0` or `01/01/1970`)\r\n */\r\nexport const MINIMUM_DATE = new Date(0);\r\n\r\n/**\r\n * Maximum possible date (`253370757600000` or `01/01/9999`)\r\n */\r\nexport const MAXIMUM_DATE = new Date(253370757600000);\r\n","export type StorageServiceOptions = {\r\n  storage: \"local\" | \"session\";\r\n};\r\n\r\nexport class StorageService {\r\n  /**\r\n   * Gets the selected storage based on the options\r\n   */\r\n  protected static getStorage(options: StorageServiceOptions) {\r\n    switch (options.storage) {\r\n      case \"local\":\r\n        return window.localStorage;\r\n      case \"session\":\r\n        return window.sessionStorage;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get an item from the storage\r\n   */\r\n  protected static getItem(key: string, options: StorageServiceOptions) {\r\n    const storage = StorageService.getStorage(options);\r\n    return storage.getItem(key);\r\n  }\r\n\r\n  /**\r\n   * Set an item to the storage\r\n   */\r\n  protected static setItem(\r\n    key: string,\r\n    value: string | undefined,\r\n    options: StorageServiceOptions\r\n  ) {\r\n    const storage = StorageService.getStorage(options);\r\n    if (typeof value === \"string\") {\r\n      return storage.setItem(key, value);\r\n    } else {\r\n      return storage.removeItem(key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove an item from the storage\r\n   */\r\n  protected static removeItem(key: string, options: StorageServiceOptions) {\r\n    const storage = StorageService.getStorage(options);\r\n    return storage.removeItem(key);\r\n  }\r\n\r\n  /**\r\n   * Clear the storage\r\n   */\r\n  protected static clear(options: StorageServiceOptions) {\r\n    const storage = StorageService.getStorage(options);\r\n    storage.clear();\r\n  }\r\n\r\n  /**\r\n   * Creates a component setter and getter\r\n   */\r\n  protected static createComponent<T>(options: {\r\n    key: string;\r\n    decode(value: string | null): T;\r\n    encode(t: T): string | undefined;\r\n    options: StorageServiceOptions;\r\n  }) {\r\n    return {\r\n      getKey() {\r\n        return options.key;\r\n      },\r\n      getValue() {\r\n        return options.decode(\r\n          StorageService.getItem(options.key, options.options)\r\n        );\r\n      },\r\n      setValue(t: T) {\r\n        return StorageService.setItem(\r\n          options.key,\r\n          options.encode(t),\r\n          options.options\r\n        );\r\n      },\r\n      clearValue() {\r\n        return StorageService.removeItem(options.key, options.options);\r\n      },\r\n    };\r\n  }\r\n\r\n  public static get components() {\r\n    return {\r\n      hadAccessToken: StorageService.hadAccessToken,\r\n      apiUrlOverride: StorageService.apiUrlOverride,\r\n    };\r\n  }\r\n\r\n  protected static get hadAccessToken() {\r\n    return StorageService.createComponent<boolean>({\r\n      key: \"had_access_token\",\r\n      decode(value) {\r\n        return value === \"true\";\r\n      },\r\n      encode(value) {\r\n        return value ? \"true\" : undefined;\r\n      },\r\n      options: {\r\n        storage: \"session\",\r\n      },\r\n    });\r\n  }\r\n\r\n  protected static get apiUrlOverride() {\r\n    return StorageService.createComponent<string | undefined>({\r\n      key: \"api_url\",\r\n      decode(value) {\r\n        return value || undefined;\r\n      },\r\n      encode(value) {\r\n        return value;\r\n      },\r\n      options: {\r\n        storage: \"local\",\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HistoryEventAlreadyRestoredFailure } from \"../result/HistoryFailures\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\n/**\r\n * Describes an event that will be pushed to the history stack that\r\n * can be restored via an undo command.\r\n */\r\nexport class HistoryEvent<T = void> {\r\n  /**\r\n   * Unique, autogenerated ID for historyevent\r\n   */\r\n  readonly id: string;\r\n\r\n  /**\r\n   * The type of history event\r\n   */\r\n  readonly type: string;\r\n\r\n  /**\r\n   * The time when the event was created\r\n   */\r\n  readonly time: Date;\r\n\r\n  /**\r\n   * Private flag for whether or not the restoration function for\r\n   * this instance was run.\r\n   */\r\n  private _restored: boolean;\r\n\r\n  /**\r\n   * Flag for whether or not the restoration function for this\r\n   * instance was run.\r\n   */\r\n  get restored() {\r\n    return this._restored;\r\n  }\r\n\r\n  /**\r\n   * Check if the event can be restored i.e. does it have a\r\n   * restoration strategy\r\n   */\r\n  get canBeRestored() {\r\n    return !!this.restorationStrategy;\r\n  }\r\n\r\n  /**\r\n   * Has this history event already been displayed to the user\r\n   */\r\n  displayed: boolean = false;\r\n\r\n  /**\r\n   * The restoration function to use upon undo\r\n   */\r\n  readonly restorationStrategy: undefined | (() => MaybePromise<T>);\r\n\r\n  constructor(type: string, restorationStrategy?: () => MaybePromise<T>) {\r\n    this.id = uuid();\r\n    this.type = type;\r\n    this.time = new Date();\r\n    this.restorationStrategy = restorationStrategy;\r\n    this._restored = false;\r\n  }\r\n\r\n  /**\r\n   * Function to restore the event and notify\r\n   */\r\n  restore() {\r\n    if (this._restored) {\r\n      return new HistoryEventAlreadyRestoredFailure();\r\n    }\r\n    if (this.restorationStrategy) {\r\n      this._restored = true;\r\n      return this.restorationStrategy();\r\n    }\r\n  }\r\n}\r\n","import { useCallback } from \"react\";\r\nimport { useQueryState } from \"./useQueryState\";\r\n\r\nexport function useBooleanQueryState(\r\n  key: string,\r\n  method: Parameters<typeof useQueryState>[0][\"method\"],\r\n  truthy: string = \"true\",\r\n  falsy: string | undefined | null = undefined\r\n) {\r\n  const encode = useCallback(\r\n    (value: boolean) => {\r\n      return value ? truthy : falsy;\r\n    },\r\n    [truthy, falsy]\r\n  );\r\n\r\n  const decode = useCallback(\r\n    (arg: any) => {\r\n      return arg === truthy;\r\n    },\r\n    [truthy]\r\n  );\r\n\r\n  return useQueryState<boolean>({ key, encode, decode, method });\r\n}\r\n","import \"./TransactionContextMenu.scss\";\r\nimport React from \"react\"\r\nimport { Menu, MenuItem } from \"@material-ui/core\";\r\nimport {\r\n\tSelectAll as SelectAllIcon,\r\n\tClear as DeselectAllIcon,\r\n\tCheckBoxOutlineBlank as SelectIcon,\r\n\tCheckBox as DeselectIcon,\r\n\tDelete as DeleteIcon,\r\n\tEdit as EditIcon,\r\n} from \"@material-ui/icons\";\r\nimport { useTransactionContextMenuController } from \"./useTransactionContextMenuController\";\r\n\r\n\r\nexport type TransactionContextMenuProps = {\r\n}\r\n\r\nexport function TransactionContextMenu(props: TransactionContextMenuProps) {\r\n\r\n\tconst controller = useTransactionContextMenuController(props)\r\n\r\n\treturn <Menu\r\n\t\tclassName=\"TransactionContextMenu\"\r\n\t\topen={!!controller.position && !!controller.transaction}\r\n\t\tanchorReference=\"anchorPosition\"\r\n\t\tanchorPosition={controller.position}\r\n\t\tonClose={controller.onClose}\r\n\t>\r\n\t\t<MenuItem\r\n\t\t\tonClick={controller.onEdit}\r\n\t\t\tclassName=\"editItem\"\r\n\t\t>\r\n\t\t\t<EditIcon />\r\n\t\t\t{\"Edit\"}\r\n\t\t</MenuItem>\r\n\t\t<MenuItem\r\n\t\t\tonClick={controller.onDelete}\r\n\t\t\tclassName=\"deleteItem\"\r\n\t\t>\r\n\t\t\t<DeleteIcon />\r\n\t\t\t{\"Delete\"}\r\n\t\t</MenuItem>\r\n\t\t<MenuItem\r\n\t\t\tonClick={controller.onSelectToggle}\r\n\t\t\tclassName=\"selectItem\"\r\n\t\t>\r\n\t\t\t{controller.isSelected ? <DeselectIcon /> : <SelectIcon />}\r\n\t\t\t{controller.isSelected ? \"Deselect\" : \"Select\"}\r\n\t\t</MenuItem>\r\n\t\t<MenuItem\r\n\t\t\tonClick={controller.onSelectAllToggle}\r\n\t\t\tclassName=\"selectAllItem\"\r\n\t\t>\r\n\t\t\t{controller.isAllSelected ? <DeselectAllIcon /> : <SelectAllIcon />}\r\n\t\t\t{controller.isAllSelected ? \"Deselect all\" : \"Select all\"}\r\n\t\t</MenuItem>\r\n\t</Menu>\r\n}","import { useCallback, useMemo } from \"react\"\r\nimport { useTransactionContextMenu } from \"../../contexts/TransactionContextMenu.context\"\r\nimport { useStoreActions, useStoreState } from \"../../store\"\r\nimport { DataUtils } from \"../../utils/DataUtils/DataUtils\"\r\nimport { useTransactionEditorDrawerVariableOpenState } from \"../TransactionEditorDrawer/useTransactionEditorDrawerController\"\r\nimport { TransactionContextMenuProps } from \"./TransactionContextMenu\"\r\n\r\n\r\nexport function useTransactionContextMenuController(props: TransactionContextMenuProps) {\r\n\r\n\tconst selection = useStoreState(_ => _.selection.selection)\r\n\tconst filteredTransactions = useStoreState(_ => _.transactions.filteredItems)\r\n\r\n\tconst deselectAll = useStoreActions(_ => _.selection.deselectAll)\r\n\tconst selectAll = useStoreActions(_ => _.selection.selectAll)\r\n\tconst select = useStoreActions(_ => _.selection.select)\r\n\tconst deselect = useStoreActions(_ => _.selection.deselect)\r\n\r\n\tconst [, setEditor] = useTransactionEditorDrawerVariableOpenState()\r\n\r\n\tconst menu = useTransactionContextMenu()\r\n\r\n\t/**\r\n\t * Handle close\r\n\t */\r\n\tconst handleClose = useCallback(() => {\r\n\t\tmenu.setPosition(undefined)\r\n\t\tmenu.setTransaction(undefined)\r\n\t}, [menu])\r\n\r\n\t/**\r\n\t * Selected\r\n\t */\r\n\tconst isSelected = useMemo(() => {\r\n\t\treturn selection.some(t => {\r\n\t\t\treturn t.id === menu.transaction?.id\r\n\t\t})\r\n\t}, [menu, selection])\r\n\r\n\t/**\r\n\t * Select toggle\r\n\t */\r\n\tconst handleSelectToggle = useCallback(() => {\r\n\t\tif (menu.transaction) {\r\n\t\t\tif (isSelected) {\r\n\t\t\t\tdeselect(menu.transaction.id)\r\n\t\t\t} else {\r\n\t\t\t\tselect(menu.transaction.id)\r\n\t\t\t}\r\n\t\t}\r\n\t\thandleClose()\r\n\t}, [handleClose, menu, select, deselect, isSelected])\r\n\r\n\t/**\r\n\t * All selected\r\n\t */\r\n\tconst isAllSelected = useMemo(() => {\r\n\t\treturn DataUtils.compareArrays(\r\n\t\t\tfilteredTransactions.map(_ => _.id),\r\n\t\t\tselection.map(_ => _.id),\r\n\t\t)\r\n\t}, [filteredTransactions, selection])\r\n\r\n\t/**\r\n\t * Select all toggle\r\n\t */\r\n\tconst handleSelectAllToggle = useCallback(() => {\r\n\t\tif (isAllSelected) {\r\n\t\t\tdeselectAll()\r\n\t\t} else {\r\n\t\t\tselectAll(filteredTransactions.map(_ => _.id))\r\n\t\t}\r\n\t\thandleClose()\r\n\t}, [handleClose, deselectAll, selectAll, isAllSelected, filteredTransactions])\r\n\r\n\t/**\r\n\t * Editing\r\n\t */\r\n\tconst handleEdit = useCallback(() => {\r\n\t\tif (menu.transaction) {\r\n\t\t\tsetEditor(menu.transaction.id)\r\n\t\t}\r\n\t\thandleClose()\r\n\t}, [handleClose, menu, setEditor])\r\n\r\n\t/**\r\n\t * Deletion\r\n\t */\r\n\tconst deleteTransactions = useStoreActions(_ => _.transactions.deleteTransactions)\r\n\tconst handleDelete = useCallback(() => {\r\n\t\tif (menu.transaction) {\r\n\t\t\tdeleteTransactions([menu.transaction.id])\r\n\t\t}\r\n\t\thandleClose()\r\n\t}, [handleClose, deleteTransactions, menu])\r\n\r\n\treturn {\r\n\t\tposition: menu.position,\r\n\t\ttransaction: menu.transaction,\r\n\r\n\t\tisAllSelected: isAllSelected,\r\n\t\tisSelected: isSelected,\r\n\r\n\t\tonSelectAllToggle: handleSelectAllToggle,\r\n\t\tonSelectToggle: handleSelectToggle,\r\n\r\n\t\tonDelete: handleDelete,\r\n\t\tonEdit: handleEdit,\r\n\r\n\t\tonClose: handleClose,\r\n\t}\r\n}","import React, { useContext, useState } from \"react\";\r\nimport { Transaction } from \"../classes/Transaction\";\r\nimport { TransactionContextMenu } from \"../components/TransactionContextMenu/TransactionContextMenu\";\r\n\r\ntype TransactionContextMenuContextType = {\r\n\ttransaction?: Transaction | undefined;\r\n\tsetTransaction(transaction: Transaction | undefined): void;\r\n\tposition?: { top: number, left: number } | undefined;\r\n\tsetPosition(origin: { top: number, left: number } | undefined): void;\r\n}\r\n\r\nconst TransactionContextMenuContext = React.createContext<TransactionContextMenuContextType>(\r\n\t{\r\n\t\tsetPosition() { throw new Error(`Using default TransactionContextMenuContext value`) },\r\n\t\tsetTransaction() { throw new Error(`Using default TransactionContextMenuContext value`) }\r\n\t}\r\n)\r\n\r\nexport function useTransactionContextMenu() {\r\n\treturn useContext(TransactionContextMenuContext)\r\n}\r\n\r\nexport function TransactionContextMenuProvider(\r\n\tprops: { children?: React.ReactNode }\r\n) {\r\n\r\n\tconst [position, setPosition] = useState<{ top: number, left: number }>()\r\n\r\n\tconst [transaction, setTransaction] = useState<Transaction>()\r\n\r\n\treturn <TransactionContextMenuContext.Provider value={{\r\n\t\tposition,\r\n\t\tsetPosition,\r\n\t\ttransaction,\r\n\t\tsetTransaction\r\n\t}}>\r\n\t\t<TransactionContextMenu />\r\n\t\t{props.children}\r\n\t</TransactionContextMenuContext.Provider>\r\n}","import { JsonTransaction, Transaction } from \"../classes/Transaction\";\r\nimport { InvalidServerResponseFailure } from \"../result/InvalidServerResponseFailures\";\r\nimport { NetworkFailure } from \"../result/NetworkFailures\";\r\nimport { Success } from \"../result/Success\";\r\nimport { store } from \"../store\";\r\nimport { HistoryEvent } from \"./HistoryEvent\";\r\n\r\n/**\r\n * Defines a strategy for a single deletion event\r\n */\r\nexport class DeleteTransactionEvent extends HistoryEvent<\r\n  | Success<JsonTransaction, string>\r\n  | NetworkFailure<any, { errors?: any }>\r\n  | InvalidServerResponseFailure<JsonTransaction>\r\n> {\r\n  readonly transaction: Transaction;\r\n\r\n  constructor(transaction: Transaction) {\r\n    super(\"transaction/delete\", () => {\r\n      const json = transaction.toJsonInitializer();\r\n      const put = store.getActions().transactions.putTransaction;\r\n      return put(json);\r\n    });\r\n    this.transaction = transaction;\r\n  }\r\n}\r\n","import { Failure } from \"./Failure\";\r\n\r\nexport class HistoryEventAlreadyRestoredFailure<T> extends Failure<\r\n  T,\r\n  \"already-recovered\"\r\n> {\r\n  constructor() {\r\n    super(\"already-recovered\");\r\n  }\r\n}\r\n\r\nexport class EventNotFoundFailure<T> extends Failure<T, \"event-not-found\"> {\r\n  constructor() {\r\n    super(\"event-not-found\");\r\n  }\r\n}\r\n","import { JsonTransaction, Transaction } from \"../classes/Transaction\";\r\nimport { InvalidServerResponseFailure } from \"../result/InvalidServerResponseFailures\";\r\nimport { NetworkFailure } from \"../result/NetworkFailures\";\r\nimport { Success } from \"../result/Success\";\r\nimport { store } from \"../store\";\r\nimport { HistoryEvent } from \"./HistoryEvent\";\r\n\r\n/**\r\n * Defines a strategy for a mass deletion event\r\n */\r\nexport class DeleteTransactionsEvent extends HistoryEvent<\r\n  Array<\r\n    | Success<JsonTransaction, string>\r\n    | NetworkFailure<any, { errors?: any }>\r\n    | InvalidServerResponseFailure<JsonTransaction>\r\n  >\r\n> {\r\n  readonly transactions: Transaction[];\r\n\r\n  constructor(transactions: Transaction[]) {\r\n    super(\"transaction/delete\", async () => {\r\n      const jsons = transactions.map((_) => _.toJsonInitializer());\r\n      const put = store.getActions().transactions.putTransaction;\r\n      const results = await Promise.all(jsons.map((json) => put(json)));\r\n      return results;\r\n    });\r\n    this.transactions = transactions;\r\n  }\r\n}\r\n","import { useCallback, useMemo } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport {\r\n  parse as parseQueryString,\r\n  stringify as createQueryString,\r\n} from \"query-string\";\r\n\r\nexport function useQueryState<T>(options: {\r\n  key: string;\r\n  method: \"push\" | \"replace\";\r\n  decode: (encoded: string | string[] | null) => T;\r\n  encode: (decoded: T) => string | null | undefined;\r\n}): [T, (t: T) => void] {\r\n  const { key, decode, encode, method } = options;\r\n\r\n  const location = useLocation();\r\n\r\n  const history = useHistory();\r\n\r\n  /**\r\n   * Get current state from the query string\r\n   */\r\n  const state = useMemo(() => {\r\n    const search = location.search;\r\n    const query = parseQueryString(search);\r\n    const value = query[key];\r\n    return decode(value);\r\n  }, [location, decode, key]);\r\n\r\n  /**\r\n   * Function to set the state to the query string\r\n   */\r\n  const setState = useCallback(\r\n    function (target: T) {\r\n      const query = parseQueryString(location.search);\r\n      const queryString = createQueryString({\r\n        ...query,\r\n        [key]: encode(target),\r\n      });\r\n\r\n      switch (method) {\r\n        case \"push\":\r\n          history.push({\r\n            search: queryString,\r\n          });\r\n          break;\r\n        case \"replace\":\r\n          history.replace({ search: queryString });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    [encode, key, location, history, method]\r\n  );\r\n\r\n  /**\r\n   * Return the same signature as the useState hook\r\n   */\r\n  return [state, setState];\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/shapelined-_JBKdviweXI-unsplash.f356b661.jpg\";","import { useLocation } from \"react-router-dom\";\r\nimport { RouteData, routes, VariableRouteData } from \"../../Routes\";\r\n\r\nexport function useRouteData(): RouteData | undefined {\r\n  const location = useLocation();\r\n\r\n  const current = Object.entries(routes)\r\n    .map((entry) => {\r\n      const [, value] = entry as [string, RouteData | VariableRouteData];\r\n      return typeof value === \"function\" ? value(\".*\") : value;\r\n    })\r\n    .find((route) => {\r\n      const routeRegexp = new RegExp(route.path + \"$\");\r\n      return !!location.pathname.match(routeRegexp);\r\n    });\r\n\r\n  return current;\r\n}\r\n","import { HistoryEvent } from \"./HistoryEvent\";\r\n\r\nexport class LoggedOutEvent extends HistoryEvent {\r\n  constructor() {\r\n    super(\"auth/logout\");\r\n  }\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo_google.696b80ec.png\";","module.exports = __webpack_public_path__ + \"static/media/pexels-johannes-plenio-1103970.afe78909.jpg\";","import ReactGA from \"react-ga\";\r\nimport { useState, useCallback } from \"react\"\r\nimport { useStoreActions, useStoreState } from \"../../../store\"\r\nimport { SettingsProfilePanelProps } from \"./SettingsProfilePanel\"\r\n\r\nexport function useSettingsProfilePanelController(props: SettingsProfilePanelProps) {\r\n\r\n\tconst updateProfile = useStoreActions(_ => _.auth.updateProfile)\r\n\tconst notify = useStoreActions(_ => _.notification.notify)\r\n\r\n\t// Get the current user\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\r\n\t// Editing state\r\n\tconst editNameInputId = \"SettingsProfilePanel__editNameInputId\"\r\n\r\n\tconst [editingName, setEditingName] = useState(false)\r\n\tconst [loadingName, setLoadingName] = useState(false)\r\n\tconst [nameValue, setNameValue] = useState(\"\")\r\n\r\n\tconst handleStartEditName = useCallback(() => {\r\n\t\tsetEditingName(true)\r\n\t\tsetNameValue(user?.displayName ?? \"\")\r\n\t\tsetImmediate(() => {\r\n\t\t\tdocument.getElementById(editNameInputId)?.focus()\r\n\t\t})\r\n\t}, [setEditingName, user])\r\n\r\n\tconst handleCancelEditName = useCallback(() => {\r\n\t\tsetEditingName(false)\r\n\t}, [setEditingName])\r\n\r\n\t// Submitting the edit\r\n\tconst handleSubmitName = useCallback(async () => {\r\n\t\t// Ensure a value is given\r\n\t\tif (nameValue.trim()) {\r\n\r\n\t\t\t// Start loading\r\n\t\t\tsetLoadingName(true)\r\n\r\n\t\t\t// Update profile\r\n\t\t\tconst result = await updateProfile({ displayName: nameValue })\r\n\r\n\t\t\t// Show message\r\n\t\t\tif (result.isFailure()) {\r\n\t\t\t\tnotify({\r\n\t\t\t\t\tmessage: (() => {\r\n\t\t\t\t\t\tswitch (result.reason) {\r\n\t\t\t\t\t\t\tcase \"invalidServerResponse\":\r\n\t\t\t\t\t\t\t\treturn \"Invalid response from server.\"\r\n\t\t\t\t\t\t\tcase \"network\":\r\n\t\t\t\t\t\t\t\tswitch (result.code) {\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\treturn result.message\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})(),\r\n\t\t\t\t\tseverity: \"error\"\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tReactGA.event({\r\n\t\t\t\t\taction: \"Change Profile Name\",\r\n\t\t\t\t\tcategory: \"Profile\",\r\n\t\t\t\t})\r\n\t\t\t\tnotify({\r\n\t\t\t\t\tmessage: \"Succesfully updated profile name\",\r\n\t\t\t\t\tseverity: \"success\"\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t// End loading\r\n\t\t\tsetLoadingName(false)\r\n\t\t}\r\n\t\thandleCancelEditName()\r\n\t}, [handleCancelEditName, updateProfile, notify, nameValue])\r\n\r\n\treturn {\r\n\t\teditNameInputId,\r\n\t\tuser,\r\n\t\tname: {\r\n\t\t\tediting: editingName,\r\n\t\t\thandleStartEdit: handleStartEditName,\r\n\t\t\thandleCancelEdit: handleCancelEditName,\r\n\t\t\thandleSubmit: handleSubmitName,\r\n\t\t\tvalue: nameValue,\r\n\t\t\tsetValue: setNameValue,\r\n\t\t\tloading: loadingName,\r\n\t\t\tsetLoading: setLoadingName,\r\n\t\t}\r\n\t}\r\n}","import { Failure } from \"./Failure\";\r\nimport { IResult } from \"./Result\";\r\n\r\nexport class Success<T, R = string> implements IResult<T, R> {\r\n  public readonly resultType: \"success\" = \"success\";\r\n  public readonly value: T;\r\n\r\n  constructor(value: T) {\r\n    this.value = value;\r\n  }\r\n\r\n  public getOr(fallback: T): T {\r\n    return this.value;\r\n  }\r\n\r\n  public isSuccess(): this is Success<T, R> {\r\n    return true;\r\n  }\r\n\r\n  public isFailure(): this is Failure<T, R> {\r\n    return false;\r\n  }\r\n\r\n  static All<T>(results: IResult<T>[]) {\r\n    const all: Success<T>[] = [];\r\n    results.forEach((result) => {\r\n      if (result.isSuccess()) {\r\n        all.push(result);\r\n      }\r\n    });\r\n    return all;\r\n  }\r\n\r\n  static Empty() {\r\n    return new Success<void>(undefined);\r\n  }\r\n}\r\n","import { DataUtils } from \"../DataUtils/DataUtils\";\r\nexport type DateUtilsCompareOperator = \">\" | \">=\" | \"==\" | \"<=\" | \"<\";\r\n\r\nexport class DateUtils {\r\n  /**\r\n   * Groups items (where items can be associated with a Date object)\r\n   * by their date.\r\n   *\r\n   * @param items All items to group\r\n   * @param getDate Function to associate an item with its date\r\n   * @param options Options\r\n   */\r\n  static groupByDate<T>(\r\n    items: T[],\r\n    getDate: (t: T) => Date,\r\n    options?: { sort?: boolean }\r\n  ): { date: Date; items: T[] }[] {\r\n    /**\r\n     * Get all possible dates\r\n     */\r\n    const dates = items.map(getDate);\r\n    const serializedDates = dates.map(DateUtils.serializeDate);\r\n    const keys = DataUtils.unique(serializedDates);\r\n\r\n    /**\r\n     * Get items by dates for all possible dates\r\n     */\r\n    let result: { date: Date; items: T[] }[] = [];\r\n    keys.forEach((serial) => {\r\n      const date = DateUtils.deserializeDate(serial);\r\n      const itemsOnDate = items.filter((item) => {\r\n        const itemdate = getDate(item);\r\n        return DateUtils.compareDate(date, \"==\", itemdate);\r\n      });\r\n      result.push({ date, items: itemsOnDate });\r\n    });\r\n\r\n    /**\r\n     * Optionally sort\r\n     */\r\n    if (options?.sort) {\r\n      result = result.sort((a, b) => {\r\n        return b.date.getTime() - a.date.getTime();\r\n      });\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Utility function to compare two dates, where only the date is taken into\r\n   * account, not the time.\r\n   *\r\n   * @param a  Left hand operator date\r\n   * @param op Operator to specify which comparison to run\r\n   * @param b  Right hand operator date\r\n   */\r\n  static compareDate(a: Date, op: DateUtilsCompareOperator, b: Date) {\r\n    // Serialize dates for easy comparison\r\n    const _a = DateUtils.serializeDate(a);\r\n    const _b = DateUtils.serializeDate(b);\r\n\r\n    switch (op) {\r\n      case \"<\":\r\n        return _a < _b;\r\n      case \"<=\":\r\n        return _a <= _b;\r\n      case \"==\":\r\n        return _a === _b;\r\n      case \">=\":\r\n        return _a >= _b;\r\n      case \">\":\r\n        return _a > _b;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Serializer options\r\n   */\r\n  static DateSerializer = {\r\n    yearFactor: 10000,\r\n    monthFactor: 100,\r\n    dateFactor: 1,\r\n  };\r\n\r\n  /**\r\n   * Deserializes a date serialized with the `DateUtils.serializeDate`\r\n   * function to the original date.\r\n   *\r\n   * @param serial Serialized number\r\n   */\r\n  static deserializeDate(serial: number) {\r\n    let remainder = serial;\r\n    const year = Math.floor(remainder / DateUtils.DateSerializer.yearFactor);\r\n    remainder = remainder % DateUtils.DateSerializer.yearFactor;\r\n    const month = Math.floor(remainder / DateUtils.DateSerializer.monthFactor);\r\n    remainder = remainder % DateUtils.DateSerializer.monthFactor;\r\n    const date = Math.floor(remainder / DateUtils.DateSerializer.dateFactor);\r\n    remainder = remainder % DateUtils.DateSerializer.dateFactor;\r\n\r\n    const yyyy = year.toString().padStart(4, \"0\");\r\n    const mm = month.toString().padStart(2, \"0\");\r\n    const dd = date.toString().padStart(2, \"0\");\r\n\r\n    return new Date(`${yyyy}-${mm}-${dd}`);\r\n  }\r\n\r\n  /**\r\n   * Serialize a date to a number, where each date (year,month,date)\r\n   * is mapped to a different number.\r\n   *\r\n   * @param date Date to serialize\r\n   */\r\n  static serializeDate(date: Date) {\r\n    return (\r\n      date.getFullYear() * DateUtils.DateSerializer.yearFactor +\r\n      (date.getMonth() + 1) * DateUtils.DateSerializer.monthFactor +\r\n      date.getDate() * DateUtils.DateSerializer.dateFactor\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Serializes a month to a number\r\n   *\r\n   * @param date\r\n   */\r\n  static serializeMonth(date: Date): number {\r\n    return date.getFullYear() * 12 + date.getMonth();\r\n  }\r\n\r\n  /**\r\n   * Deserializes a number to a month\r\n   *\r\n   * @param date\r\n   */\r\n  static deserializeMonth(serial: number) {\r\n    const year = Math.floor(serial / 12);\r\n    const month = Math.floor(serial % 12);\r\n    return new Date(year, month);\r\n  }\r\n}\r\n","import { object, string, ObjectSchema } from \"yup\";\r\n\r\nexport type JsonAuth = {\r\n  id: string;\r\n  displayName: string | undefined;\r\n  photoUrl: string | undefined;\r\n  email: string | undefined;\r\n  googleId: string | undefined;\r\n};\r\n\r\nexport type UpdatableJsonAuthFields = {\r\n  displayName?: string | undefined;\r\n  photoUrl?: string | undefined;\r\n};\r\n\r\nexport class Auth {\r\n  id: string;\r\n  displayName?: string;\r\n  email?: string;\r\n  photoUrl?: string;\r\n  googleId?: string;\r\n\r\n  constructor(json: JsonAuth) {\r\n    this.id = json.id;\r\n    this.displayName = json.displayName ?? undefined;\r\n    this.email = json.email ?? undefined;\r\n    this.photoUrl = json.photoUrl ?? undefined;\r\n    this.googleId = json.googleId ?? undefined;\r\n  }\r\n\r\n  /**\r\n   * Gets the user's 2 first initials\r\n   */\r\n  get initials() {\r\n    return (this.displayName ?? this.email ?? \"\")\r\n      .split(/[^a-zA-Z]/g)\r\n      .filter(Boolean)\r\n      .slice(0, 2)\r\n      .map((_) => _.charAt(0))\r\n      .map((_) => _.toUpperCase())\r\n      .join(\"\");\r\n  }\r\n\r\n  /**\r\n   * JsonSchema defining shape of JsonAuth for yup validatioin\r\n   */\r\n  static JsonSchema: ObjectSchema<JsonAuth> = object({\r\n    id: string().required().min(1),\r\n    displayName: string(),\r\n    photoUrl: string(),\r\n    email: string(),\r\n    googleId: string(),\r\n  }).required();\r\n\r\n  /**\r\n   * Is the value a valid JsonAuth\r\n   */\r\n  static isJson(arg: any): arg is JsonAuth {\r\n    try {\r\n      Auth.JsonSchema.isValidSync(arg);\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert Auth to JsonAuth\r\n   */\r\n  toJson(): JsonAuth {\r\n    return {\r\n      id: this.id,\r\n      displayName: this.displayName,\r\n      email: this.email,\r\n      googleId: this.googleId,\r\n      photoUrl: this.photoUrl,\r\n    };\r\n  }\r\n}\r\n","import { StorageService } from \"./services/StorageService\";\r\n\r\nexport class Config {\r\n  static get API_URL() {\r\n    const env = process.env.NODE_ENV;\r\n\r\n    const override = StorageService.components.apiUrlOverride.getValue();\r\n\r\n    if (override) {\r\n      return override;\r\n    }\r\n\r\n    if (!env || env === \"development\") {\r\n      return \"http://localhost:4000\";\r\n    } else if (env === \"test\") {\r\n      return \"http://localhost:4001\";\r\n    } else {\r\n      return \"https://api.nexpenda.com\";\r\n    }\r\n  }\r\n}\r\n","import { AxiosError } from \"axios\";\r\nimport { Failure } from \"./Failure\";\r\n\r\nexport type ServerFailureCode =\r\n  | \"server/unavailable\"\r\n  | \"server/failure-formulating-request\"\r\n  | \"request/invalid-request-data\"\r\n  | \"request/too-many-requests\"\r\n  | \"request/missing-query-parameters\"\r\n  | \"request/missing-url-parameters\"\r\n  | \"transaction/already-exists\"\r\n  | \"transaction/not-found\"\r\n  | \"auth/missing-token\"\r\n  | \"auth/invalid-token\"\r\n  | \"auth/user-has-no-password\"\r\n  | \"auth/invalid-credentials\"\r\n  | \"auth/unauthenticated\"\r\n  | \"auth/unauthorized\"\r\n  | \"auth/user-not-found\"\r\n  | \"auth/user-already-exists\"\r\n  | \"auth/email-not-confirmed\"\r\n  | \"auth/email-already-confirmed\"\r\n  | \"mail/error\"\r\n  | \"database/access-failure\"\r\n  | \"failure/validation\"\r\n  | \"failure/unimplemented\"\r\n  | \"failure/error\"\r\n  | \"failure/unknown\"\r\n  | \"failure/cors\";\r\n\r\ntype NetworkFailureDetails<E> = {\r\n  status: number;\r\n  code: ServerFailureCode;\r\n  message: string;\r\n  data?: E;\r\n};\r\n\r\nexport class NetworkFailure<T, E = undefined> extends Failure<T, \"network\"> {\r\n  public readonly details: NetworkFailureDetails<E>;\r\n  public readonly status: number;\r\n  public readonly message: string;\r\n  public readonly code: ServerFailureCode;\r\n  public readonly data?: E;\r\n\r\n  constructor(details: NetworkFailureDetails<E>) {\r\n    super(\"network\");\r\n    this.details = details;\r\n    this.status = details.status;\r\n    this.message = details.message;\r\n    this.code = details.code;\r\n    this.data = details.data;\r\n  }\r\n\r\n  static FromAxiosError<T>(\r\n    error: AxiosError\r\n  ): NetworkFailure<T, { errors?: any }> {\r\n    if (error.response) {\r\n      const data = error.response.data;\r\n\r\n      return new NetworkFailure<T, { errors?: object }>({\r\n        status: error.response.status,\r\n        message:\r\n          typeof data?.message === \"string\"\r\n            ? data.message\r\n            : \"Unknown server error. Try again later.\",\r\n        code: typeof data?.code === \"string\" ? data.code : \"server/unknown\",\r\n        data:\r\n          data.errors && typeof data.errors === \"object\"\r\n            ? { errors: data.errors }\r\n            : {},\r\n      });\r\n    } else if (error.request) {\r\n      return new NetworkFailure<T, { errors?: object }>({\r\n        status: 0,\r\n        code: \"server/unavailable\",\r\n        message: \"Could not contact server. Try again later.\",\r\n        data: {},\r\n      });\r\n    } else {\r\n      return new NetworkFailure<T, { errors?: object }>({\r\n        status: 0,\r\n        code: \"server/failure-formulating-request\",\r\n        message: \"Could not formulate request to server.\",\r\n        data: {},\r\n      });\r\n    }\r\n  }\r\n}\r\n","import Axios, { AxiosRequestConfig, AxiosError, AxiosResponse } from \"axios\";\r\nimport { Config } from \"../config\";\r\nimport { store } from \"../store\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { Success } from \"../result/Success\";\r\nimport { NetworkFailure } from \"../result/NetworkFailures\";\r\nimport { routes } from \"../Routes\";\r\nimport { StorageService } from \"./StorageService\";\r\n\r\nexport type ServiceRequestConfig = {\r\n  enableLogoutOnUnauthorized: boolean;\r\n};\r\n\r\nexport type RequestConfig = {\r\n  axios?: AxiosRequestConfig;\r\n  service?: ServiceRequestConfig;\r\n};\r\n\r\nexport class Service {\r\n  /**\r\n   * Base URL for sending requests to the API\r\n   */\r\n  protected static baseURL = `${Config.API_URL}/api`;\r\n\r\n  /**\r\n   * Axios instance to use for sending requests\r\n   */\r\n  protected static axios = Axios.create({\r\n    baseURL: Service.baseURL,\r\n    withCredentials: true,\r\n  });\r\n\r\n  /**\r\n   * Construct endpoint from path, base URL already handled\r\n   */\r\n  protected static endpoint(path: string) {\r\n    return `${Service.baseURL}${path}`;\r\n  }\r\n\r\n  /**\r\n   * Ensure access token is valid\r\n   */\r\n  protected static isAccessTokenValid() {\r\n    const token = store.getState().auth.accessToken;\r\n    if (!token) return false;\r\n    try {\r\n      const payload = jwt.decode(token) as any;\r\n      const expiresAt = Number(payload?.exp || 0) * 1000;\r\n      const expirationBuffer = 5000; // Fetch new access token 30 seconds before expiration\r\n      const tokenIsValid = Date.now() < expiresAt - expirationBuffer;\r\n      return tokenIsValid;\r\n    } catch (error) {\r\n      console.warn(\"Error occured while checking access token\", error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempt refresh access token function\r\n   */\r\n  protected static async attemptRefreshAccessToken(force: boolean = false) {\r\n    const accessTokenIsValid = Service.isAccessTokenValid();\r\n    if (!accessTokenIsValid || force) {\r\n      const url = Service.endpoint(\"/auth/refresh_token\");\r\n      try {\r\n        const result = await Service.axios.get<string>(url);\r\n        const accessToken = result.data;\r\n        store.getActions().auth.setAccessToken(accessToken);\r\n      } catch (e) {\r\n        if (store.getState().auth.accessToken) {\r\n          store.getActions().auth.logout();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Before request hook\r\n   */\r\n  protected static async onBeforeRequest(\r\n    config?: ServiceRequestConfig | undefined\r\n  ) {\r\n    await Service.attemptRefreshAccessToken();\r\n  }\r\n\r\n  /**\r\n   * On success hook\r\n   */\r\n  protected static async onSuccessfulRequest(\r\n    success: Success<AxiosResponse<any>, string>,\r\n    config?: ServiceRequestConfig | undefined\r\n  ) {}\r\n\r\n  /**\r\n   * On failure hook\r\n   */\r\n  protected static async onFailedRequest(\r\n    failure: NetworkFailure<any, { errors?: any }>,\r\n    config?: ServiceRequestConfig | undefined\r\n  ) {\r\n    if (\r\n      failure.code === \"auth/unauthenticated\" &&\r\n      config?.enableLogoutOnUnauthorized\r\n    ) {\r\n      const accessToken = store.getState().auth.accessToken;\r\n      StorageService.components.hadAccessToken.setValue(!!accessToken);\r\n      window.location.pathname = routes.logOut.path;\r\n      window.location.search = \"\";\r\n      window.location.hash = \"\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * After request hook\r\n   */\r\n  protected static async onAfterRequest(\r\n    result:\r\n      | Success<AxiosResponse<any>, string>\r\n      | NetworkFailure<any, { errors?: any }>,\r\n    config?: ServiceRequestConfig | undefined\r\n  ) {}\r\n\r\n  /**\r\n   * Gets basic axios config\r\n   */\r\n  protected static getConfig(\r\n    override?: AxiosRequestConfig | undefined\r\n  ): AxiosRequestConfig {\r\n    const accessToken = store.getState().auth.accessToken;\r\n\r\n    // Construct request headers\r\n    const headers = { ...override?.headers };\r\n    if (accessToken) {\r\n      headers.Authorization = `bearer ${accessToken}`;\r\n    }\r\n\r\n    // Override config with headers\r\n    return {\r\n      ...override,\r\n      headers,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Run requests with hooks and error handling\r\n   *\r\n   * @param requestFunction Request creator function\r\n   */\r\n  protected static async handleRequest<T>(\r\n    path: string,\r\n    config: RequestConfig | undefined,\r\n    requestFunction: (\r\n      url: string,\r\n      options: AxiosRequestConfig\r\n    ) => Promise<AxiosResponse<T>>\r\n  ) {\r\n    // Run before request hooks\r\n    await Service.onBeforeRequest(config?.service);\r\n\r\n    // Request configuration\r\n    const url = Service.endpoint(path);\r\n    const options = Service.getConfig(config?.axios);\r\n\r\n    // Run request\r\n    const result = await requestFunction(url, options)\r\n      .then(async (value) => {\r\n        // Get success as success, run success hooks\r\n        const success = new Success<AxiosResponse<T>>(value);\r\n        await Service.onSuccessfulRequest(success, config?.service);\r\n        return success;\r\n      })\r\n      .catch(async (e) => {\r\n        // Get failure as failure, run failure hooks\r\n        const failure = NetworkFailure.FromAxiosError<T>(e as AxiosError);\r\n        await Service.onFailedRequest(failure, config?.service);\r\n        return failure;\r\n      });\r\n\r\n    // Run after request hooks\r\n    await Service.onAfterRequest(result, config?.service);\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Axios typed GET request wrapper with hooks\r\n   */\r\n  protected static async get<ResponseData = any>(\r\n    path: string,\r\n    config?: RequestConfig | undefined\r\n  ) {\r\n    return Service.handleRequest(path, config, (url, options) => {\r\n      return Service.axios.get<ResponseData>(url, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed POST request wrapper with hooks\r\n   */\r\n  protected static async post<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: RequestConfig\r\n  ) {\r\n    return Service.handleRequest(path, config, (url, options) => {\r\n      return Service.axios.post<ResponseData>(url, data, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed DELETE request wrapper with hooks\r\n   */\r\n  protected static async delete<ResponseData = any>(\r\n    path: string,\r\n    config?: RequestConfig | undefined\r\n  ) {\r\n    return Service.handleRequest(path, config, (url, options) => {\r\n      return Service.axios.delete<ResponseData>(url, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed PUT request wrapper with hooks\r\n   */\r\n  protected static async put<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: RequestConfig\r\n  ) {\r\n    return Service.handleRequest(path, config, (url, options) => {\r\n      return Service.axios.put<ResponseData>(url, data, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed PATCH request wrapper with hooks\r\n   */\r\n  protected static async patch<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: RequestConfig\r\n  ) {\r\n    return Service.handleRequest(path, config, (url, options) => {\r\n      return Service.axios.patch<ResponseData>(url, data, options);\r\n    });\r\n  }\r\n}\r\n","import { Failure } from \"./Failure\";\r\n\r\nexport class InvalidServerResponseFailure<T> extends Failure<\r\n  T,\r\n  \"invalidServerResponse\"\r\n> {\r\n  public readonly response: any;\r\n  public readonly method: string;\r\n\r\n  constructor(response: any, method: string) {\r\n    super(\"invalidServerResponse\");\r\n    this.response = response;\r\n    this.method = method;\r\n  }\r\n}\r\n","import { Service } from \"./Service\";\r\nimport { Auth, JsonAuth, UpdatableJsonAuthFields } from \"../classes/Auth\";\r\nimport { InvalidServerResponseFailure } from \"../result/InvalidServerResponseFailures\";\r\nimport { Success } from \"../result/Success\";\r\n\r\nexport class AuthService extends Service {\r\n  /**\r\n   * Fetches the user's profile if the user is signed in.\r\n   */\r\n  static async getProfile() {\r\n    const result = await Service.get<JsonAuth>(\"/auth/profile\", {});\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (Auth.isJson(result.value.data)) {\r\n      return new Success(result.value.data);\r\n    } else {\r\n      return new InvalidServerResponseFailure<JsonAuth>(\r\n        result.value,\r\n        \"/auth/profile\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the user's profile\r\n   */\r\n  static async updateProfile(update: UpdatableJsonAuthFields) {\r\n    const result = await Service.patch<UpdatableJsonAuthFields, JsonAuth>(\r\n      \"/auth/profile\",\r\n      update,\r\n      { service: { enableLogoutOnUnauthorized: true } }\r\n    );\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (Auth.isJson(result.value.data)) {\r\n      return new Success(result.value.data);\r\n    } else {\r\n      return new InvalidServerResponseFailure<JsonAuth>(\r\n        result.value,\r\n        \"/auth/profile\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers and logs in a new user with the given credentials.\r\n   */\r\n  static async registerWithEmailAndPassword(credentials: {\r\n    email: string;\r\n    password: string;\r\n  }) {\r\n    const result = await Service.post(\"/auth/register\", credentials);\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (result.value.status === 200) {\r\n      return Success.Empty();\r\n    } else {\r\n      return new InvalidServerResponseFailure<undefined>(\r\n        result.value,\r\n        \"auth/register\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Logs the user in with the given credentials.\r\n   */\r\n  static async loginWithEmailAndPassword(credentials: {\r\n    email: string;\r\n    password: string;\r\n  }) {\r\n    const result = await Service.post(\"/auth/login\", credentials);\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (result.value.status === 200) {\r\n      return Success.Empty();\r\n    } else {\r\n      return new InvalidServerResponseFailure<undefined>(\r\n        result.value,\r\n        \"auth/login\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sends a forgot password email to the given email address.\r\n   */\r\n  static async forgotPassword(credentials: { email: string }) {\r\n    const result = await Service.post(\"/auth/forgot_password\", credentials);\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (result.value.status === 200) {\r\n      return Success.Empty();\r\n    } else {\r\n      return new InvalidServerResponseFailure<undefined>(\r\n        result.value,\r\n        \"auth/forgot-password\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validates a password change token\r\n   */\r\n  static async validatePasswordChangeToken(credentials: { token: string }) {\r\n    const result = await Service.get(\r\n      `/auth/change_password/${credentials.token}`\r\n    );\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (\r\n      result.value.status === 200 &&\r\n      result.value.data &&\r\n      typeof result.value.data === \"string\"\r\n    ) {\r\n      return new Success<string>(result.value.data);\r\n    } else {\r\n      return new InvalidServerResponseFailure<string>(\r\n        result.value,\r\n        \"auth/change-password\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Change a user's password\r\n   */\r\n  static async changePassword(credentials: {\r\n    token: string;\r\n    password: string;\r\n  }) {\r\n    const result = await Service.post(\r\n      `/auth/change_password/${credentials.token}`,\r\n      { password: credentials.password }\r\n    );\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (result.value.status === 200) {\r\n      return Success.Empty();\r\n    } else {\r\n      return new InvalidServerResponseFailure<void>(\r\n        result.value,\r\n        \"auth/change-password\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Request new confirmation email\r\n   */\r\n  static async requestConfirmationEmail(credentials: { email: string }) {\r\n    const result = await Service.post<{ email: string }>(\r\n      `/auth/request_confirm_email`,\r\n      credentials\r\n    );\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (result.value.status === 200) {\r\n      return Success.Empty();\r\n    } else {\r\n      return new InvalidServerResponseFailure<void>(\r\n        result.value,\r\n        \"auth/request-confirm-email\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Confirm a user's email\r\n   */\r\n  static async confirmEmail(credentials: { token: string }) {\r\n    const result = await Service.post(\r\n      `/auth/confirm_email/${credentials.token}`\r\n    );\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (result.value.status === 200) {\r\n      return Success.Empty();\r\n    } else {\r\n      return new InvalidServerResponseFailure<void>(\r\n        result.value,\r\n        \"auth/confirm-email\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Logs the user out.\r\n   */\r\n  static async logout() {\r\n    const result = await Service.post(`/auth/logout`);\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (result.value.status === 200) {\r\n      return Success.Empty();\r\n    } else {\r\n      return new InvalidServerResponseFailure<void>(\r\n        result.value,\r\n        \"auth/logout\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Logs the user in with a Google account. Redirects the user.\r\n   */\r\n  static loginWithGoogle() {\r\n    window.location.href = Service.endpoint(\"/auth/google\");\r\n  }\r\n\r\n  /**\r\n   * Get a protected ping\r\n   */\r\n  static async checkAuth() {\r\n    const result = await Service.get<JsonAuth>(\"/auth/profile\", {\r\n      service: { enableLogoutOnUnauthorized: true },\r\n    });\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (Auth.isJson(result.value.data)) {\r\n      return new Success(result.value.data);\r\n    } else {\r\n      return new InvalidServerResponseFailure<JsonAuth>(\r\n        result.value,\r\n        \"/auth/profile\"\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { Action, action, Computed, computed, Thunk, thunk } from \"easy-peasy\";\r\nimport { Auth, JsonAuth } from \"../classes/Auth\";\r\nimport { AuthService } from \"../services/AuthService\";\r\nimport { StoreModel } from \"../store\";\r\n\r\nexport interface AuthModel {\r\n  //==============================================================//\r\n  // PROPERTIES\r\n  //==============================================================//\r\n\r\n  /**\r\n   * Currently logged in user or null if none logged in\r\n   */\r\n  user: Auth | null;\r\n\r\n  /**\r\n   * Initialized state: has the profile been fetched at the least once\r\n   */\r\n  initialized: boolean;\r\n\r\n  /**\r\n   * Current access token for authentication in memory for security purposes.\r\n   * This is automatically refreshed when making a request with a service and\r\n   * should not be manually set.\r\n   */\r\n  accessToken: string | null;\r\n\r\n  //==============================================================//\r\n  // COMPUTED PROPERTIES\r\n  //==============================================================//\r\n\r\n  /**\r\n   * Computed property for whether the user is currently logged in\r\n   */\r\n  isLoggedIn: Computed<AuthModel, boolean>;\r\n\r\n  //==============================================================//\r\n  // ACTIONS\r\n  //==============================================================//\r\n\r\n  /**\r\n   * Sets the initialized state\r\n   */\r\n  setInitialized: Action<AuthModel, boolean>;\r\n\r\n  /**\r\n   * Sets the access token\r\n   */\r\n  setAccessToken: Action<AuthModel, string>;\r\n\r\n  /**\r\n   * Sets the current user with partial user JSON object\r\n   */\r\n  setAuthToState: Action<AuthModel, JsonAuth>;\r\n\r\n  /**\r\n   * Action to set the current user to null\r\n   */\r\n  clearState: Action<AuthModel, void>;\r\n\r\n  //==============================================================//\r\n  // THUNKS\r\n  //==============================================================//\r\n\r\n  /**\r\n   * Function to get the currently logged in user's profile data and apply it\r\n   * to the user property. The logged in property is defined by the current\r\n   * refresh token.\r\n   */\r\n  getProfile: Thunk<\r\n    AuthModel,\r\n    void,\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"getProfile\"]>\r\n  >;\r\n\r\n  /**\r\n   * Function to partially update the profile\r\n   */\r\n  updateProfile: Thunk<\r\n    AuthModel,\r\n    Parameters<typeof AuthService[\"updateProfile\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"updateProfile\"]>\r\n  >;\r\n\r\n  /**\r\n   * Log in the current user with a Google account\r\n   */\r\n  loginWithGoogle: Thunk<\r\n    AuthModel,\r\n    void,\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"loginWithGoogle\"]>\r\n  >;\r\n\r\n  /**\r\n   * Register the current user with email and password\r\n   */\r\n  registerWithEmailPassword: Thunk<\r\n    AuthModel,\r\n    Parameters<typeof AuthService[\"registerWithEmailAndPassword\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"registerWithEmailAndPassword\"]>\r\n  >;\r\n\r\n  /**\r\n   * Log in the current user with email and password\r\n   */\r\n  loginWithEmailPassword: Thunk<\r\n    AuthModel,\r\n    Parameters<typeof AuthService[\"loginWithEmailAndPassword\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"loginWithEmailAndPassword\"]>\r\n  >;\r\n\r\n  /**\r\n   * Forgot password\r\n   */\r\n  forgotPassword: Thunk<\r\n    AuthModel,\r\n    Parameters<typeof AuthService[\"forgotPassword\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"forgotPassword\"]>\r\n  >;\r\n\r\n  /**\r\n   * Log out the current user\r\n   */\r\n  logout: Thunk<\r\n    AuthModel,\r\n    void,\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"logout\"]>\r\n  >;\r\n\r\n  /**\r\n   * Validate a change password token\r\n   */\r\n  validateChangePasswordToken: Thunk<\r\n    AuthModel,\r\n    Parameters<typeof AuthService[\"validatePasswordChangeToken\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"validatePasswordChangeToken\"]>\r\n  >;\r\n\r\n  /**\r\n   * Change a user's password\r\n   */\r\n  changePassword: Thunk<\r\n    AuthModel,\r\n    Parameters<typeof AuthService[\"changePassword\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"changePassword\"]>\r\n  >;\r\n\r\n  /**\r\n   * Confirm a user's email\r\n   */\r\n  confirmEmail: Thunk<\r\n    AuthModel,\r\n    Parameters<typeof AuthService[\"confirmEmail\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"confirmEmail\"]>\r\n  >;\r\n\r\n  /**\r\n   * Request a new confirmation email for user\r\n   */\r\n  requestConfirmationEmail: Thunk<\r\n    AuthModel,\r\n    Parameters<typeof AuthService[\"requestConfirmationEmail\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"requestConfirmationEmail\"]>\r\n  >;\r\n}\r\n\r\n/**\r\n * Implementation of the authentication model\r\n */\r\nexport const authModel: AuthModel = {\r\n  //==============================================================//\r\n  // PROPERTIES\r\n  //==============================================================//\r\n\r\n  initialized: false,\r\n  user: null,\r\n  accessToken: null,\r\n\r\n  //==============================================================//\r\n  // COMPUTED PROPERTIES\r\n  //==============================================================//\r\n\r\n  isLoggedIn: computed((state) => Boolean(state.user)),\r\n\r\n  //==============================================================//\r\n  // ACTIONS\r\n  //==============================================================//\r\n\r\n  setInitialized: action((state, boolean) => {\r\n    state.initialized = boolean;\r\n  }),\r\n\r\n  setAccessToken: action((state, newAccessToken) => {\r\n    state.accessToken = newAccessToken;\r\n  }),\r\n\r\n  setAuthToState: action((state, json) => {\r\n    if (Auth.isJson(json)) {\r\n      state.user = new Auth(json);\r\n    }\r\n  }),\r\n\r\n  clearState: action((state) => {\r\n    state.user = null;\r\n    state.accessToken = null;\r\n  }),\r\n\r\n  //==============================================================//\r\n  // THUNKS\r\n  //==============================================================//\r\n\r\n  getProfile: thunk(async (actions, payload) => {\r\n    const profile = await AuthService.getProfile();\r\n    if (profile.isSuccess()) {\r\n      actions.setAuthToState(profile.value);\r\n    }\r\n    actions.setInitialized(true);\r\n    return profile;\r\n  }),\r\n\r\n  updateProfile: thunk(async (actions, payload) => {\r\n    const profile = await AuthService.updateProfile(payload);\r\n    if (profile.isSuccess()) {\r\n      actions.setAuthToState(profile.value);\r\n    }\r\n    return profile;\r\n  }),\r\n\r\n  loginWithGoogle: thunk((actions, payload) => {\r\n    return AuthService.loginWithGoogle();\r\n  }),\r\n\r\n  loginWithEmailPassword: thunk(async (actions, payload) => {\r\n    const result = await AuthService.loginWithEmailAndPassword(payload);\r\n    if (result.isSuccess()) {\r\n      const profile = await AuthService.getProfile();\r\n      if (profile.isSuccess()) {\r\n        actions.setAuthToState(profile.value);\r\n      }\r\n    }\r\n    return result;\r\n  }),\r\n\r\n  registerWithEmailPassword: thunk(async (actions, payload) => {\r\n    const result = await AuthService.registerWithEmailAndPassword(payload);\r\n    if (result.isSuccess()) {\r\n      const profile = await AuthService.getProfile();\r\n      if (profile.isSuccess()) {\r\n        actions.setAuthToState(profile.value);\r\n      }\r\n    }\r\n    return result;\r\n  }),\r\n\r\n  forgotPassword: thunk(async (actions, payload) => {\r\n    const result = await AuthService.forgotPassword(payload);\r\n    return result;\r\n  }),\r\n\r\n  validateChangePasswordToken: thunk(async (actions, payload) => {\r\n    const result = await AuthService.validatePasswordChangeToken(payload);\r\n    return result;\r\n  }),\r\n\r\n  changePassword: thunk(async (actions, payload) => {\r\n    const result = await AuthService.changePassword(payload);\r\n    return result;\r\n  }),\r\n\r\n  confirmEmail: thunk(async (actions, payload) => {\r\n    const result = await AuthService.confirmEmail(payload);\r\n    return result;\r\n  }),\r\n\r\n  requestConfirmationEmail: thunk(async (actions, payload) => {\r\n    const result = await AuthService.requestConfirmationEmail(payload);\r\n    return result;\r\n  }),\r\n\r\n  logout: thunk(async (actions, payload) => {\r\n    const result = await AuthService.logout();\r\n    if (result.isSuccess()) {\r\n      actions.clearState();\r\n    }\r\n    return result;\r\n  }),\r\n};\r\n","import { Service } from \"./Service\";\r\nimport {\r\n  CompressedTransactionsJson,\r\n  JsonTransaction,\r\n  JsonTransactionInitializer,\r\n  Transaction,\r\n} from \"../classes/Transaction\";\r\nimport { Success } from \"../result/Success\";\r\nimport { InvalidServerResponseFailure } from \"../result/InvalidServerResponseFailures\";\r\n\r\nexport class TransactionService extends Service {\r\n  /**\r\n   * Get all transactions for user as Result\r\n   */\r\n  static async getTransactions() {\r\n    const result = await Service.get(\"/transactions\", {\r\n      service: { enableLogoutOnUnauthorized: true },\r\n    });\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (Transaction.isCompressedJson(result.value.data)) {\r\n      return new Success(result.value.data);\r\n    } else {\r\n      return new InvalidServerResponseFailure<CompressedTransactionsJson>(\r\n        result.value,\r\n        \"transactions/get\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Post a transaction (in json, without id or uid) and return\r\n   * created json transaction response as Result.\r\n   */\r\n  static async postTransaction(\r\n    json: Omit<JsonTransactionInitializer, \"id\" | \"uid\">\r\n  ) {\r\n    const result = await Service.post(\"/transactions\", json, {\r\n      service: { enableLogoutOnUnauthorized: true },\r\n    });\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (Transaction.isJson(result.value.data)) {\r\n      return new Success(result.value.data);\r\n    } else {\r\n      return new InvalidServerResponseFailure<JsonTransaction>(\r\n        result.value,\r\n        \"transactions/post\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Post many transactions by IDs and return created json transactions as result.\r\n   */\r\n  static async postTransactions(\r\n    jsons: Array<Omit<JsonTransactionInitializer, \"id\" | \"uid\">>\r\n  ) {\r\n    const result = await Service.post(\r\n      `/transactions/mass/post`,\r\n      {\r\n        transactions: jsons,\r\n      },\r\n      {\r\n        service: { enableLogoutOnUnauthorized: true },\r\n      }\r\n    );\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (\r\n      result.value.status === 201 &&\r\n      Transaction.isCompressedJson(result.value.data)\r\n    ) {\r\n      return new Success(result.value.data);\r\n    } else {\r\n      return new InvalidServerResponseFailure<CompressedTransactionsJson>(\r\n        result.value,\r\n        \"transactions/mass/post\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete a transaction by ID and return empty Result.\r\n   */\r\n  static async deleteTransaction(id: string) {\r\n    const result = await Service.delete(`/transactions/${id}`, {\r\n      service: { enableLogoutOnUnauthorized: true },\r\n    });\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (result.value.status === 204) {\r\n      return Success.Empty();\r\n    } else {\r\n      return new InvalidServerResponseFailure<JsonTransaction[]>(\r\n        result.value,\r\n        \"transactions/delete\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete many transactions by IDs and return empty Result.\r\n   */\r\n  static async deleteTransactions(ids: string[]) {\r\n    const result = await Service.post(\r\n      `/transactions/mass/delete`,\r\n      { ids },\r\n      {\r\n        service: { enableLogoutOnUnauthorized: true },\r\n      }\r\n    );\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (result.value.status === 204) {\r\n      return Success.Empty();\r\n    } else {\r\n      return new InvalidServerResponseFailure<void>(\r\n        result.value,\r\n        \"transactions/mass/delete\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Put a transaction on the server as json (upsert) and\r\n   * return upserted json transaction as Result.\r\n   */\r\n  static async putTransaction(json: JsonTransactionInitializer) {\r\n    const result = await Service.put(`/transactions/${json.id}`, json, {\r\n      service: { enableLogoutOnUnauthorized: true },\r\n    });\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (Transaction.isJson(result.value.data)) {\r\n      return new Success(result.value.data);\r\n    } else {\r\n      return new InvalidServerResponseFailure<JsonTransaction>(\r\n        result.value,\r\n        \"transactions/put\"\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Patch a transaction on the server as json (partial update)\r\n   * and return updated json transaction as Result.\r\n   */\r\n  static async patchTransaction(json: JsonTransactionInitializer) {\r\n    const result = await Service.patch(`/transactions/${json.id}`, json, {\r\n      service: { enableLogoutOnUnauthorized: true },\r\n    });\r\n\r\n    if (result.isFailure()) {\r\n      return result;\r\n    } else if (Transaction.isJson(result.value.data)) {\r\n      return new Success(result.value.data);\r\n    } else {\r\n      return new InvalidServerResponseFailure<JsonTransaction[]>(\r\n        result.value,\r\n        \"transactions/patch\"\r\n      );\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Action,\r\n  action,\r\n  Computed,\r\n  computed,\r\n  Thunk,\r\n  thunk,\r\n  ThunkOn,\r\n  thunkOn,\r\n} from \"easy-peasy\";\r\nimport { Transaction } from \"../classes/Transaction\";\r\nimport { TransactionService } from \"../services/TransactionService\";\r\nimport { StoreModel } from \"../store\";\r\nimport { DeleteTransactionEvent } from \"../history/DeleteTransactionEvent\";\r\nimport { DeleteTransactionsEvent } from \"../history/DeleteTransactionsEvent\";\r\nimport { DataUtils } from \"../utils/DataUtils/DataUtils\";\r\n\r\nexport interface TransactionsModel {\r\n  //==============================================================//\r\n  // PROPERTIES\r\n  //==============================================================//\r\n\r\n  /**\r\n   * All user's current transactions\r\n   */\r\n  items: Transaction[];\r\n\r\n  /**\r\n   * Has the user loaded the transactions\r\n   */\r\n  initialized: boolean;\r\n\r\n  /**\r\n   * Current sorting strategy\r\n   */\r\n  sortingStrategy: TransactionSortStrategy;\r\n\r\n  /**\r\n   * Current search term\r\n   */\r\n  searchTerm: string;\r\n\r\n  //==============================================================//\r\n  // COMPUTED PROPERTIES\r\n  //==============================================================//\r\n\r\n  /**\r\n   * Filtered items\r\n   */\r\n  filteredItems: Computed<TransactionsModel, Transaction[], StoreModel>;\r\n\r\n  /**\r\n   * All categories\r\n   */\r\n  categories: Computed<TransactionsModel, Transaction[\"category\"][]>;\r\n\r\n  //==============================================================//\r\n  // ACTIONS\r\n  //==============================================================//\r\n\r\n  /**\r\n   * Set all transactions to state\r\n   */\r\n  setTransactionsToState: Action<TransactionsModel, Transaction[]>;\r\n\r\n  /**\r\n   * Add multiple transaction to state or if matching transactions by ID already\r\n   * exists in state, change them.\r\n   */\r\n  upsertTransactionsToState: Action<TransactionsModel, Transaction[]>;\r\n\r\n  /**\r\n   * Removes transactions from the state\r\n   */\r\n  removeTransactionsFromStateById: Action<TransactionsModel, string[]>;\r\n\r\n  /**\r\n   * Clears the state\r\n   */\r\n  clearState: Action<TransactionsModel, void>;\r\n\r\n  /**\r\n   * Toggle the current sorting strategy by a sorting property\r\n   */\r\n  toggleSortingStrategy: Action<TransactionsModel, TransactionSortableProperty>;\r\n\r\n  /**\r\n   * Directly set the current sorting strategy to the specified one\r\n   */\r\n  setSortingStrategy: Action<TransactionsModel, TransactionSortStrategy>;\r\n\r\n  /**\r\n   * Directly set the current search term\r\n   */\r\n  setSearchTerm: Action<TransactionsModel, string>;\r\n\r\n  //==============================================================//\r\n  // THUNKS\r\n  //==============================================================//\r\n\r\n  /**\r\n   * Fetch all transactions for user from server\r\n   */\r\n  getTransactions: Thunk<\r\n    TransactionsModel,\r\n    void,\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof TransactionService[\"getTransactions\"]>\r\n  >;\r\n\r\n  /**\r\n   * Post transaction to state\r\n   */\r\n  postTransaction: Thunk<\r\n    TransactionsModel,\r\n    Parameters<typeof TransactionService[\"postTransaction\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof TransactionService[\"postTransaction\"]>\r\n  >;\r\n\r\n  /**\r\n   * Post and multiple transactions to state\r\n   */\r\n  postTransactions: Thunk<\r\n    TransactionsModel,\r\n    Parameters<typeof TransactionService[\"postTransactions\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof TransactionService[\"postTransactions\"]>\r\n  >;\r\n\r\n  /**\r\n   * Delete and remove transaction from state\r\n   */\r\n  deleteTransaction: Thunk<\r\n    TransactionsModel,\r\n    string,\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof TransactionService[\"deleteTransaction\"]>\r\n  >;\r\n\r\n  /**\r\n   * Delete and remove multiple transactions from state\r\n   */\r\n  deleteTransactions: Thunk<\r\n    TransactionsModel,\r\n    string[],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof TransactionService[\"deleteTransactions\"]>\r\n  >;\r\n\r\n  /**\r\n   * Put and update transaction to state\r\n   */\r\n  putTransaction: Thunk<\r\n    TransactionsModel,\r\n    Parameters<typeof TransactionService[\"putTransaction\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof TransactionService[\"putTransaction\"]>\r\n  >;\r\n\r\n  /**\r\n   * Patch and update transaction to state\r\n   */\r\n  patchTransaction: Thunk<\r\n    TransactionsModel,\r\n    Parameters<typeof TransactionService[\"patchTransaction\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof TransactionService[\"patchTransaction\"]>\r\n  >;\r\n\r\n  //==============================================================//\r\n  // LISTENERS\r\n  //==============================================================//\r\n\r\n  /**\r\n   * Listening to auth changes (fetching data on login,\r\n   * clearing state on logout)\r\n   */\r\n  onAuthChanged: ThunkOn<TransactionsModel, any, StoreModel>;\r\n}\r\n\r\nexport const transactionsModel: TransactionsModel = {\r\n  //==============================================================//\r\n  // PROPERTIES\r\n  //==============================================================//\r\n\r\n  items: [],\r\n  initialized: false,\r\n  sortingStrategy: \"date-descending\",\r\n  searchTerm: \"\",\r\n\r\n  //==============================================================//\r\n  // COMPUTED PROPERTIES\r\n  //==============================================================//\r\n\r\n  filteredItems: computed(\r\n    [\r\n      (_) => _.items,\r\n      (_) => _.searchTerm,\r\n      (_, storeState) => storeState.interval,\r\n    ],\r\n    (items, searchTerm, interval) => {\r\n      return items.filter((t) => {\r\n        return t.filter(searchTerm, interval.startDate, interval.endDate);\r\n      });\r\n    }\r\n  ),\r\n\r\n  categories: computed((state) =>\r\n    DataUtils.unique(\r\n      state.items.map((_) => _.category),\r\n      (a, b) => a.id === b.id\r\n    )\r\n  ),\r\n\r\n  //==============================================================//\r\n  // ACTIONS\r\n  //==============================================================//\r\n\r\n  setTransactionsToState: action((state, transactions) => {\r\n    state.items = transactions;\r\n    state.initialized = true;\r\n  }),\r\n\r\n  upsertTransactionsToState: action((state, transactions) => {\r\n    transactions.forEach((transaction) => {\r\n      // Update category icons if required\r\n      const existingCategory = state.categories.find(\r\n        (_) => _.id === transaction.category.id\r\n      );\r\n      if (\r\n        existingCategory &&\r\n        existingCategory.icon !== transaction.category.icon\r\n      ) {\r\n        state.items.forEach((t) => {\r\n          if (t.category.id === transaction.category.id) {\r\n            t.category.icon = transaction.category.icon;\r\n          }\r\n        });\r\n      }\r\n      // Update transaction if one with similary ID already exists\r\n      if (state.items.find((_) => _.id === transaction.id)) {\r\n        state.items = state.items.map((_) => {\r\n          return _.id === transaction.id ? transaction : _;\r\n        });\r\n      }\r\n      // Else add transaction if new transaction based on ID\r\n      else {\r\n        state.items.push(transaction);\r\n      }\r\n    });\r\n  }),\r\n\r\n  removeTransactionsFromStateById: action((state, ids) => {\r\n    state.items = state.items.filter((transaction) => {\r\n      return !ids.includes(transaction.id);\r\n    });\r\n  }),\r\n\r\n  clearState: action((state) => {\r\n    state.items = [];\r\n  }),\r\n\r\n  toggleSortingStrategy: action((state, property) => {\r\n    // Define all carousels: each toggle on a property will toggle the sort to\r\n    // the next sort state in the property's carousel, while clicking on any\r\n    // other property will set it to the first sort state in the new property's\r\n    // carousel.\r\n    const carousels: Record<\r\n      TransactionSortableProperty,\r\n      TransactionSortStrategy[]\r\n    > = {\r\n      amount: [\"amount-descending\", \"amount-ascending\", \"none\"],\r\n      category: [\"category-descending\", \"category-ascending\", \"none\"],\r\n      comment: [\"comment-descending\", \"comment-ascending\", \"none\"],\r\n      date: [\"date-descending\", \"date-ascending\", \"none\"],\r\n    };\r\n\r\n    // Get the current sort\r\n    const currentStrategy = state.sortingStrategy;\r\n\r\n    // Get the current carousel\r\n    const carousel = carousels[property];\r\n\r\n    // Figure out the index of the item in the carousel which is currently\r\n    // active or default to -1 for \"no item found\"\r\n    const activeSortIndex = carousel.findIndex((_) => _ === currentStrategy);\r\n\r\n    // Get the next item's index in the carousel\r\n    const targetSortIndex = (activeSortIndex + 1) % carousel.length;\r\n\r\n    // Return the next item in the carousel\r\n    state.sortingStrategy = carousel[targetSortIndex];\r\n  }),\r\n\r\n  setSortingStrategy: action((state, sort) => {\r\n    state.sortingStrategy = sort;\r\n  }),\r\n\r\n  setSearchTerm: action((state, searchTerm) => {\r\n    state.searchTerm = searchTerm;\r\n  }),\r\n\r\n  //==============================================================//\r\n  // THUNKS\r\n  //==============================================================//\r\n\r\n  getTransactions: thunk(async (actions) => {\r\n    const result = await TransactionService.getTransactions();\r\n    if (result.isSuccess()) {\r\n      actions.setTransactionsToState(\r\n        Transaction.parseCompressedData(result.value)\r\n      );\r\n    } else {\r\n      actions.setTransactionsToState([]);\r\n    }\r\n    return result;\r\n  }),\r\n\r\n  postTransaction: thunk(async (actions, json, store) => {\r\n    const result = await TransactionService.postTransaction(json);\r\n    if (result.isSuccess()) {\r\n      const transaction = new Transaction(result.value);\r\n      actions.upsertTransactionsToState([transaction]);\r\n    }\r\n    return result;\r\n  }),\r\n\r\n  postTransactions: thunk(async (actions, jsons, store) => {\r\n    const result = await TransactionService.postTransactions(jsons);\r\n    if (result.isSuccess()) {\r\n      actions.upsertTransactionsToState(\r\n        Transaction.parseCompressedData(result.value)\r\n      );\r\n    }\r\n    return result;\r\n  }),\r\n\r\n  deleteTransaction: thunk(\r\n    async (actions, id, { getState, getStoreActions }) => {\r\n      // Get transaction and ensure one exists\r\n      const transaction = getState().items.find((_) => _.id === id);\r\n\r\n      // Delete the transaction\r\n      actions.removeTransactionsFromStateById([id]);\r\n      const result = await TransactionService.deleteTransaction(id);\r\n\r\n      // If deletion succeeds, create deletion event\r\n      if (result.isSuccess() && transaction) {\r\n        getStoreActions().history.pushEvent(\r\n          new DeleteTransactionEvent(transaction)\r\n        );\r\n      }\r\n\r\n      // If deletion fails, put transaction back\r\n      else if (result.isFailure() && transaction) {\r\n        actions.upsertTransactionsToState([transaction]);\r\n      }\r\n      return result;\r\n    }\r\n  ),\r\n\r\n  deleteTransactions: thunk(\r\n    async (actions, ids, { getState, getStoreActions }) => {\r\n      // Get the transactions\r\n      const transactions = getState().items.filter((_) => {\r\n        return ids.includes(_.id);\r\n      });\r\n\r\n      // Delete the transactions from the state\r\n      actions.removeTransactionsFromStateById(transactions.map((_) => _.id));\r\n      const result = await TransactionService.deleteTransactions(\r\n        transactions.map((_) => _.id)\r\n      );\r\n\r\n      // If deletion succeeds, create mass deletion event\r\n      if (result.isSuccess()) {\r\n        getStoreActions().history.pushEvent(\r\n          new DeleteTransactionsEvent(transactions)\r\n        );\r\n      }\r\n\r\n      // If deletion fails, put transaction back\r\n      else if (result.isFailure()) {\r\n        actions.upsertTransactionsToState(transactions);\r\n      }\r\n      return result;\r\n    }\r\n  ),\r\n\r\n  putTransaction: thunk(async (actions, json, store) => {\r\n    const result = await TransactionService.putTransaction(json);\r\n    if (result.isSuccess()) {\r\n      const transaction = new Transaction(result.value);\r\n      actions.upsertTransactionsToState([transaction]);\r\n    }\r\n    return result;\r\n  }),\r\n\r\n  patchTransaction: thunk(async (actions, json, store) => {\r\n    const result = await TransactionService.patchTransaction(json);\r\n    if (result.isSuccess()) {\r\n      const transaction = new Transaction(result.value);\r\n      actions.upsertTransactionsToState([transaction]);\r\n    }\r\n    return result;\r\n  }),\r\n\r\n  //==============================================================//\r\n  // LISTENERS\r\n  //==============================================================//\r\n\r\n  onAuthChanged: thunkOn(\r\n    (_, store) => [store.auth.logout, store.auth.setAuthToState],\r\n    (actions, target) => {\r\n      const [loggedOut, loggedIn] = target.resolvedTargets;\r\n      switch (target.type) {\r\n        case loggedOut:\r\n          actions.clearState();\r\n          break;\r\n        case loggedIn:\r\n          actions.getTransactions();\r\n          break;\r\n      }\r\n    }\r\n  ),\r\n};\r\n","import { Action, action, Computed, computed } from \"easy-peasy\";\r\nimport * as datefns from \"date-fns\";\r\nimport { MINIMUM_DATE, MAXIMUM_DATE } from \"../constants\";\r\nimport { DateUtils } from \"../utils/DateUtils/DateUtils\";\r\n\r\nexport type IntervalModel = {\r\n  //==============================================================//\r\n  // PROPERTIES\r\n  //==============================================================//\r\n\r\n  /**\r\n   * Date filter start limit.\r\n   *\r\n   * All transactions with the same or later date will pass this filter.\r\n   * The time of day is not taken into account while comparing dates.\r\n   *\r\n   * Defaults to start date of current month.\r\n   */\r\n  startDate: Date;\r\n\r\n  /**\r\n   * Date filter end limit.\r\n   *\r\n   * All transactions with the same or earlier date will pass this filter.\r\n   * The time of day is not taken into account while comparing dates.\r\n   *\r\n   * Defaults to end date of current month.\r\n   */\r\n  endDate: Date;\r\n\r\n  //==============================================================//\r\n  // COMPUTED PROPERTIES\r\n  //==============================================================//\r\n\r\n  /**\r\n   * Is the current date interval a signle day\r\n   */\r\n  isDay: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * Is the current date interval a single full week\r\n   */\r\n  isWeek: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * Is the current date interval a single full month\r\n   */\r\n  isMonth: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * Is the current date interval a single full year\r\n   */\r\n  isYear: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * Are all selected (\"infinite interval\")\r\n   */\r\n  isAll: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * Interval length in days\r\n   */\r\n  length: Computed<IntervalModel, number>;\r\n\r\n  /**\r\n   * Does the current period include today\r\n   */\r\n  includesToday: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * Smarter display string that displays in format...\r\n   *\r\n   * - `MMMM, yyyy` (e.g. `July, 1999`) when `isMonth` is `true`\r\n   * - `MMMM, yyyy` (e.g. `July, 1999`) when `isMonth` is `true`\r\n   *\r\n   * Else falls back to `displayString` property and the\r\n   * `d.M. - d.M.yyyy` or `d.M.yyyy - d.M.yyyy` format.\r\n   */\r\n  smartDisplayString: Computed<IntervalModel, string>;\r\n\r\n  /**\r\n   * Display string of format\r\n   *\r\n   * `d.M. - d.M.yyyy` or `d.M.yyyy - d.M.yyyy` if dates\r\n   * are in different years.\r\n   *\r\n   * For example\r\n   * - `1.12. - 7.12.2020`\r\n   * - `30.12.1999 - 5.1.2000`\r\n   */\r\n  displayString: Computed<IntervalModel, string>;\r\n\r\n  //==============================================================//\r\n  // ACTIONS\r\n  //==============================================================//\r\n\r\n  /**\r\n   * Action to manually specify the start date filter\r\n   */\r\n  setStartDate: Action<IntervalModel, Date>;\r\n\r\n  /**\r\n   * Action to manually specify the end date filter\r\n   */\r\n  setEndDate: Action<IntervalModel, Date>;\r\n\r\n  /**\r\n   * Action to manually specify start and end dates for interval simultaneously\r\n   */\r\n  setInterval: Action<IntervalModel, { startDate: Date; endDate: Date }>;\r\n\r\n  /**\r\n   * Move interval forward\r\n   *\r\n   * - If interval is year, select next year\r\n   * - If interval is month, select next month\r\n   * - If interval is week, select next week\r\n   * - If interval is other, select next interval of same length\r\n   *   starting from the end date of the current interval.\r\n   */\r\n  nextInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Move interval backwards\r\n   *\r\n   * - If interval is year, select previous year\r\n   * - If interval is month, select previous month\r\n   * - If interval is week, select previous week\r\n   * - If interval is other, select previous interval of same length\r\n   *   ending at the starting date of the current interval.\r\n   */\r\n  previousInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Move interval to nearest day\r\n   */\r\n  dayInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Move interval to nearest week\r\n   */\r\n  weekInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Move interval to nearest month\r\n   */\r\n  monthInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Move interval to nearest year\r\n   */\r\n  yearInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Select all (infinite interval)\r\n   */\r\n  allInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Return the interval to the current day / week / month / year\r\n   * / custom interval depending on which one it currently is\r\n   */\r\n  now: Action<IntervalModel, void>;\r\n};\r\n\r\nexport const intervalModel: IntervalModel = {\r\n  //==============================================================//\r\n  // PROPERTIES\r\n  //==============================================================//\r\n\r\n  startDate: datefns.startOfMonth(new Date()),\r\n\r\n  endDate: datefns.endOfMonth(new Date()),\r\n\r\n  //==============================================================//\r\n  // COMPUTED PROPERTIES\r\n  //==============================================================//\r\n\r\n  length: computed((state) => {\r\n    return datefns.differenceInDays(state.startDate, state.endDate);\r\n  }),\r\n\r\n  isAll: computed((state) => {\r\n    return (\r\n      DateUtils.compareDate(state.startDate, \"==\", MINIMUM_DATE) &&\r\n      DateUtils.compareDate(state.endDate, \"==\", MAXIMUM_DATE)\r\n    );\r\n  }),\r\n\r\n  isYear: computed((state) => {\r\n    return (\r\n      datefns.isSameYear(state.startDate, state.endDate) &&\r\n      datefns.getDayOfYear(state.startDate) === 1 &&\r\n      datefns.isSameDay(state.endDate, datefns.lastDayOfYear(state.endDate))\r\n    );\r\n  }),\r\n\r\n  isMonth: computed((state) => {\r\n    return (\r\n      datefns.isSameMonth(state.startDate, state.endDate) &&\r\n      datefns.isFirstDayOfMonth(state.startDate) &&\r\n      datefns.isLastDayOfMonth(state.endDate)\r\n    );\r\n  }),\r\n\r\n  isWeek: computed((state) => {\r\n    return (\r\n      datefns.isSameWeek(state.startDate, state.endDate, { weekStartsOn: 1 }) &&\r\n      datefns.getDay(state.startDate) === 1 &&\r\n      datefns.getDay(state.endDate) === 0\r\n    );\r\n  }),\r\n\r\n  isDay: computed((state) => {\r\n    return datefns.isSameDay(state.startDate, state.endDate);\r\n  }),\r\n\r\n  includesToday: computed((state) => {\r\n    const today = new Date();\r\n    return (\r\n      DateUtils.compareDate(today, \">=\", state.startDate) &&\r\n      DateUtils.compareDate(today, \"<=\", state.endDate)\r\n    );\r\n  }),\r\n\r\n  smartDisplayString: computed((state) => {\r\n    if (state.isAll) {\r\n      return \"All\";\r\n    } else if (state.isYear) {\r\n      return datefns.format(state.startDate, \"yyyy\");\r\n    } else if (state.isMonth) {\r\n      return datefns.format(state.startDate, \"MMMM, yyyy\");\r\n    } else if (state.isDay) {\r\n      return datefns.format(state.startDate, \"d.M.yyyy\");\r\n    } else {\r\n      return state.displayString;\r\n    }\r\n  }),\r\n\r\n  displayString: computed((state) => {\r\n    return (\r\n      (datefns.isSameYear(state.startDate, state.endDate)\r\n        ? datefns.format(state.startDate, \"d.M\")\r\n        : datefns.format(state.startDate, \"d.M.yyyy\")) +\r\n      \" - \" +\r\n      datefns.format(state.endDate, \"d.M.yyyy\")\r\n    );\r\n  }),\r\n\r\n  //==============================================================//\r\n  // ACTIONS\r\n  //==============================================================//\r\n\r\n  setStartDate: action((state, date) => {\r\n    if (DateUtils.compareDate(date, \">\", state.endDate)) {\r\n      throw new Error(\"Start date cannot be after end date\");\r\n    } else {\r\n      state.startDate = date;\r\n    }\r\n  }),\r\n\r\n  setEndDate: action((state, date) => {\r\n    if (DateUtils.compareDate(date, \"<\", state.startDate)) {\r\n      throw new Error(\"End date cannot be before start date\");\r\n    } else {\r\n      state.endDate = date;\r\n    }\r\n  }),\r\n\r\n  setInterval: action((state, dates) => {\r\n    if (DateUtils.compareDate(dates.startDate, \">\", dates.endDate)) {\r\n      throw new Error(\"End date cannot be before start date\");\r\n    } else {\r\n      state.startDate = dates.startDate;\r\n      state.endDate = dates.endDate;\r\n    }\r\n  }),\r\n\r\n  nextInterval: action((state) => {\r\n    if (state.isAll) return;\r\n    const newStartDate = datefns.addDays(state.endDate, 1);\r\n    if (state.isYear) {\r\n      state.endDate = datefns.endOfYear(newStartDate);\r\n    } else if (state.isMonth) {\r\n      state.endDate = datefns.endOfMonth(newStartDate);\r\n    } else if (state.isWeek) {\r\n      state.endDate = datefns.endOfWeek(newStartDate, { weekStartsOn: 1 });\r\n    } else {\r\n      state.endDate = datefns.addDays(newStartDate, state.length);\r\n    }\r\n    state.startDate = newStartDate;\r\n  }),\r\n\r\n  previousInterval: action((state) => {\r\n    if (state.isAll) return;\r\n    const newEndDate = datefns.subDays(state.startDate, 1);\r\n    if (state.isYear) {\r\n      state.startDate = datefns.startOfYear(newEndDate);\r\n    } else if (state.isMonth) {\r\n      state.startDate = datefns.startOfMonth(newEndDate);\r\n    } else if (state.isWeek) {\r\n      state.startDate = datefns.startOfWeek(newEndDate, { weekStartsOn: 1 });\r\n    } else {\r\n      state.startDate = datefns.subDays(newEndDate, state.length);\r\n    }\r\n    state.endDate = newEndDate;\r\n  }),\r\n\r\n  dayInterval: action((state) => {\r\n    const date = state.isAll ? new Date() : state.startDate;\r\n    state.startDate = datefns.startOfDay(date);\r\n    state.endDate = datefns.endOfDay(date);\r\n  }),\r\n\r\n  weekInterval: action((state) => {\r\n    const date = state.isAll ? new Date() : state.startDate;\r\n    state.startDate = datefns.startOfWeek(date, { weekStartsOn: 1 });\r\n    state.endDate = datefns.endOfWeek(date, { weekStartsOn: 1 });\r\n  }),\r\n\r\n  monthInterval: action((state) => {\r\n    const date = state.isAll ? new Date() : state.startDate;\r\n    state.startDate = datefns.startOfMonth(date);\r\n    state.endDate = datefns.endOfMonth(date);\r\n  }),\r\n\r\n  yearInterval: action((state) => {\r\n    const date = state.isAll ? new Date() : state.startDate;\r\n    state.startDate = datefns.startOfYear(date);\r\n    state.endDate = datefns.endOfYear(date);\r\n  }),\r\n\r\n  allInterval: action((state) => {\r\n    state.startDate = MINIMUM_DATE;\r\n    state.endDate = MAXIMUM_DATE;\r\n  }),\r\n\r\n  now: action((state) => {\r\n    const today = new Date();\r\n    if (state.isAll) {\r\n      return;\r\n    } else if (state.isYear) {\r\n      state.startDate = datefns.startOfYear(today);\r\n      state.endDate = datefns.endOfYear(today);\r\n    } else if (state.isMonth) {\r\n      state.startDate = datefns.startOfMonth(today);\r\n      state.endDate = datefns.endOfMonth(today);\r\n    } else if (state.isWeek) {\r\n      state.startDate = datefns.startOfWeek(today, { weekStartsOn: 1 });\r\n      state.endDate = datefns.endOfWeek(today, { weekStartsOn: 1 });\r\n    } else if (state.isDay) {\r\n      state.startDate = datefns.startOfDay(today);\r\n      state.endDate = datefns.endOfDay(today);\r\n    } else {\r\n      state.endDate = datefns.endOfDay(datefns.addDays(today, state.length));\r\n      state.startDate = datefns.startOfDay(today);\r\n    }\r\n  }),\r\n};\r\n","import { AlertProps } from \"@material-ui/lab\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nexport type NotificationVariant = \"error\" | \"warning\" | \"success\" | \"info\";\r\n\r\nexport type NotificationOptions = {\r\n  /**\r\n   * Notification ID, will be auto-generated unless provided\r\n   */\r\n  id: string;\r\n\r\n  /**\r\n   * The text to be displayed in the notification.\r\n   */\r\n  message: string;\r\n\r\n  /**\r\n   * The timeout in ms for how long the notification\r\n   * should be displayed. Defaults to three seconds.\r\n   */\r\n  timeout: number;\r\n\r\n  /**\r\n   * Notification severity\r\n   */\r\n  severity: AlertProps[\"severity\"];\r\n\r\n  /**\r\n   * Notification variant\r\n   */\r\n  variant: AlertProps[\"variant\"];\r\n\r\n  /**\r\n   * Notification vertical position, defaults to bottom.\r\n   */\r\n  verticalPosition: \"top\" | \"bottom\";\r\n\r\n  /**\r\n   * Notification horizontal position, defaults to center.\r\n   */\r\n  horizontalPosition: \"center\" | \"left\" | \"right\";\r\n\r\n  /**\r\n   * Action for creating an action button\r\n   */\r\n  action: null | {\r\n    buttonType?: \"button\" | \"iconButton\";\r\n    label?: string;\r\n    iconButtonIcon?: string;\r\n    startIcon?: string;\r\n    endIcon?: string;\r\n    onClick(): void;\r\n  };\r\n};\r\n\r\nexport class Notification implements NotificationOptions {\r\n  id: NotificationOptions[\"id\"];\r\n  action: NotificationOptions[\"action\"];\r\n  message: NotificationOptions[\"message\"];\r\n  timeout: NotificationOptions[\"timeout\"];\r\n  variant: NotificationOptions[\"variant\"];\r\n  severity: NotificationOptions[\"severity\"];\r\n  verticalPosition: NotificationOptions[\"verticalPosition\"];\r\n  horizontalPosition: NotificationOptions[\"horizontalPosition\"];\r\n\r\n  constructor(options: Partial<NotificationOptions>) {\r\n    this.id = options.id ?? uuid();\r\n    this.action = options.action ?? null;\r\n    this.message = options.message ?? \"\";\r\n    this.timeout = options.timeout || 3000;\r\n    this.variant = options.variant ?? \"filled\";\r\n    this.severity = options.severity ?? \"info\";\r\n    this.verticalPosition = options.verticalPosition ?? \"bottom\";\r\n    this.horizontalPosition = options.horizontalPosition ?? \"center\";\r\n  }\r\n}\r\n","import { action, Action } from \"easy-peasy\";\r\nimport { Notification, NotificationOptions } from \"../classes/Notification\";\r\n\r\nexport type NotificationModel = {\r\n  //==============================================================//\r\n  // PROPERTIES\r\n  //==============================================================//\r\n\r\n  /**\r\n   * All notifications in state\r\n   */\r\n  notifications: Notification[];\r\n\r\n  //==============================================================//\r\n  // ACTIONS\r\n  //==============================================================//\r\n\r\n  /**\r\n   * Create a new notification and add it to the state\r\n   */\r\n  notify: Action<NotificationModel, Partial<NotificationOptions>>;\r\n\r\n  /**\r\n   * Delete a notification from the state\r\n   */\r\n  deleteNotification: Action<NotificationModel, string>;\r\n};\r\n\r\nexport const notificationModel: NotificationModel = {\r\n  //==============================================================//\r\n  // PROPERTIES\r\n  //==============================================================//\r\n\r\n  notifications: [],\r\n\r\n  //==============================================================//\r\n  // ACTIONS\r\n  //==============================================================//\r\n\r\n  notify: action((state, options) => {\r\n    const notification = new Notification(options);\r\n    state.notifications.push(notification);\r\n  }),\r\n\r\n  deleteNotification: action((state, id) => {\r\n    state.notifications = state.notifications.filter((_) => _.id !== id);\r\n  }),\r\n};\r\n","import { action, Action, computed, Computed } from \"easy-peasy\";\r\nimport { Transaction } from \"../classes/Transaction\";\r\nimport { StoreModel } from \"../store\";\r\n\r\nexport type SelectionModel = {\r\n  //==============================================================//\r\n  // PROPERTIES\r\n  //==============================================================//\r\n\r\n  /**\r\n   * IDs of all selected transactions\r\n   */\r\n  selectionIds: string[];\r\n\r\n  /**\r\n   * First selection id\r\n   */\r\n  firstSelectionId: undefined | string;\r\n\r\n  //==============================================================//\r\n  // COMPUTED PROPERTIES\r\n  //==============================================================//\r\n\r\n  /**\r\n   * All selected transactions\r\n   */\r\n  selection: Computed<SelectionModel, Transaction[], StoreModel>;\r\n\r\n  /**\r\n   * Is a selection active?\r\n   */\r\n  selectionActive: Computed<SelectionModel, boolean>;\r\n\r\n  /**\r\n   * How many items are selected\r\n   */\r\n  selectionLength: Computed<SelectionModel, number>;\r\n\r\n  //==============================================================//\r\n  // ACTIONS\r\n  //==============================================================//\r\n\r\n  /**\r\n   * Select by ID\r\n   */\r\n  select: Action<SelectionModel, string>;\r\n\r\n  /**\r\n   * Deselect by ID\r\n   */\r\n  deselect: Action<SelectionModel, string>;\r\n\r\n  /**\r\n   * Select all by list of IDs\r\n   */\r\n  selectAll: Action<SelectionModel, string[]>;\r\n\r\n  /**\r\n   * Deselect all in state\r\n   */\r\n  deselectAll: Action<SelectionModel, void>;\r\n};\r\n\r\nexport const selectionModel: SelectionModel = {\r\n  //==============================================================//\r\n  // PROPERTIES\r\n  //==============================================================//\r\n\r\n  selectionIds: [],\r\n  firstSelectionId: undefined,\r\n\r\n  //==============================================================//\r\n  // COMPUTED PROPERTIES\r\n  //==============================================================//\r\n\r\n  selection: computed(\r\n    [\r\n      (selectionState, storeState) => storeState.transactions.items,\r\n      (selectionState, storeState) => selectionState.selectionIds,\r\n    ],\r\n    (transactions, selectionIds) => {\r\n      const selectedTransactions: Transaction[] = [];\r\n      selectionIds.forEach((id) => {\r\n        const transaction = transactions.find((_) => _.id === id);\r\n        if (transaction) {\r\n          selectedTransactions.push(transaction);\r\n        }\r\n      });\r\n      return selectedTransactions;\r\n    }\r\n  ),\r\n\r\n  selectionActive: computed((state) => state.selection.length > 0),\r\n\r\n  selectionLength: computed((state) => state.selection.length),\r\n\r\n  //==============================================================//\r\n  // ACTIONS\r\n  //==============================================================//\r\n\r\n  select: action((state, id) => {\r\n    state.selectionIds.push(id);\r\n  }),\r\n\r\n  deselect: action((state, id) => {\r\n    state.selectionIds = state.selectionIds.filter((_) => _ !== id);\r\n  }),\r\n\r\n  selectAll: action((state, ids) => {\r\n    // Maintain relative orders between IDs from previous state and append\r\n    // new IDs to end\r\n    state.selectionIds = ids.sort((a, b) => {\r\n      const _aidx = state.selectionIds.indexOf(a);\r\n      const _bidx = state.selectionIds.indexOf(b);\r\n      const aidx = _aidx < 0 ? Infinity : _aidx;\r\n      const bidx = _bidx < 0 ? Infinity : _bidx;\r\n      return aidx - bidx;\r\n    });\r\n  }),\r\n\r\n  deselectAll: action((state) => {\r\n    state.selectionIds = [];\r\n  }),\r\n};\r\n","import { createStore, createTypedHooks } from \"easy-peasy\";\r\nimport { AuthModel, authModel } from \"./models/auth.model\";\r\nimport {\r\n  TransactionsModel,\r\n  transactionsModel,\r\n} from \"./models/transactions.model\";\r\nimport { intervalModel, IntervalModel } from \"./models/interval.model\";\r\nimport {\r\n  notificationModel,\r\n  NotificationModel,\r\n} from \"./models/notification.model\";\r\nimport { selectionModel, SelectionModel } from \"./models/selection.model\";\r\nimport { historyModel, HistoryModel } from \"./models/history.model\";\r\n\r\nexport interface StoreModel {\r\n  notification: NotificationModel;\r\n  transactions: TransactionsModel;\r\n  selection: SelectionModel;\r\n  interval: IntervalModel;\r\n  history: HistoryModel;\r\n  auth: AuthModel;\r\n}\r\n\r\nconst storeModel: StoreModel = {\r\n  notification: notificationModel,\r\n  transactions: transactionsModel,\r\n  selection: selectionModel,\r\n  interval: intervalModel,\r\n  history: historyModel,\r\n  auth: authModel,\r\n};\r\n\r\nexport const store = createStore(storeModel);\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).store = store;\r\n}\r\n\r\nexport const typedHooks = createTypedHooks<StoreModel>();\r\n\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;\r\nexport const useStore = typedHooks.useStore;\r\n","import { action, Action, Computed, computed, thunk, Thunk } from \"easy-peasy\";\r\nimport { HistoryEvent } from \"../history/HistoryEvent\";\r\nimport { EventNotFoundFailure } from \"../result/HistoryFailures\";\r\n\r\nexport type HistoryModel = {\r\n  //==============================================================//\r\n  // PROPERTIES\r\n  //==============================================================//\r\n\r\n  maxSize: number;\r\n\r\n  history: HistoryEvent<any>[];\r\n\r\n  //==============================================================//\r\n  // COMPUTED PROPERTIES\r\n  //==============================================================//\r\n\r\n  latest: Computed<HistoryModel, HistoryEvent<any> | undefined>;\r\n\r\n  //==============================================================//\r\n  // ACTIONS\r\n  //==============================================================//\r\n\r\n  pushEvent: Action<HistoryModel, HistoryEvent<any>>;\r\n\r\n  removeEvent: Action<HistoryModel, string>;\r\n\r\n  //==============================================================//\r\n  // THUNKS\r\n  //==============================================================//\r\n\r\n  restoreEvent: Thunk<HistoryModel, string>;\r\n};\r\n\r\nexport const historyModel: HistoryModel = {\r\n  //==============================================================//\r\n  // PROPERTIES\r\n  //==============================================================//\r\n\r\n  maxSize: 100,\r\n  history: [],\r\n\r\n  //==============================================================//\r\n  // COMPUTED PROPERTIES\r\n  //==============================================================//\r\n\r\n  latest: computed((state) => {\r\n    if (state.history.length === 0) {\r\n      return undefined;\r\n    } else {\r\n      return state.history[state.history.length - 1];\r\n    }\r\n  }),\r\n\r\n  //==============================================================//\r\n  // ACTIONS\r\n  //==============================================================//\r\n\r\n  pushEvent: action((state, event) => {\r\n    if (state.history.length === state.maxSize) {\r\n      state.history.shift();\r\n    }\r\n    state.history.push(event);\r\n  }),\r\n\r\n  removeEvent: action((state, eventId) => {\r\n    state.history = state.history.filter((_) => _.id !== eventId);\r\n  }),\r\n\r\n  //==============================================================//\r\n  // THUNKS\r\n  //==============================================================//\r\n\r\n  restoreEvent: thunk((actions, eventId, { getState }) => {\r\n    const history = getState().history;\r\n    const event = history.find((_) => _.id === eventId);\r\n    if (event) {\r\n      const result = event.restore();\r\n      actions.removeEvent(event.id);\r\n      return result;\r\n    } else {\r\n      return new EventNotFoundFailure();\r\n    }\r\n  }),\r\n};\r\n","import { IResult } from \"./Result\";\r\nimport { Success } from \"./Success\";\r\n\r\nexport class Failure<T, R = string> implements IResult<T, R> {\r\n  public readonly resultType: \"failure\" = \"failure\";\r\n  public readonly reason: R;\r\n\r\n  constructor(reason: R) {\r\n    this.reason = reason;\r\n  }\r\n\r\n  public getOr(fallback: T): T {\r\n    return fallback;\r\n  }\r\n\r\n  public isSuccess(): this is Success<T, R> {\r\n    return false;\r\n  }\r\n\r\n  public isFailure(): this is Failure<T, R> {\r\n    return true;\r\n  }\r\n\r\n  static All<T>(results: IResult<T>[]) {\r\n    const all: Failure<T, string>[] = [];\r\n    results.forEach((result) => {\r\n      if (result.isFailure()) {\r\n        all.push(result);\r\n      }\r\n    });\r\n    return all;\r\n  }\r\n}\r\n","type ObjectIndexable = string | number | symbol;\r\n\r\ntype ComparisonFunction<T> = (a: T, b: T) => boolean;\r\n\r\nexport class DataUtils {\r\n  /**\r\n   * Returns a copy of the array with only unique values w.r.t. the\r\n   * comparison function.\r\n   *\r\n   * Example:\r\n   *\r\n   * ```\r\n   * unique([1,2,2,3]) === [1,2,3]\r\n   * ```\r\n   *\r\n   * ```\r\n   * unique([\"a\", \"b\", \"aa\", \"bbb\"], (a, b) => a.length === b.length)\r\n   * === [\"a\", \"aa\", \"bbb\"]\r\n   * ```\r\n   *\r\n   * @param array\t\tInput array\r\n   * @param compare Comparison function to determine uniqueness.\r\n   * \t\t\t\t\t\t\t\tIf given two values the function returns `true`,\r\n   * \t\t\t\t\t\t\t\tthe two values are considered equal and thus one is\r\n   * \t\t\t\t\t\t\t\tremoved. By default uses the `===` comparison to\r\n   * \t\t\t\t\t\t\t\tdetermine equality.\r\n   */\r\n  static unique<T>(\r\n    array: Array<T>,\r\n    compare: ComparisonFunction<T> = (a, b) => a === b\r\n  ) {\r\n    return array.filter(\r\n      (a, i, arr) => i === arr.findIndex((b) => compare(a, b))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Compares the two arrays and whether they contain the same elements\r\n   * (order does not matter, element similarity is determined by the\r\n   * comparison function.)\r\n   *\r\n   * Example:\r\n   *\r\n   * ```\r\n   * compareArrays([1,2], [2,1]) === true\r\n   *\r\n   * compareArrays([1,2,3],[1,2]) === false\r\n   *\r\n   * compareArrays([1,3], [1,2]) === false\r\n   *\r\n   * compareArrays(\r\n   *   [\"ab\", \"ac\"], [\"bb\", \"bc\"],\r\n   *   (a, b) => a.charAt(1) === b.charAt(1)\r\n   * ) === true\r\n   *\r\n   * compareArrays(\r\n   *   [\"ab\", \"ac\"], [\"bb\", \"bc\"],\r\n   *   (a, b) => a.charAt(0) === b.charAt(0)\r\n   * ) === false\r\n   * ```\r\n   *\r\n   * @param a\r\n   * @param b\r\n   */\r\n  static compareArrays<T>(\r\n    a: Array<T>,\r\n    b: Array<T>,\r\n    compare: ComparisonFunction<T> = (a, b) => a === b\r\n  ) {\r\n    if (a.length === 0 && b.length === 0) return true;\r\n    if (a.length !== b.length) return false;\r\n\r\n    return a.every((item) => {\r\n      const na = a.filter((_) => compare(_, item)).length;\r\n      const nb = b.filter((_) => compare(_, item)).length;\r\n      return na === nb;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Takes in two objects with arrays under the keys and merges the arrays\r\n   * per key.\r\n   *\r\n   * Example:\r\n   *\r\n   * ```\r\n   * mergeArrayObjects(\r\n   *   { a: [1, 2], b: [1] },\r\n   *   { a: [3, 4], c: [2] }\r\n   * ) === { a: [1, 2, 3, 4], b: [1], c: [2] }\r\n   * ```\r\n   */\r\n  static mergeArrayObjects<A, B>(\r\n    a: Partial<Record<ObjectIndexable, Array<A>>>,\r\n    b: Partial<Record<ObjectIndexable, Array<B>>>\r\n  ) {\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n\r\n    const keys = DataUtils.unique([...aKeys, ...bKeys]);\r\n\r\n    return keys.reduce((object, key) => {\r\n      return { ...object, [key]: [...(a[key] ?? []), ...(b[key] ?? [])] };\r\n    }, {} as Record<ObjectIndexable, Array<A | B>>);\r\n  }\r\n\r\n  /**\r\n   * Searches text\r\n   */\r\n  static textSearch(search: string, ...match: string[]) {\r\n    const searchTerm = search.toLowerCase();\r\n    return match.some((matchable) => {\r\n      return matchable.toLowerCase().includes(searchTerm);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Chunkifies an array to a two-dimensional array\r\n   */\r\n  static chunkify<T>(array: T[], chunkSize: number): Array<T[]> {\r\n    const chunks: Array<T[]> = [];\r\n\r\n    array.forEach((item) => {\r\n      const lastChunk = chunks[chunks.length - 1];\r\n\r\n      if (!lastChunk || lastChunk.length === chunkSize) {\r\n        chunks.push([item]);\r\n      } else {\r\n        lastChunk.push(item);\r\n      }\r\n    });\r\n\r\n    return chunks;\r\n  }\r\n\r\n  /**\r\n   * Creates an index array of `n` items.\r\n   *\r\n   * @params n Amount of items in the created index array\r\n   *\r\n   * @example\r\n   * createIndexArray(3) // returns [0,1,2]\r\n   */\r\n  static createIndexArray(n: number) {\r\n    let arr: number[] = [];\r\n    for (let i = 0; i < n; i++) {\r\n      arr.push(i);\r\n    }\r\n    return arr;\r\n  }\r\n}\r\n","export class MoneyAmount {\r\n  /**\r\n   * Value of money amount as integer in cents\r\n   */\r\n  private _value: number;\r\n\r\n  /**\r\n   * Construct a money amount from an integer value in cents.\r\n   *\r\n   * @throws Error if input value is not an integer.\r\n   */\r\n  constructor(cents: number) {\r\n    this._value = Math.trunc(cents);\r\n  }\r\n\r\n  /**\r\n   * The money amount's value as an integer in cents.\r\n   */\r\n  get value(): number {\r\n    return this._value;\r\n  }\r\n\r\n  /**\r\n   * The money amount's value in euros.\r\n   */\r\n  get decimalValue(): number {\r\n    return this._value / 100;\r\n  }\r\n\r\n  /**\r\n   * Get the value in euros as an integer\r\n   */\r\n  get euros() {\r\n    return Math.trunc(this._value / 100);\r\n  }\r\n\r\n  /**\r\n   * Get the amount of cents in value\r\n   *\r\n   * Returns the remainder when converting the value to euros,\r\n   * i.e. a value between 0 - 99, not the full value counted in cents.\r\n   */\r\n  get cents() {\r\n    return Math.floor(Math.abs(this._value) % 100);\r\n  }\r\n\r\n  /**\r\n   * Gets the sign of the money amount\r\n   *\r\n   * - Returns -1 for negative money amounts\r\n   * - Returns 0 for zero amounts\r\n   * - Returns +1 for positive money amounts\r\n   */\r\n  get sign(): -1 | 0 | 1 {\r\n    return this._value === 0 ? 0 : this._value > 0 ? 1 : -1;\r\n  }\r\n\r\n  /**\r\n   * True if the amount is a positive amount (> 0)\r\n   */\r\n  get isPositive() {\r\n    return this._value > 0;\r\n  }\r\n\r\n  /**\r\n   * True if the amount is a positive amount or zero (>= 0)\r\n   */\r\n  get isNonNegative() {\r\n    return this._value >= 0;\r\n  }\r\n\r\n  /**\r\n   * True if the amount is zero (== 0)\r\n   */\r\n  get isZero() {\r\n    return this._value === 0;\r\n  }\r\n\r\n  /**\r\n   * True if the amount is a negative amount or zero (<= 0)\r\n   */\r\n  get isNonPositive() {\r\n    return this._value <= 0;\r\n  }\r\n\r\n  /**\r\n   * True if the amount is a negative amount (< 0)\r\n   */\r\n  get isNegative() {\r\n    return this._value < 0;\r\n  }\r\n\r\n  /**\r\n   * Format the money amount to a string according to the given options\r\n   */\r\n  format(): string {\r\n    return MoneyAmount.format(this.value);\r\n  }\r\n\r\n  /**\r\n   * Static method for formatting a value\r\n   */\r\n  static format(value: number) {\r\n    const sign = value < 0 ? \"-\" : \"\";\r\n    const [euros, cents] = Math.abs(value / 100)\r\n      .toFixed(2)\r\n      .split(/[.,]/g);\r\n\r\n    const eurStr = Array.from(euros)\r\n      .map((c, i, a) => {\r\n        const j = a.length - i - 1;\r\n        return j > 0 && j % 3 === 0 ? c + \" \" : c;\r\n      })\r\n      .join(\"\");\r\n\r\n    return `${sign}${eurStr},${cents} €`;\r\n  }\r\n\r\n  /**\r\n   * Static metnod for formatting large values (12 345,67 € -> 12 k)\r\n   */\r\n  static largeFormat(value: number) {\r\n    let sign = value < 0 ? \"-\" : \"\";\r\n    let scale = 1000;\r\n    let unit = \"k\";\r\n    const absvalue = Math.abs(value);\r\n    if (absvalue > 100 * 1000 * 1000) {\r\n      scale = 1000 * 1000;\r\n      unit = \"M\";\r\n    } else if (absvalue > 100 * 1000 * 1000 * 1000) {\r\n      scale = 1000 * 1000 * 1000;\r\n      unit = \"B\";\r\n    }\r\n    let scaledAmount = Math.floor(absvalue / (100 * scale));\r\n    return `${sign}${scaledAmount} ${unit}`;\r\n  }\r\n\r\n  /**\r\n   * Method to add two MoneyAmounts together to produce their sum\r\n   * as a new MoneyAmount\r\n   */\r\n  add(that: MoneyAmount) {\r\n    return new MoneyAmount(this._value + that._value);\r\n  }\r\n\r\n  /**\r\n   * Method to subtract a MoneyAmount from another to produce their\r\n   * difference as a new MoneyAmount\r\n   */\r\n  subtract(that: MoneyAmount) {\r\n    return new MoneyAmount(this._value - that._value);\r\n  }\r\n\r\n  /**\r\n   * Method to directly change the value of this instance\r\n   */\r\n  changeInternalValue() {\r\n    return {\r\n      add: (amount: number) => {\r\n        if (Math.trunc(amount) !== amount) {\r\n          throw new Error(\"Cannot change money amount by non-integer value\");\r\n        }\r\n        this._value += amount;\r\n      },\r\n      subtract: (amount: number) => {\r\n        if (Math.trunc(amount) !== amount) {\r\n          throw new Error(\"Cannot change money amount by non-integer value\");\r\n        }\r\n        this._value -= amount;\r\n      },\r\n      multiply: (amount: number) => {\r\n        if (Math.trunc(amount) !== amount) {\r\n          throw new Error(\"Cannot change money amount by non-integer value\");\r\n        }\r\n        this._value *= amount;\r\n      },\r\n      set: (amount: number) => {\r\n        if (Math.trunc(amount) !== amount) {\r\n          throw new Error(\"Cannot change money amount by non-integer value\");\r\n        }\r\n        this._value = amount;\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Static method to sum together multiple money amounts\r\n   */\r\n  static sum(values: MoneyAmount[]) {\r\n    return values.reduce((sum, value) => sum.add(value), new MoneyAmount(0));\r\n  }\r\n}\r\n","import { useEffect, useMemo } from \"react\"\r\nimport { useQueryState } from \"../../hooks/state/useQueryState\"\r\nimport { useStoreState } from \"../../store\"\r\nimport { TransactionEditorDrawerProps } from \"./TransactionEditorDrawer\"\r\n\r\n\r\nexport const TransactionEditorDrawerOpenHash = `edit`\r\n\r\nexport function useTransactionEditorDrawerVariableOpenState() {\r\n\treturn useQueryState<null | string>({\r\n\t\tkey: TransactionEditorDrawerOpenHash,\r\n\t\tmethod: \"push\",\r\n\t\tdecode(encodedId) {\r\n\t\t\treturn !!encodedId && typeof encodedId === \"string\" ? encodedId : null\r\n\t\t},\r\n\t\tencode(id) {\r\n\t\t\treturn id ?? undefined\r\n\t\t}\r\n\t})\r\n}\r\n\r\nexport function useTransactionEditorDrawerController(props: TransactionEditorDrawerProps) {\r\n\r\n\tconst [value, setValue] = useTransactionEditorDrawerVariableOpenState()\r\n\r\n\tconst items = useStoreState(_ => _.transactions.items)\r\n\r\n\t/**\r\n\t * Find the item which the state corresponds to\r\n\t */\r\n\tconst selectedItem = useMemo(() => {\r\n\t\treturn items.find(_ => _.id === value)\r\n\t}, [items, value])\r\n\r\n\t/**\r\n\t * Automatically close the state if the state corresponds to an item\r\n\t * which does not exist.\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tif (value && !selectedItem) {\r\n\t\t\tsetValue(null)\r\n\t\t}\r\n\t}, [selectedItem, value, setValue])\r\n\r\n\treturn {\r\n\t\tselectedItem,\r\n\t\tonOpen: (id: string) => setValue(id),\r\n\t\tonClose: () => setValue(null),\r\n\t}\r\n}","import { useBooleanQueryState } from \"../../hooks/state/useBooleanQueryState\"\r\nimport { TransactionCreatorDrawerProps } from \"./TransactionCreatorDrawer\"\r\n\r\nexport const TransactionCreatorDrawerOpenQuery = \"create\"\r\n\r\nexport function useTransactionCreatorDrawerOpenState() {\r\n\treturn useBooleanQueryState(TransactionCreatorDrawerOpenQuery, \"push\", \"open\")\r\n}\r\n\r\nexport function useTransactionCreatorDrawerController(props: TransactionCreatorDrawerProps) {\r\n\r\n\tconst [open, setOpen] = useTransactionCreatorDrawerOpenState()\r\n\r\n\treturn {\r\n\t\topen,\r\n\t\tonOpen: () => setOpen(true),\r\n\t\tonClose: () => setOpen(false),\r\n\t}\r\n}","import { JsonTransaction } from \"./Transaction\";\r\n\r\n/**\r\n * Defines a category object\r\n */\r\nexport class Category {\r\n  /**\r\n   * Category ID\r\n   */\r\n  public id: string;\r\n\r\n  /**\r\n   * Category value or name\r\n   */\r\n  public value: string;\r\n\r\n  /**\r\n   * Category icon\r\n   */\r\n  public icon: string;\r\n\r\n  constructor(json: JsonTransaction[\"category\"]) {\r\n    this.id = json.id;\r\n    this.value = json.value;\r\n    this.icon = json.icon;\r\n  }\r\n\r\n  /**\r\n   * Alias value as name\r\n   */\r\n  public get name() {\r\n    return this.value;\r\n  }\r\n}\r\n","import * as uuid from \"uuid\";\r\nimport { MoneyAmount } from \"./MoneyAmount\";\r\nimport { array, object, string, number, ObjectSchema } from \"yup\";\r\nimport { DateUtils } from \"../utils/DateUtils/DateUtils\";\r\nimport { Category } from \"./Category\";\r\nimport { DataUtils } from \"../utils/DataUtils/DataUtils\";\r\nimport { lightFormat } from \"date-fns\";\r\n\r\n/**\r\n * The (JSON) object format for a transaction.\r\n */\r\nexport type JsonTransaction = {\r\n  /** The transaction's ID */\r\n  id: string;\r\n  /** The transaction's timestamp */\r\n  time: number;\r\n  /** The transaction's size */\r\n  integerAmount: number;\r\n  /** The transaction's comment */\r\n  comment?: string | undefined;\r\n  /** The transaction's category and metadata */\r\n  category: {\r\n    /** Category ID */\r\n    id: string;\r\n    /** Category's name */\r\n    value: string;\r\n    /** Category's icon */\r\n    icon: string;\r\n  };\r\n};\r\n\r\n/**\r\n * The (JSON) object format for an object to send to the server\r\n * for creating or updating a transaction. Leaves the category data\r\n * out, lets the server handle the categories.\r\n */\r\nexport type JsonTransactionInitializer = Omit<JsonTransaction, \"category\"> & {\r\n  /** Category's value / name */\r\n  category: string;\r\n  /** Category's icon */\r\n  categoryIcon?: string;\r\n};\r\n\r\n/**\r\n * The (JSON) object format of a compressed dataset sent to the user\r\n * by the server.\r\n */\r\nexport type CompressedTransactionsJson = {\r\n  /** Transactions as compressed objects */\r\n  t: {\r\n    /** ID */\r\n    id: string;\r\n    /** Time */\r\n    t: number;\r\n    /** Category ID (refers to a category in `c`) */\r\n    cid: string;\r\n    /** Integer amount */\r\n    a: number;\r\n    /** Comment */\r\n    c?: string | undefined;\r\n  }[];\r\n  /** Categories as compressed objects */\r\n  c: {\r\n    /** ID */\r\n    id: string;\r\n    /** Value (name) */\r\n    v: string;\r\n    /** Icon */\r\n    i: string;\r\n  }[];\r\n};\r\n\r\nexport class Transaction {\r\n  /**\r\n   * Transaction ID\r\n   */\r\n  public readonly id: string;\r\n\r\n  /**\r\n   * Transaction date and time\r\n   */\r\n  public readonly date: Date;\r\n\r\n  /**\r\n   * Transaction comment\r\n   */\r\n  public readonly comment: string;\r\n\r\n  /**\r\n   * Transaction amount\r\n   */\r\n  public readonly amount: MoneyAmount;\r\n\r\n  /**\r\n   * Transaction category\r\n   */\r\n  public readonly category: Category;\r\n\r\n  /**\r\n   * Create transaction from a JSON transaction.\r\n   *\r\n   * @param json Crea\r\n   */\r\n  constructor(json: JsonTransaction) {\r\n    // Timestamp to date\r\n    this.date = new Date(json.time);\r\n\r\n    // Create category object as category\r\n    this.category = new Category(json.category);\r\n\r\n    // Ensure json comment string, default to empty string\r\n    this.comment = json.comment || \"\";\r\n\r\n    // Create MoneyAmount object from integerAmount, ensure integer\r\n    this.amount = new MoneyAmount(Math.floor(json.integerAmount));\r\n\r\n    // Use ID (if none exists, create new UUID)\r\n    this.id = json.id || uuid.v4();\r\n  }\r\n\r\n  /**\r\n   * Is the transaction upcoming, i.e. is its date in the future?\r\n   */\r\n  get isUpcoming() {\r\n    return DateUtils.compareDate(this.date, \">\", today);\r\n  }\r\n\r\n  /**\r\n   * Transaction icon: use category icon if one exists, else default to\r\n   * using default icons based on amount sign\r\n   */\r\n  get icon() {\r\n    if (this.category.icon) {\r\n      return this.category.icon.substr(0, 2);\r\n    } else {\r\n      return this.amount.isPositive ? \"💰\" : \"💸\";\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Filters the transaction based on the given conditions\r\n   */\r\n  filter(searchTerm: string, startDate: Date, endDate: Date) {\r\n    if (DateUtils.compareDate(this.date, \"<\", startDate)) {\r\n      return false;\r\n    }\r\n\r\n    if (DateUtils.compareDate(this.date, \">\", endDate)) {\r\n      return false;\r\n    }\r\n\r\n    if (\r\n      searchTerm &&\r\n      !DataUtils.textSearch(\r\n        searchTerm,\r\n        ...[\r\n          this.amount.format(),\r\n          this.category.value,\r\n          this.comment,\r\n          lightFormat(this.date, \"d.M.yyyy\"),\r\n        ]\r\n      )\r\n    ) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Schema for validating that objects match the JsonTransaction format.\r\n   */\r\n  static JsonSchema: ObjectSchema<JsonTransaction> = object({\r\n    id: string().required(),\r\n    time: number().positive().integer().required(),\r\n    integerAmount: number().integer().required(),\r\n    comment: string(),\r\n    category: object({\r\n      id: string().required(),\r\n      value: string().required(),\r\n      icon: string().defined(),\r\n    }).required(),\r\n  }).required();\r\n\r\n  /**\r\n   * Schema for validating that objects match the JsonTransactionInitializer\r\n   * format.\r\n   */\r\n  static InitializerJsonSchema: ObjectSchema<JsonTransactionInitializer> = object(\r\n    {\r\n      id: string().required(),\r\n      time: number().positive().integer().required(),\r\n      category: string().required(),\r\n      integerAmount: number().integer().required(),\r\n      comment: string(),\r\n    }\r\n  ).required();\r\n\r\n  /**\r\n   * Schema for validating that objects match the\r\n   * CompressedTransactionsDataJson format.\r\n   */\r\n  static CompressedJsonSchema: ObjectSchema<CompressedTransactionsJson> = object(\r\n    {\r\n      t: array()\r\n        .of(\r\n          object({\r\n            id: string().required(),\r\n            t: number().positive().integer().required(),\r\n            cid: string().required(),\r\n            a: number().integer().required(),\r\n            c: string(),\r\n          }).required()\r\n        )\r\n        .required(),\r\n      c: array()\r\n        .of(\r\n          object({\r\n            id: string().required(),\r\n            v: string().required(),\r\n            i: string().defined(),\r\n          }).required()\r\n        )\r\n        .required(),\r\n    }\r\n  ).required();\r\n\r\n  /**\r\n   * Validates the value as a JsonTransaction\r\n   */\r\n  static isJson(arg: any): arg is JsonTransaction {\r\n    try {\r\n      Transaction.JsonSchema.validateSync(arg);\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validates the value as a JsonTransactionInitializer\r\n   */\r\n  static isInitializerJson(arg: any): arg is JsonTransactionInitializer {\r\n    try {\r\n      Transaction.InitializerJsonSchema.validateSync(arg);\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validiates the value as a CompressedJsonTransaction\r\n   */\r\n  static isCompressedJson(arg: any): arg is CompressedTransactionsJson {\r\n    try {\r\n      Transaction.CompressedJsonSchema.validateSync(arg);\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validiates the value as an array of JsonTransactions\r\n   */\r\n  static isJsonArray(arg: any): arg is JsonTransaction[] {\r\n    return Array.isArray(arg) && arg.every(Transaction.isJson);\r\n  }\r\n\r\n  /**\r\n   * Validiates the value as an array of JsonTransactionInitializers\r\n   */\r\n  static isInitializerJsonArray(arg: any): arg is JsonTransactionInitializer[] {\r\n    return Array.isArray(arg) && arg.every(Transaction.isInitializerJson);\r\n  }\r\n\r\n  /**\r\n   * Convert Transaction to JsonTransaction\r\n   */\r\n  toJson(): JsonTransaction {\r\n    return {\r\n      time: this.date.getTime(),\r\n      comment: this.comment,\r\n      integerAmount: this.amount.value,\r\n      id: this.id,\r\n      category: {\r\n        id: this.category.id,\r\n        value: this.category.value,\r\n        icon: this.category.icon,\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Convert Transaction to JsonTransactionInitializer\r\n   */\r\n  toJsonInitializer(): JsonTransactionInitializer {\r\n    return {\r\n      time: this.date.getTime(),\r\n      category: this.category.value,\r\n      comment: this.comment,\r\n      integerAmount: this.amount.value,\r\n      id: this.id,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Parse compressed data to a list of transactions. Transactions with\r\n   * invalid category ids will use an error category.\r\n   *\r\n   * @param data Compressed Transactions Data Json\r\n   */\r\n  static parseCompressedData(data: CompressedTransactionsJson): Transaction[] {\r\n    return data.t.map((transaction) => {\r\n      // Find category or use default value for invalid categories\r\n      const category = data.c.find((c) => c.id === transaction.cid) ?? {\r\n        id: \"category_not_found\",\r\n        v: \"Category not found\",\r\n        i: \"\",\r\n      };\r\n      return new Transaction({\r\n        id: transaction.id,\r\n        integerAmount: transaction.a,\r\n        comment: transaction.c,\r\n        time: transaction.t,\r\n        category: {\r\n          id: category.id,\r\n          value: category.v,\r\n          icon: category.i,\r\n        },\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Comparison function for sorting transactions\r\n   */\r\n  static compare(\r\n    a: Transaction,\r\n    b: Transaction,\r\n    strategy: TransactionSortStrategy\r\n  ) {\r\n    switch (strategy) {\r\n      case \"amount-ascending\":\r\n        return a.amount.value - b.amount.value;\r\n      case \"amount-descending\":\r\n        return b.amount.value - a.amount.value;\r\n      case \"category-ascending\":\r\n        return a.category.value.localeCompare(b.category.value);\r\n      case \"category-descending\":\r\n        return b.category.value.localeCompare(a.category.value);\r\n      case \"comment-ascending\":\r\n        return a.comment.localeCompare(b.comment);\r\n      case \"comment-descending\":\r\n        return b.comment.localeCompare(a.comment);\r\n      case \"date-ascending\":\r\n        return a.date.getTime() - b.date.getTime();\r\n      case \"date-descending\":\r\n        return b.date.getTime() - a.date.getTime();\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n}\r\n\r\n// Get today's date for comparison in order to avoid creating\r\n// too many Date objects\r\nconst today = new Date();\r\n","import \"./Notification.scss\";\r\nimport React, { useMemo, useState } from \"react\"\r\nimport { Notification } from \"../../classes/Notification\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { Button, Grow, Icon, IconButton, Snackbar } from \"@material-ui/core\";\r\nimport { TransitionProps } from \"@material-ui/core/transitions\";\r\n\r\nexport type NotificationViewProps = {\r\n\tnotification: Notification;\r\n\tonClose(): void;\r\n}\r\n\r\nfunction GrowTransition(props: TransitionProps) {\r\n\treturn <Grow {...props} />;\r\n}\r\n\r\nexport function NotificationView(props: NotificationViewProps) {\r\n\r\n\tconst [open, setOpen] = useState(true)\r\n\r\n\tconst action = useMemo(() => props.notification.action, [props])\r\n\r\n\tconst actionElement = action ?\r\n\t\taction.buttonType === \"iconButton\"\r\n\t\t\t? <IconButton\r\n\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\tchildren={<Icon>{action.iconButtonIcon ?? \"notification_important\"}</Icon>}\r\n\t\t\t\tonClick={action.onClick}\r\n\t\t\t/>\r\n\t\t\t: <Button\r\n\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\tchildren={action.label}\r\n\t\t\t\tstartIcon={action.startIcon ? <Icon>{action.startIcon}</Icon> : null}\r\n\t\t\t\tendIcon={action.endIcon ? <Icon>{action.endIcon}</Icon> : null}\r\n\t\t\t\tonClick={action.onClick}\r\n\t\t\t/>\r\n\t\t: null\r\n\r\n\treturn <>\r\n\t\t<Snackbar\r\n\t\t\tclassName=\"Notification\"\r\n\t\t\tid={props.notification.id}\r\n\t\t\topen={open}\r\n\t\t\tonClose={() => setOpen(false)}\r\n\t\t\tonExited={props.onClose}\r\n\t\t\tautoHideDuration={props.notification.timeout}\r\n\t\t\tanchorOrigin={{\r\n\t\t\t\tvertical: props.notification.verticalPosition,\r\n\t\t\t\thorizontal: props.notification.horizontalPosition,\r\n\t\t\t}}\r\n\t\t\tTransitionComponent={GrowTransition}\r\n\t\t>\r\n\t\t\t<Alert\r\n\t\t\t\tseverity={props.notification.severity}\r\n\t\t\t\tvariant={props.notification.variant}\r\n\t\t\t\taction={actionElement}\r\n\t\t\t>\r\n\t\t\t\t{props.notification.message}\r\n\t\t\t</Alert>\r\n\t\t</Snackbar>\r\n\t</>\r\n}","import React from \"react\"\r\nimport { NotificationView } from \"./NotificationView\"\r\nimport { useNotificationController } from \"./useNotificationController\"\r\n\r\nexport type NotificationProps = {\r\n\r\n}\r\n\r\nexport function Notification(props: NotificationProps) {\r\n\r\n\tconst controller = useNotificationController()\r\n\r\n\tif (controller.activeNotification) {\r\n\t\treturn <NotificationView\r\n\t\t\tkey={controller.activeNotification.id}\r\n\t\t\tnotification={controller.activeNotification}\r\n\t\t\tonClose={controller.handleNotificationClose}\r\n\t\t/>\r\n\t}\r\n\r\n\treturn null\r\n\r\n}","import { useCallback, useMemo } from \"react\"\r\nimport { useStoreActions, useStoreState } from \"../../store\"\r\n\r\nexport function useNotificationController() {\r\n\r\n\r\n\tconst notifications = useStoreState(_ => _.notification.notifications)\r\n\tconst deleteNotification = useStoreActions(_ => _.notification.deleteNotification)\r\n\r\n\tconst activeNotification = useMemo(() => {\r\n\t\treturn notifications[0]\r\n\t}, [notifications])\r\n\r\n\tconst handleNotificationClose = useCallback(() => {\r\n\t\tif (activeNotification) {\r\n\t\t\tdeleteNotification(activeNotification.id)\r\n\t\t}\r\n\t}, [activeNotification, deleteNotification])\r\n\r\n\treturn {\r\n\t\tactiveNotification,\r\n\t\thandleNotificationClose,\r\n\t}\r\n}","import { useCallback, useEffect } from \"react\";\r\n\r\ntype ShortcutKeyCombination = {\r\n  key: string;\r\n  ctrl?: boolean;\r\n  alt?: boolean;\r\n  shift?: boolean;\r\n  enableForInputs?: boolean;\r\n};\r\n\r\ntype ShortcutHandler = () => MaybePromise<void>;\r\n\r\nexport function useShortcut(\r\n  shortcut: ShortcutKeyCombination,\r\n  handler: ShortcutHandler\r\n) {\r\n  const onKeyDown = useCallback(\r\n    (e: KeyboardEvent) => {\r\n      // If focused on an input, cancel action\r\n      if (\r\n        !shortcut.enableForInputs &&\r\n        [\"INPUT\", \"TEXTFIELD\"].includes(document.activeElement?.tagName ?? \"\")\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      // Ensure exact correct key combination\r\n      if (\r\n        e.key === shortcut.key &&\r\n        !!e.ctrlKey === !!shortcut.ctrl &&\r\n        !!e.altKey === !!shortcut.alt &&\r\n        !!e.shiftKey === !!shortcut.shift\r\n      ) {\r\n        e.preventDefault();\r\n        handler();\r\n      }\r\n    },\r\n    [shortcut, handler]\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", onKeyDown);\r\n    return () => window.removeEventListener(\"keydown\", onKeyDown);\r\n  }, [onKeyDown]);\r\n}\r\n","import { useMemo } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n/**\r\n * Tells whether the user has the main application active (not for example auth page)\r\n */\r\n\r\nexport function useIsApplicationActive() {\r\n  const location = useLocation();\r\n\r\n  return useMemo(() => Boolean(location.pathname.match(/app/g)), [location]);\r\n}\r\n","import { useCloseFormsShortcut } from \"./useCloseFormsShortcut\";\r\nimport { useCreateTransactionShortcut } from \"./useCreateTransactionShortcut\";\r\nimport { useDeleteTransactionsShortcut } from \"./useDeleteTransactionsShortcut\";\r\nimport { useEditTransactionShortcut } from \"./useEditTransactionShortcut\";\r\nimport { useSelectShortcuts } from \"./useSelectShortcuts\";\r\n\r\nexport function useApplicationShortcuts() {\r\n  useCreateTransactionShortcut();\r\n  useEditTransactionShortcut();\r\n  useCloseFormsShortcut();\r\n  useDeleteTransactionsShortcut();\r\n  useSelectShortcuts();\r\n}\r\n","import { useCallback } from \"react\";\r\nimport { useTransactionCreatorDrawerOpenState } from \"../../components/TransactionCreatorDrawer/useTransactionCreatorDrawerController\";\r\nimport { useIsApplicationActive } from \"../application/useIsApplicationActive\";\r\nimport { useShortcut } from \"./useShortcut\";\r\n\r\nexport function useCreateTransactionShortcut() {\r\n  const isApplicationActive = useIsApplicationActive();\r\n\r\n  const [isOpen, setIsOpen] = useTransactionCreatorDrawerOpenState();\r\n\r\n  const handler = useCallback(() => {\r\n    if (isApplicationActive) {\r\n      setIsOpen(!isOpen);\r\n    }\r\n  }, [isApplicationActive, isOpen, setIsOpen]);\r\n\r\n  useShortcut({ key: \"N\", shift: true }, handler);\r\n}\r\n","import { useCallback } from \"react\";\r\nimport { useTransactionEditorDrawerVariableOpenState } from \"../../components/TransactionEditorDrawer/useTransactionEditorDrawerController\";\r\nimport { useStoreState } from \"../../store\";\r\nimport { useIsApplicationActive } from \"../application/useIsApplicationActive\";\r\nimport { useShortcut } from \"./useShortcut\";\r\n\r\nexport function useEditTransactionShortcut() {\r\n  const isApplicationActive = useIsApplicationActive();\r\n\r\n  // Get the currently selected id (only if one id selected)\r\n  const selection = useStoreState((_) => _.selection.selectionIds);\r\n  const onlySelectedId = selection.length === 1 ? selection[0] : undefined;\r\n\r\n  // Use the editor state\r\n  const [\r\n    isEditingId,\r\n    setIsEditingId,\r\n  ] = useTransactionEditorDrawerVariableOpenState();\r\n\r\n  // Handler to toggle\r\n  const handler = useCallback(() => {\r\n    if (!isApplicationActive) return;\r\n    if (isEditingId) {\r\n      setIsEditingId(null);\r\n    } else if (onlySelectedId) {\r\n      setIsEditingId(onlySelectedId);\r\n    }\r\n  }, [isApplicationActive, isEditingId, setIsEditingId, onlySelectedId]);\r\n\r\n  useShortcut({ key: \"E\", shift: true }, handler);\r\n}\r\n","import { useCallback } from \"react\";\r\nimport { useShortcut } from \"./useShortcut\";\r\nimport {\r\n  parse as parseQueryString,\r\n  stringify as createQueryString,\r\n} from \"query-string\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { TransactionCreatorDrawerOpenQuery } from \"../../components/TransactionCreatorDrawer/useTransactionCreatorDrawerController\";\r\nimport { TransactionEditorDrawerOpenHash } from \"../../components/TransactionEditorDrawer/useTransactionEditorDrawerController\";\r\n\r\nexport function useCloseFormsShortcut() {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const handler = useCallback(() => {\r\n    const query = parseQueryString(location.search);\r\n    const queryString = createQueryString({\r\n      ...query,\r\n      [TransactionEditorDrawerOpenHash]: undefined,\r\n      [TransactionCreatorDrawerOpenQuery]: undefined,\r\n    });\r\n\r\n    history.replace({ search: queryString });\r\n  }, [location.search, history]);\r\n\r\n  useShortcut({ key: \"Escape\", enableForInputs: true }, handler);\r\n}\r\n","import { useCallback } from \"react\";\r\nimport { useStoreActions, useStoreState } from \"../../store\";\r\nimport { useIsApplicationActive } from \"../application/useIsApplicationActive\";\r\nimport { useShortcut } from \"./useShortcut\";\r\n\r\nexport function useDeleteTransactionsShortcut() {\r\n  const isApplicationActive = useIsApplicationActive();\r\n\r\n  const selectedIds = useStoreState((_) => _.selection.selectionIds);\r\n\r\n  const deleteTransactions = useStoreActions(\r\n    (_) => _.transactions.deleteTransactions\r\n  );\r\n\r\n  const handler = useCallback(() => {\r\n    if (!isApplicationActive) return;\r\n    deleteTransactions(selectedIds);\r\n  }, [isApplicationActive, selectedIds, deleteTransactions]);\r\n\r\n  useShortcut({ key: \"D\", shift: true }, handler);\r\n}\r\n","import { useCallback } from \"react\";\r\nimport { routes } from \"../../Routes\";\r\nimport { useStoreState, useStoreActions } from \"../../store\";\r\nimport { useIsApplicationActive } from \"../application/useIsApplicationActive\";\r\nimport { useRouteData } from \"../application/useRouteData\";\r\nimport { useShortcut } from \"./useShortcut\";\r\n\r\nexport function useSelectShortcuts() {\r\n  const isApplicationActive = useIsApplicationActive();\r\n  const routeData = useRouteData();\r\n  const filteredTransactions = useStoreState(\r\n    (_) => _.transactions.filteredItems\r\n  );\r\n  const selectAll = useStoreActions((_) => _.selection.selectAll);\r\n  const deselectAll = useStoreActions((_) => _.selection.deselectAll);\r\n\r\n  const handleSelectAll = useCallback(() => {\r\n    if (isApplicationActive && routeData?.name === routes.dashboard.name) {\r\n      selectAll(filteredTransactions.map((_) => _.id));\r\n    }\r\n  }, [isApplicationActive, routeData, selectAll, filteredTransactions]);\r\n\r\n  const handleDeselectAll = useCallback(() => {\r\n    if (isApplicationActive && routeData?.name === routes.dashboard.name) {\r\n      deselectAll();\r\n    }\r\n  }, [isApplicationActive, routeData, deselectAll]);\r\n\r\n  useShortcut({ key: \"A\", shift: true }, handleSelectAll);\r\n  useShortcut({ key: \"A\", shift: true, alt: true }, handleDeselectAll);\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useVhFix } from './hooks/utils/useVhFix';\r\nimport { Routes } from './Routes';\r\nimport { useStoreActions } from './store';\r\nimport { Notification } from \"./components/Notification/Notification\"\r\nimport { useHistoryNotifications } from './hooks/application/useHistoryNotifications';\r\nimport { TransactionContextMenuProvider } from './contexts/TransactionContextMenu.context';\r\nimport { useApplicationShortcuts } from './hooks/shortcuts/useApplicationShortcuts';\r\nimport { useGtagTracking } from './hooks/gtag/useGtagTracking';\r\n\r\nfunction App() {\r\n\tuseGtagTracking()\r\n\tuseVhFix()\r\n\tuseHistoryNotifications()\r\n\tuseApplicationShortcuts()\r\n\r\n\t/**\r\n\t * Initialize by fetching the user's profile if any\r\n\t */\r\n\tconst getProfile = useStoreActions(_ => _.auth.getProfile)\r\n\tuseEffect(() => { getProfile() }, [getProfile])\r\n\r\n\treturn <>\r\n\t\t<TransactionContextMenuProvider>\r\n\t\t\t<Notification />\r\n\t\t\t<Routes />\r\n\t\t</TransactionContextMenuProvider>\r\n\t</>\r\n}\r\n\r\nexport default App;\r\n","import ReactGA from \"react-ga\";\r\nimport { useEffect } from \"react\";\r\nimport { useStoreState } from \"../../store\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport function useGtagTracking() {\r\n  // Set user\r\n  const user = useStoreState((_) => _.auth.user);\r\n  useEffect(() => ReactGA.set({ userId: user?.id }), [user]);\r\n\r\n  // Pageviews\r\n  const location = useLocation();\r\n  useEffect(() => ReactGA.pageview(location.pathname), [location.pathname]);\r\n}\r\n","import { useEffect } from \"react\";\r\n\r\nexport function useVhFix() {\r\n\tconst root = document.documentElement;\r\n\tuseEffect(() => {\r\n\t\tconst eventHandler = () => {\r\n\t\t\tconst viewportHeight = window.innerHeight;\r\n\t\t\troot.style.setProperty(\"--full-vh\", `${viewportHeight}px`);\r\n\t\t\troot.style.setProperty(\"--vh\", `${viewportHeight / 100}px`);\r\n\t\t};\r\n\t\teventHandler();\r\n\t\twindow.addEventListener(\"resize\", eventHandler);\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"resize\", eventHandler);\r\n\t\t};\r\n\t});\r\n}\r\n","import { useCallback, useEffect } from \"react\";\r\nimport { DeleteTransactionEvent } from \"../../history/DeleteTransactionEvent\";\r\nimport { useStoreActions, useStoreState } from \"../../store\";\r\nimport { DeleteTransactionsEvent } from \"../../history/DeleteTransactionsEvent\";\r\nimport { LoggedOutEvent } from \"../../history/LoggedOutEvent\";\r\nimport { HistoryEvent } from \"../../history/HistoryEvent\";\r\n\r\nexport function useHistoryNotifications() {\r\n  const latest = useStoreState((_) => _.history.latest);\r\n  const restore = useStoreActions((_) => _.history.restoreEvent);\r\n  const notify = useStoreActions((_) => _.notification.notify);\r\n\r\n  const notifyEvent = useCallback(\r\n    <E extends HistoryEvent<any>>(event: E, message: string) => {\r\n      notify({\r\n        message,\r\n        severity: \"info\",\r\n        action: event.canBeRestored\r\n          ? {\r\n              onClick: () => restore(event.id),\r\n              buttonType: \"button\",\r\n              startIcon: \"undo\",\r\n              label: \"Undo\",\r\n            }\r\n          : undefined,\r\n      });\r\n    },\r\n    [notify, restore]\r\n  );\r\n\r\n  const handleDeleteTransactionEvent = useCallback(\r\n    (e: DeleteTransactionEvent) => {\r\n      notifyEvent(e, \"Deleted transaction\");\r\n      e.displayed = true;\r\n    },\r\n    [notifyEvent]\r\n  );\r\n\r\n  const handleDeleteTransactionsEvent = useCallback(\r\n    (e: DeleteTransactionsEvent) => {\r\n      const n = e.transactions.length;\r\n      notifyEvent(e, `Deleted ${n} transaction${n > 1 ? \"s\" : \"\"}`);\r\n      e.displayed = true;\r\n    },\r\n    [notifyEvent]\r\n  );\r\n\r\n  const handleLoggedOutEvent = useCallback(\r\n    (e: LoggedOutEvent) => {\r\n      notifyEvent(e, `You have been logged out`);\r\n      e.displayed = true;\r\n    },\r\n    [notifyEvent]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!latest || latest.displayed) return;\r\n\r\n    if (latest instanceof DeleteTransactionEvent) {\r\n      handleDeleteTransactionEvent(latest);\r\n    } else if (latest instanceof DeleteTransactionsEvent) {\r\n      handleDeleteTransactionsEvent(latest);\r\n    } else if (latest instanceof LoggedOutEvent) {\r\n      handleLoggedOutEvent(latest);\r\n    }\r\n  }, [\r\n    latest,\r\n    handleDeleteTransactionEvent,\r\n    handleDeleteTransactionsEvent,\r\n    handleLoggedOutEvent,\r\n  ]);\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core\";\r\n\r\nimport { theme as _ } from \"./main\";\r\n\r\nconst regular = {\r\n  fontWeight: Number(_.text_regular),\r\n  textTransform: \"none\",\r\n  letterSpacing: _.text_regular_spacing,\r\n} as const;\r\n\r\nconst bold = {\r\n  fontWeight: Number(_.text_bold),\r\n  textTransform: \"none\",\r\n  letterSpacing: _.text_bold_spacing,\r\n} as const;\r\n\r\nconst boldcaps = {\r\n  fontWeight: Number(_.text_bold),\r\n  textTransform: \"uppercase\",\r\n  letterSpacing: _.text_boldcaps_spacing,\r\n} as const;\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: _.poppins,\r\n    h1: { fontSize: _.text_xxxl, ...bold },\r\n    h2: { fontSize: _.text_xxl, ...bold },\r\n    h3: { fontSize: _.text_xl, ...bold },\r\n    h4: { fontSize: _.text_lg, ...bold },\r\n    h5: { fontSize: _.text_md, ...bold },\r\n    h6: { fontSize: _.text_sm, ...bold },\r\n    body1: { fontSize: _.text_md, ...regular },\r\n    body2: { fontSize: _.text_sm, ...boldcaps },\r\n    button: { fontSize: _.text_md, ...bold },\r\n    fontWeightBold: Number(_.text_bold),\r\n    fontWeightLight: Number(_.text_light),\r\n    fontWeightMedium: Number(_.text_regular),\r\n    fontWeightRegular: Number(_.text_regular),\r\n  },\r\n  palette: {\r\n    primary: {\r\n      main: _.blue_500,\r\n      dark: _.blue_700,\r\n      light: _.blue_300,\r\n\r\n      50: _.blue_100,\r\n      100: _.blue_100,\r\n      200: _.blue_200,\r\n      300: _.blue_300,\r\n      400: _.blue_400,\r\n      500: _.blue_500,\r\n      600: _.blue_600,\r\n      700: _.blue_700,\r\n      800: _.blue_800,\r\n      900: _.blue_900,\r\n\r\n      A100: _.blue_100,\r\n      A200: _.blue_200,\r\n      A400: _.blue_400,\r\n      A700: _.blue_700,\r\n\r\n      contrastText: _.white,\r\n    },\r\n    success: {\r\n      main: _.green_500,\r\n      dark: _.green_700,\r\n      light: _.green_300,\r\n\r\n      50: _.green_100,\r\n      100: _.green_100,\r\n      200: _.green_200,\r\n      300: _.green_300,\r\n      400: _.green_400,\r\n      500: _.green_500,\r\n      600: _.green_600,\r\n      700: _.green_700,\r\n      800: _.green_800,\r\n      900: _.green_900,\r\n\r\n      A100: _.green_100,\r\n      A200: _.green_200,\r\n      A400: _.green_400,\r\n      A700: _.green_700,\r\n\r\n      contrastText: _.white,\r\n    },\r\n    error: {\r\n      main: _.red_500,\r\n      dark: _.red_700,\r\n      light: _.red_300,\r\n\r\n      50: _.red_100,\r\n      100: _.red_100,\r\n      200: _.red_200,\r\n      300: _.red_300,\r\n      400: _.red_400,\r\n      500: _.red_500,\r\n      600: _.red_600,\r\n      700: _.red_700,\r\n      800: _.red_800,\r\n      900: _.red_900,\r\n\r\n      A100: _.red_100,\r\n      A200: _.red_200,\r\n      A400: _.red_400,\r\n      A700: _.red_700,\r\n\r\n      contrastText: _.white,\r\n    },\r\n    info: {\r\n      main: _.blue_500,\r\n      dark: _.blue_700,\r\n      light: _.blue_300,\r\n\r\n      50: _.blue_100,\r\n      100: _.blue_100,\r\n      200: _.blue_200,\r\n      300: _.blue_300,\r\n      400: _.blue_400,\r\n      500: _.blue_500,\r\n      600: _.blue_600,\r\n      700: _.blue_700,\r\n      800: _.blue_800,\r\n      900: _.blue_900,\r\n\r\n      A100: _.blue_100,\r\n      A200: _.blue_200,\r\n      A400: _.blue_400,\r\n      A700: _.blue_700,\r\n\r\n      contrastText: _.white,\r\n    },\r\n    secondary: {\r\n      main: _.green_500,\r\n      dark: _.green_700,\r\n      light: _.green_300,\r\n\r\n      50: _.green_100,\r\n      100: _.green_100,\r\n      200: _.green_200,\r\n      300: _.green_300,\r\n      400: _.green_400,\r\n      500: _.green_500,\r\n      600: _.green_600,\r\n      700: _.green_700,\r\n      800: _.green_800,\r\n      900: _.green_900,\r\n\r\n      A100: _.green_100,\r\n      A200: _.green_200,\r\n      A400: _.green_400,\r\n      A700: _.green_700,\r\n\r\n      contrastText: _.white,\r\n    },\r\n    grey: {\r\n      50: _.gray_100,\r\n      100: _.gray_100,\r\n      200: _.gray_200,\r\n      300: _.gray_300,\r\n      400: _.gray_400,\r\n      500: _.gray_500,\r\n      600: _.gray_600,\r\n      700: _.gray_700,\r\n      800: _.gray_800,\r\n      900: _.gray_900,\r\n\r\n      A100: _.gray_100,\r\n      A200: _.gray_200,\r\n      A400: _.gray_400,\r\n      A700: _.gray_700,\r\n    },\r\n    divider: _.gray_300,\r\n    common: {\r\n      black: _.black,\r\n      white: _.white,\r\n    },\r\n    background: {\r\n      default: _.white,\r\n      paper: _.white,\r\n    },\r\n  },\r\n});\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).theme = theme;\r\n}\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport locale from \"date-fns/locale/en-GB\";\r\nimport * as datefns from \"date-fns\";\r\n\r\nexport class LocalizedUtils extends DateFnsUtils {\r\n  getDatePickerHeaderText(date: Date) {\r\n    return datefns.format(date, \"d. MMM, yyyy\", { locale, weekStartsOn: 1 });\r\n  }\r\n\r\n  static get Locale() {\r\n    return {\r\n      ...locale,\r\n      options: {\r\n        ...locale.options,\r\n        weekStartsOn: 1,\r\n      },\r\n    };\r\n  }\r\n}\r\n","import \"./styles/index.scss\"\r\nimport \"./styles/main.scss\"\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from './store';\r\nimport { StoreProvider } from 'easy-peasy';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { theme } from \"./styles/theme\";\r\nimport { LocalizedUtils } from \"./utils/LocaleUtils/CustomLocale\";\r\nimport ReactGA from \"react-ga\";\r\n\r\n// Initialize Google Analytics\r\nexport const GOOGLE_ANALYTICS_TRACKING_ID = \"G-LVM2P76WDY\";\r\nReactGA.initialize(GOOGLE_ANALYTICS_TRACKING_ID);\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<StoreProvider store={store}>\r\n\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t<MuiPickersUtilsProvider\r\n\t\t\t\t\tutils={LocalizedUtils}\r\n\t\t\t\t\tlocale={LocalizedUtils.Locale}\r\n\t\t\t\t>\r\n\t\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t\t<App />\r\n\t\t\t\t\t</BrowserRouter>\r\n\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t</ThemeProvider>\r\n\t\t</StoreProvider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n","export const theme = {\n\theader_height: `5rem`,\n\tmobile_header_height: `160px`,\n\tsidebar_width: `290px`,\n\tblue_900: `#060040`,\n\tblue_800: `#030380`,\n\tblue_700: `#08109c`,\n\tblue_600: `#1836ce`,\n\tblue_500: `#2a52e2`,\n\tblue_400: `#6291ef`,\n\tblue_300: `#83aff4`,\n\tblue_200: `#c7e1fb`,\n\tblue_100: `#eaf5fe`,\n\tred_900: `#610a3b`,\n\tred_800: `#881348`,\n\tred_700: `#b01e51`,\n\tred_600: `#d22d58`,\n\tred_500: `#ef3e5e`,\n\tred_400: `#f36a73`,\n\tred_300: `#f79b96`,\n\tred_200: `#fbccc3`,\n\tred_100: `#fef4ef`,\n\tgreen_900: `#00151b`,\n\tgreen_800: `#034549`,\n\tgreen_700: `#09736a`,\n\tgreen_600: `#129a7c`,\n\tgreen_500: `#1dc588`,\n\tgreen_400: `#4dd39c`,\n\tgreen_300: `#7fe5b6`,\n\tgreen_200: `#b4f2d3`,\n\tgreen_100: `#edfdf4`,\n\tgray_900: `#141414`,\n\tgray_840: `#1b1a1a`,\n\tgray_830: `#1f1f22`,\n\tgray_820: `#29292c`,\n\tgray_810: `#2f2f33`,\n\tgray_800: `#3c3c42`,\n\tgray_700: `#63626b`,\n\tgray_600: `#8a8894`,\n\tgray_500: `#b2aebc`,\n\tgray_400: `#c3c0cd`,\n\tgray_300: `#d4d2dd`,\n\tgray_200: `#f0f0f5`,\n\tgray_100: `#f9f9fb`,\n\twhite: `#ffffff`,\n\tblack: `#000000`,\n\tprimary_900: `blue_900`,\n\tprimary_800: `blue_800`,\n\tprimary_700: `blue_700`,\n\tprimary_600: `blue_600`,\n\tprimary_500: `blue_500`,\n\tprimary_400: `blue_400`,\n\tprimary_300: `blue_300`,\n\tprimary_200: `blue_200`,\n\tprimary_100: `blue_100`,\n\tborder_color: `gray_300`,\n\tborder: `border_color 1px solid`,\n\troboto: `\"Roboto\", Helvetica, Arial, sans_serif`,\n\troboto_condensed: `\"Roboto Condensed\", Helvetica, Arial, sans_serif`,\n\tpoppins: `\"Poppins\", \"Roboto\", Helvetica, Arial, sans_serif`,\n\tspacing_1: `0.25rem`,\n\tspacing_2: `0.5rem`,\n\tspacing_3: `0.75rem`,\n\tspacing_4: `1rem`,\n\tspacing_5: `1.25rem`,\n\tspacing_6: `1.5rem`,\n\tspacing_8: `2rem`,\n\tspacing_10: `2.5rem`,\n\tspacing_12: `3rem`,\n\tspacing_14: `3.5rem`,\n\tspacing_16: `4rem`,\n\tspacing_20: `5rem`,\n\tspacing_24: `6rem`,\n\tspacing_28: `7rem`,\n\tspacing_32: `8rem`,\n\tspacing_36: `9rem`,\n\tspacing_40: `10rem`,\n\tfixed_spacing_1: `4px`,\n\tfixed_spacing_2: `8px`,\n\tfixed_spacing_3: `12px`,\n\tfixed_spacing_4: `16px`,\n\tfixed_spacing_5: `20px`,\n\tfixed_spacing_6: `24px`,\n\tfixed_spacing_8: `32px`,\n\tfixed_spacing_10: `40px`,\n\tfixed_spacing_12: `48px`,\n\tfixed_spacing_14: `56px`,\n\tfixed_spacing_16: `64px`,\n\tfixed_spacing_20: `80px`,\n\tfixed_spacing_24: `96px`,\n\tfixed_spacing_28: `112px`,\n\tfixed_spacing_32: `128px`,\n\tfixed_spacing_36: `144px`,\n\tfixed_spacing_40: `160px`,\n\tspacing_icon_button: `12px`,\n\tspacing_button_vertical: `6px`,\n\tspacing_button_horizontal: `8px`,\n\ttiming_1: `100ms`,\n\ttiming_2: `200ms`,\n\ttiming_3: `300ms`,\n\tanimate_snap_back: `cubic_bezier(0.21, 1.47, 0, 1)`,\n\tradius_sm: `4px`,\n\tradius_md: `8px`,\n\tradius_lg: `12px`,\n\ttext_xxxl: `3rem`,\n\ttext_xxl: `2.25rem`,\n\ttext_xl: `1.5rem`,\n\ttext_lg: `1.25rem`,\n\ttext_md: `0.95rem`,\n\ttext_sm: `0.75rem`,\n\ttext_light: `300`,\n\ttext_bold: `700`,\n\ttext_regular: `400`,\n\ttext_regular_spacing: `0px`,\n\ttext_bold_spacing: `0px`,\n\ttext_boldcaps_spacing: `0.69px`,\n\tfullvh: `var(__full_vh, 100vh)`,\n\tvh: `var(__vh, 1vh)`,\n\tbp_sm: `600px`,\n\tbp_md: `900px`,\n\tbp_lg: `1200px`,\n\tfont_weight_light: `300`,\n\tfont_weight_regular: `400`,\n\tfont_weight_medium: `500`,\n\tfont_weight_bold: `700`,\n\tspacing_sm: `spacing_2`,\n\tspacing_md: `spacing_4`,\n\tspacing_lg: `spacing_8`,\n\tcolor_primary_main: `blue_500`,\n\tcolor_primary_light: `blue_200`,\n\tcolor_primary_dark: `blue_800`,\n\tcolor_primary_50: `blue_100`,\n\tcolor_primary_100: `blue_100`,\n\tcolor_primary_200: `blue_200`,\n\tcolor_primary_300: `blue_300`,\n\tcolor_primary_400: `blue_400`,\n\tcolor_primary_500: `blue_500`,\n\tcolor_primary_600: `blue_600`,\n\tcolor_primary_700: `blue_700`,\n\tcolor_primary_800: `blue_800`,\n\tcolor_primary_900: `blue_900`,\n\tcolor_positive_main: `green_500`,\n\tcolor_negative_main: `red_500`,\n\tcolor_error_main: `red_500`,\n\tcolor_error_light: `red_200`,\n\tcolor_error_dark: `red_800`,\n\tcolor_divider: `gray_200`,\n\tcolor_action_focus: `gray_300`,\n\tcolor_action_hover: `gray_400`,\n\tcolor_action_active: `gray_500`,\n\tcolor_action_primary_focus: `blue_300`,\n\tcolor_action_primary_hover: `blue_400`,\n\tcolor_action_primary_active: `blue_500`,\n\tcolor_text_default: `gray_900`,\n\tborder_radius: `0.4rem`,\n\tshadow_blur_small: `6px`,\n\tshadow_blur_medium: `20px`,\n\tshadow_color_medium: `rgba(0, 0, 0, 0.15)`,\n\tshadow_color_strong: `rgba(0, 0, 0, 0.2)`,\n\tapp_tab_height: `60px`,\n\tapp_tab_width: `14rem`,\n\tapp_header_height: `160px`,\n\tapp_tab_z: `900`,\n\tcontainer_max_width: `960px`,\n\ticon_size_xs: `1rem`,\n\ticon_size_sm: `1.25rem`,\n\ticon_size_md: `1.5rem`,\n};"],"sourceRoot":""}