{"version":3,"sources":["images/logo_google.png","images/pexels-johannes-plenio-1103970.jpg","components/Type/Type.tsx","components/AuthFrame/AuthFrame.tsx","views/Login/LoginView.tsx","models/authentication/auth.class.ts","models/authentication/auth.json.ts","models/authentication/auth.model.ts","utils/MoneyAmount.ts","models/transactions/transactions.class.ts","utils/groupByDate.ts","utils/compareDate.ts","models/transactions/transactions.filtered.model.ts","models/transactions/transactions.model.ts","models/interval/interval.model.ts","config.ts","utils/Problem.ts","utils/Result.ts","services/ServiceBase.ts","services/AuthService.ts","models/transactions/transactions.json.ts","services/TransactionService.ts","store.ts","hooks/useRedirect.ts","views/Login/LoginController.tsx","views/Register/RegisterView.tsx","views/Register/RegisterController.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/TransactionListing/TransactionListingView.tsx","components/TransactionListing/TransactionListing.tsx","components/TransactionList/TransactionListView.tsx","components/TransactionList/TransactionList.tsx","components/TransactionListFilters/TransactionListFiltersView.tsx","components/TransactionListFilters/TransactionListFiltersController.tsx","components/PageHeader/PageHeader.tsx","components/MoneyType/MoneyType.tsx","views/Dashboard/DashboardView.tsx","views/Dashboard/DashboardController.tsx","views/Settings/SettingsView.tsx","views/Settings/SettingsController.tsx","views/Analytics/AnalyticsView.tsx","views/Analytics/AnalyticsController.tsx","views/ForgotPassword/ForgotPasswordView.tsx","views/ForgotPassword/ForgotPasswordController.tsx","components/TransactionForm/TransactionFormView.tsx","components/TransactionForm/TransactionFormController.tsx","hooks/useMedia.ts","views/Sidebar/SidebarView.tsx","views/Sidebar/SidebarController.tsx","views/AppFrame/AppFrameView.tsx","views/AppFrame/AppFrameController.tsx","views/ChangePassword/ChangePasswordView.tsx","views/ChangePassword/ChangePasswordController.tsx","views/ConfirmEmail/ConfirmEmailView.tsx","views/ConfirmEmail/ConfirmEmailController.tsx","Routes.tsx","App.tsx","serviceWorker.ts","styles/theme.ts","index.tsx"],"names":["module","exports","Type","props","condensed","className","color","typographyProps","Typography","cx","String","AuthFrame","variant","component","header","body","footer","Divider","LoginView","useState","passwordVisible","setPasswordVisible","useForm","resolver","yupResolver","loginValidationSchema","register","handleSubmit","errors","formState","emailError","touched","email","message","passwordError","password","noValidate","onSubmit","TextField","id","name","type","inputRef","label","error","helperText","fullWidth","InputProps","endAdornment","InputAdornment","position","Email","IconButton","onClick","_","size","Button","handleGoogleSubmit","startIcon","src","googleLogo","alt","handleCreateAccount","handleForgotPassword","Auth","json","displayName","photoUrl","googleId","this","undefined","jsonAuthSchema","object","string","required","min","isJsonAuth","arg","isValidSync","authModel","initialized","_setInitialized","action","state","boolean","user","isLoggedIn","computed","Boolean","accessToken","_setAccessToken","newAccessToken","_login","_logout","getProfile","thunk","actions","payload","a","injections","authService","profileResult","onSuccess","profile","loginWithGoogle","loginWithEmailPassword","loginWithEmailAndPassword","result","registerWithEmailPassword","registerWithEmailAndPassword","isSuccess","forgotPassword","validateChangePasswordToken","validatePasswordChangeToken","changePassword","confirmEmail","logout","MoneyAmount","cents","_value","Math","trunc","Error","options","o","defaultMoneyAmountFormatOptions","s","sign","isPositive","isNegative","spaces","thousandSpaces","abs","euros","toFixed","split","reverse","map","char","i","join","separator","unit","trim","that","floor","values","reduce","sum","value","add","Transaction","date","category","comment","amount","uid","Date","time","integerAmount","uuid","getTime","groupByDate","items","getDate","itemsByKey","res","item","key","datefns","getKey","Object","entries","entry","sort","b","compareDate","op","_a","serializeDate","_b","getFullYear","getMonth","filteredTransactionsModel","storeState","transactions","interval","startDate","endDate","filter","itemsByDates","filtered","count","length","sums","incomes","expenses","all","transactionsModel","categories","c","indexOf","getTransactions","transactionService","_getTransactions","jsons","postTransaction","_postTransaction","push","deleteTransaction","_deleteTransaction","putTransaction","_putTransaction","patchTransaction","_patchTransaction","onAuthChanged","thunkOn","store","auth","target","resolvedTargets","loggedOut","loggedIn","_clearTransactions","intervalModel","setStartDate","setEndDate","setInterval","dates","nextInterval","newStartDate","isYear","isMonth","isWeek","weekStartsOn","previousInterval","newEndDate","weekInterval","monthInterval","yearInterval","smartDisplayString","displayString","Config","Problem","problem","status","code","data","axiosError","response","request","promiseToResult","promise","then","Success","catch","Failure","fallbackValue","callback","fn","success","failure","typeGuard","v","ServiceBase","baseURL","axios","API_URL","Axios","create","withCredentials","path","token","getState","jwt","decode","expiresAt","Number","exp","now","console","warn","force","isAccessTokenValid","url","endpoint","get","getActions","attemptRefreshAccessToken","override","headers","Authorization","config","requestFunction","onBeforeRequest","getConfig","mapFailure","failureValue","fromAxiosError","handleRequest","post","delete","put","patch","AuthService","ensureType","credentials","transform","Empty","window","location","href","jsonTransactionSchema","number","positive","integer","isJsonTransaction","validateSync","isJsonTransactionArray","Array","isArray","every","TransactionService","storeModel","createStore","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","useStore","useRedirect","history","useHistory","routes","yup","defined","Login","setError","redirect","dashboard","onFailure","useEffect","RegisterView","form","registerValidationSchema","registered","handleLogin","max","Register","setRegistered","log","login","ProtectedRoute","fallbackRoute","routeProps","defaultFallbackRoute","to","TransactionListingView","signClass","transaction","format","TransactionListing","handleDelete","useCallback","TransactionListView","del","datestring","currentYear","TransactionList","filteredItemsByDates","bypassFilters","TransactionListFiltersView","ButtonGroup","onPreviousInterval","ChevronLeft","onYearInterval","onMonthInterval","onWeekInterval","onNextInterval","ChevronRight","TransactionListFilters","intervalString","PageHeader","textureImg","children","MoneyType","formatOptions","typeProps","DashboardView","filteredSum","Dashboard","filteredSums","filteredIncomesSum","filteredExpensesSum","SettingsView","style","width","height","handleLogout","Settings","AnalyticsView","accept","onChange","e","files","file","reader","FileReader","addEventListener","rows","toString","row","replace","padStart","readAsText","Analytics","ForgotPasswordView","forgotPasswordValidationSchema","ForgotPassword","setSuccess","TransactionFormView","preventDefault","onAmountChange","Autocomplete","onCategoryChange","freeSolo","openOnFocus","autoHighlight","selectOnFocus","disableClearable","renderInput","params","d","onTimeChange","inputVariant","onCommentChange","TransactionForm","setAmount","setCategory","setTime","setComment","amountError","setAmountError","categoryError","setCategoryError","timeError","setTimeError","commentError","setCommentError","validateForm","amountValidationError","test","validateAmount","categoryValidationError","valid","empty","validateCategory","timeValidationError","isNaN","validateTime","validateComment","_root","main","useMedia","query","mediaQueryList","useMemo","matchMedia","setValue","changeHandler","matches","removeEventListener","SidebarView","sidebarView","Drawer","open","transactionFormOpen","onClose","onTransactionFormClose","anchor","active","isDashboard","onDashboard","isAnalytics","onAnalytics","isBudget","onBudget","isSettings","onSettings","onTransactionFormOpen","Sidebar","dashboardMatch","useRouteMatch","analyticsMatch","analytics","budgetMatch","budget","settingsMatch","settings","setTransactionFormOpen","AppFrameView","AppFrame","ChangePasswordView","changePasswordValidationSchema","loading","CircularProgress","validTokenEmail","passwordChangeSuccessful","onLogin","ChangePassword","useParams","setValidTokenEmail","setPasswordChangeSuccessful","ConfirmEmailView","ConfirmEmail","approot","Routes","exact","App","hostname","match","cssvar","getComputedStyle","document","documentElement","getPropertyValue","theme","createMuiTheme","palette","primary","colors","deepPurple","dark","light","50","100","200","300","400","500","600","700","800","900","contrastText","ReactDOM","render","StrictMode","ThemeProvider","utils","DateFnsUtils","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9715d2d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_google.696b80ec.png\";","module.exports = __webpack_public_path__ + \"static/media/pexels-johannes-plenio-1103970.afe78909.jpg\";","import \"./Type.scss\";\r\nimport React, { ElementType } from \"react\"\r\nimport cx from \"classnames\"\r\nimport { Typography, TypographyProps } from \"@material-ui/core\";\r\n\r\nexport type TypeProps = Omit<TypographyProps, \"color\"> & {\r\n\tcomponent?: ElementType;\r\n\tcolor?: TypographyProps[\"color\"] | \"white\" | \"black\"\r\n\tcondensed?: boolean;\r\n}\r\n\r\nexport function Type(props: TypeProps) {\r\n\r\n\tconst { condensed, className, color, ...typographyProps } = props\r\n\r\n\treturn <Typography\r\n\r\n\t\t{...typographyProps}\r\n\r\n\t\tcolor={(() => {\r\n\t\t\tswitch (color) {\r\n\t\t\t\tcase \"white\":\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\tcase \"black\":\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn color;\r\n\t\t\t}\r\n\t\t})()}\r\n\r\n\t\tclassName={cx(\r\n\t\t\tclassName,\r\n\t\t\t\"Type\",\r\n\t\t\t{ condensed },\r\n\t\t\t`color-${String(color)}`\r\n\t\t)}\r\n\t/>\r\n}\r\n\r\n","import \"./AuthFrame.scss\";\r\nimport React from \"react\"\r\nimport { Type } from \"../Type/Type\";\r\nimport { Divider } from \"@material-ui/core\";\r\n\r\nexport type AuthFrameProps = {\r\n\theader: string;\r\n\tbody: React.ReactNode;\r\n\tfooter?: React.ReactNode;\r\n}\r\n\r\nexport function AuthFrame(props: AuthFrameProps) {\r\n\treturn <div className=\"AuthFrame\">\r\n\r\n\t\t<div className=\"container\">\r\n\r\n\t\t\t<header>\r\n\r\n\t\t\t\t<Type variant=\"h5\" component=\"h1\" color=\"white\">\r\n\t\t\t\t\t{props.header}\r\n\t\t\t\t</Type>\r\n\r\n\t\t\t</header>\r\n\r\n\t\t\t<div className=\"content\">\r\n\r\n\t\t\t\t{props.body}\r\n\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tprops.footer\r\n\t\t\t\t\t\t? <>\r\n\r\n\t\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t\t<footer>\r\n\r\n\t\t\t\t\t\t\t\t{props.footer}\r\n\r\n\t\t\t\t\t\t\t</footer>\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t: null\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\r\n\t</div>\r\n}","import \"./Login.scss\";\r\nimport React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { loginValidationSchema, LoginFormType } from './LoginController';\r\nimport { yupResolver } from '@hookform/resolvers';\r\nimport { TextField, Button, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport googleLogo from \"../../images/logo_google.png\"\r\nimport {\r\n\tEmail as EmailIcon,\r\n\tVisibility as PasswordVisibleIcon,\r\n\tVisibilityOff as PasswordInvisibleIcon,\r\n} from \"@material-ui/icons\";\r\nimport { AuthFrame } from \"../../components/AuthFrame/AuthFrame\";\r\nimport { Type } from \"../../components/Type/Type\";\r\n\r\nexport type LoginViewProps = {\r\n\thandleSubmit(values: LoginFormType): Promise<void>;\r\n\thandleGoogleSubmit(): Promise<void>;\r\n\thandleForgotPassword(): Promise<void>;\r\n\thandleCreateAccount(): Promise<void>;\r\n\terror?: string;\r\n}\r\n\r\nexport const LoginView: React.FC<LoginViewProps> = (props) => {\r\n\r\n\t/**\r\n\t * Password visible state\r\n\t */\r\n\tconst [passwordVisible, setPasswordVisible] = useState(false)\r\n\r\n\t/**\r\n\t * React hook form\r\n\t */\r\n\tconst { register, handleSubmit, errors, formState, ...form } = useForm<LoginFormType>({\r\n\t\tresolver: yupResolver(loginValidationSchema),\r\n\t})\r\n\r\n\t/**\r\n\t * Email and password error shorthands for react hook form\r\n\t */\r\n\tconst emailError = formState.touched.email && errors.email?.message\r\n\tconst passwordError = formState.touched.password && errors.password?.message\r\n\r\n\treturn <div className=\"Login\">\r\n\t\t<AuthFrame\r\n\r\n\t\t\theader=\"Login to Expence\"\r\n\r\n\t\t\tbody={\r\n\t\t\t\t<form noValidate onSubmit={handleSubmit(props.handleSubmit)}>\r\n\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"login-email\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tinputRef={register}\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\terror={!!emailError}\r\n\t\t\t\t\t\thelperText={emailError}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t<EmailIcon />\r\n\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"login-password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\ttype={passwordVisible ? \"text\" : \"password\"}\r\n\t\t\t\t\t\tinputRef={register}\r\n\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\terror={!!passwordError}\r\n\t\t\t\t\t\thelperText={passwordError}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t<IconButton onClick={() => setPasswordVisible(_ => !_)} size=\"small\">\r\n\t\t\t\t\t\t\t\t\t{passwordVisible ? <PasswordVisibleIcon /> : <PasswordInvisibleIcon />}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\"Login\"}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops.error\r\n\t\t\t\t\t\t\t? <Type color=\"error\">\r\n\t\t\t\t\t\t\t\t{props.error}\r\n\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tonClick={() => props.handleGoogleSubmit()}\r\n\t\t\t\t\t\tstartIcon={<img className=\"logo\" src={googleLogo} alt=\"Google Logo\" />}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\"Log in with Google\"}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t</form>\r\n\t\t\t}\r\n\r\n\t\t\tfooter={<div className=\"footerContent\">\r\n\r\n\t\t\t\t<Button onClick={() => props.handleCreateAccount()}>\r\n\t\t\t\t\t{\"Create account\"}\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Button onClick={() => props.handleForgotPassword()}>\r\n\t\t\t\t\t{\"Forgot password\"}\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t</div>}\r\n\t\t/>\r\n\t</div>\r\n}\r\n","import { JsonAuth } from \"./auth.json\";\r\n\r\nexport class Auth {\r\n  id: string;\r\n  displayName?: string;\r\n  email?: string;\r\n  photoUrl?: string;\r\n  googleId?: string;\r\n\r\n  constructor(json: JsonAuth) {\r\n    this.id = json.id;\r\n    this.displayName = json.displayName ?? undefined;\r\n    this.email = json.email ?? undefined;\r\n    this.photoUrl = json.photoUrl ?? undefined;\r\n    this.googleId = json.googleId ?? undefined;\r\n  }\r\n}\r\n","import { object, string, ObjectSchema } from \"yup\";\r\n\r\nexport type JsonAuth = {\r\n  id: string;\r\n  displayName: string | undefined;\r\n  photoUrl: string | undefined;\r\n  email: string | undefined;\r\n  googleId: string | undefined;\r\n};\r\n\r\nexport const jsonAuthSchema: ObjectSchema<JsonAuth> = object({\r\n  id: string().required().min(1),\r\n  displayName: string(),\r\n  photoUrl: string(),\r\n  email: string(),\r\n  googleId: string(),\r\n}).required();\r\n\r\nexport function isJsonAuth(arg: any): arg is JsonAuth {\r\n  try {\r\n    jsonAuthSchema.isValidSync(arg);\r\n    return true;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n","import { Action, action, Computed, computed, Thunk, thunk } from \"easy-peasy\";\r\nimport { Auth } from \"./auth.class\";\r\nimport { AuthService } from \"../../services/AuthService\";\r\nimport { JsonAuth, isJsonAuth } from \"./auth.json\";\r\nimport { StoreInjections, StoreModel } from \"../../store\";\r\n\r\nexport interface AuthModel {\r\n  /**\r\n   * Initialized state: has the profile been fetched at the least once\r\n   */\r\n  initialized: boolean;\r\n  _setInitialized: Action<AuthModel, boolean>;\r\n\r\n  /**\r\n   * Currently logged in user or null if none logged in\r\n   */\r\n  user: Auth | null;\r\n\r\n  /**\r\n   * Computed property for whether the user is currently logged in\r\n   */\r\n  isLoggedIn: Computed<AuthModel, boolean>;\r\n\r\n  /**\r\n   * Current access token for authentication in memory for security purposes.\r\n   * This is automatically refreshed when making a request with a service and\r\n   * should not be manually set.\r\n   */\r\n  accessToken: string | null;\r\n\r\n  /**\r\n   * Function to set the access token\r\n   */\r\n  _setAccessToken: Action<AuthModel, string>;\r\n\r\n  /**\r\n   * Action to set the current user with partial user JSON object\r\n   */\r\n  _login: Action<AuthModel, JsonAuth>;\r\n\r\n  /**\r\n   * Action to set the current user to null\r\n   */\r\n  _logout: Action<AuthModel, void>;\r\n\r\n  /**\r\n   * Function to get the currently logged in user's profile data and apply it\r\n   * to the user property. The logged in property is defined by the current\r\n   * refresh token.\r\n   */\r\n  getProfile: Thunk<\r\n    AuthModel,\r\n    void,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<AuthService[\"getProfile\"]>\r\n  >;\r\n\r\n  /**\r\n   * Log in the current user with a Google account\r\n   */\r\n  loginWithGoogle: Thunk<\r\n    AuthModel,\r\n    void,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<AuthService[\"loginWithGoogle\"]>\r\n  >;\r\n\r\n  /**\r\n   * Register the current user with email and password\r\n   */\r\n  registerWithEmailPassword: Thunk<\r\n    AuthModel,\r\n    { email: string; password: string },\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<AuthService[\"registerWithEmailAndPassword\"]>\r\n  >;\r\n\r\n  /**\r\n   * Log in the current user with email and password\r\n   */\r\n  loginWithEmailPassword: Thunk<\r\n    AuthModel,\r\n    { email: string; password: string },\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<AuthService[\"loginWithEmailAndPassword\"]>\r\n  >;\r\n\r\n  /**\r\n   * Forgot password\r\n   */\r\n  forgotPassword: Thunk<\r\n    AuthModel,\r\n    { email: string },\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<AuthService[\"forgotPassword\"]>\r\n  >;\r\n\r\n  /**\r\n   * Log out the current user\r\n   */\r\n  logout: Thunk<\r\n    AuthModel,\r\n    void,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<AuthService[\"logout\"]>\r\n  >;\r\n\r\n  /**\r\n   * Validate a change password token\r\n   */\r\n  validateChangePasswordToken: Thunk<\r\n    AuthModel,\r\n    Parameters<AuthService[\"validatePasswordChangeToken\"]>[0],\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<AuthService[\"validatePasswordChangeToken\"]>\r\n  >;\r\n\r\n  /**\r\n   * Change a user's password\r\n   */\r\n  changePassword: Thunk<\r\n    AuthModel,\r\n    Parameters<AuthService[\"changePassword\"]>[0],\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<AuthService[\"changePassword\"]>\r\n  >;\r\n\r\n  /**\r\n   * Confirm a user's email\r\n   */\r\n  confirmEmail: Thunk<\r\n    AuthModel,\r\n    Parameters<AuthService[\"confirmEmail\"]>[0],\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<AuthService[\"confirmEmail\"]>\r\n  >;\r\n}\r\n\r\n/**\r\n * Implementation of the authentication model\r\n */\r\nexport const authModel: AuthModel = {\r\n  initialized: false,\r\n  _setInitialized: action((state, boolean) => {\r\n    state.initialized = boolean;\r\n  }),\r\n\r\n  user: null,\r\n\r\n  isLoggedIn: computed((state) => Boolean(state.user)),\r\n\r\n  accessToken: null,\r\n\r\n  _setAccessToken: action((state, newAccessToken) => {\r\n    state.accessToken = newAccessToken;\r\n  }),\r\n\r\n  _login: action((state, json) => {\r\n    if (isJsonAuth(json)) {\r\n      state.user = new Auth(json);\r\n    }\r\n  }),\r\n\r\n  _logout: action((state) => {\r\n    state.user = null;\r\n    state.accessToken = null;\r\n  }),\r\n\r\n  getProfile: thunk(async (actions, payload, { injections }) => {\r\n    const profileResult = await injections.authService.getProfile();\r\n    profileResult.onSuccess((profile) => {\r\n      actions._login(profile);\r\n    });\r\n    actions._setInitialized(true);\r\n    return profileResult;\r\n  }),\r\n\r\n  loginWithGoogle: thunk((actions, payload, { injections }) => {\r\n    return injections.authService.loginWithGoogle();\r\n  }),\r\n\r\n  loginWithEmailPassword: thunk(async (actions, payload, { injections }) => {\r\n    const result = await injections.authService.loginWithEmailAndPassword(\r\n      payload\r\n    );\r\n    result.onSuccess(async () => {\r\n      const profileResult = await injections.authService.getProfile();\r\n      profileResult.onSuccess((profile) => {\r\n        actions._login(profile);\r\n      });\r\n    });\r\n    return result;\r\n  }),\r\n\r\n  registerWithEmailPassword: thunk(async (actions, payload, { injections }) => {\r\n    const result = await injections.authService.registerWithEmailAndPassword(\r\n      payload\r\n    );\r\n    if (result.isSuccess()) {\r\n      const profileResult = await injections.authService.getProfile();\r\n      profileResult.onSuccess((profile) => {\r\n        actions._login(profile);\r\n      });\r\n    }\r\n    return result;\r\n  }),\r\n\r\n  forgotPassword: thunk(async (actions, payload, { injections }) => {\r\n    const result = await injections.authService.forgotPassword(payload);\r\n    return result;\r\n  }),\r\n\r\n  validateChangePasswordToken: thunk(\r\n    async (actions, payload, { injections }) => {\r\n      const result = await injections.authService.validatePasswordChangeToken(\r\n        payload\r\n      );\r\n      return result;\r\n    }\r\n  ),\r\n\r\n  changePassword: thunk(async (actions, payload, { injections }) => {\r\n    const result = await injections.authService.changePassword(payload);\r\n    return result;\r\n  }),\r\n\r\n  confirmEmail: thunk(async (actions, payload, { injections }) => {\r\n    const result = await injections.authService.confirmEmail(payload);\r\n    return result;\r\n  }),\r\n\r\n  logout: thunk(async (actions, payload, { injections }) => {\r\n    const result = await injections.authService.logout();\r\n    result.onSuccess(() => {\r\n      actions._logout();\r\n    });\r\n    return result;\r\n  }),\r\n};\r\n","export class MoneyAmount {\r\n  /**\r\n   * Value of money amount as integer in cents\r\n   */\r\n  private _value: number;\r\n\r\n  /**\r\n   * Construct a money amount from an integer value in cents.\r\n   *\r\n   * @throws Error if input value is not an integer.\r\n   */\r\n  constructor(cents: number) {\r\n    if (Math.trunc(cents) !== cents) {\r\n      throw new Error(\"Cannot construct money amount from non-integer value\");\r\n    }\r\n    this._value = cents;\r\n  }\r\n\r\n  /**\r\n   * The money amount's value as an integer in cents.\r\n   */\r\n  get value(): number {\r\n    return this._value;\r\n  }\r\n\r\n  /**\r\n   * The money amount's value in euros.\r\n   */\r\n  get decimalValue(): number {\r\n    return this._value / 100;\r\n  }\r\n\r\n  /**\r\n   * Get the value in euros as an integer\r\n   */\r\n  get euros() {\r\n    return Math.trunc(this._value / 100);\r\n  }\r\n\r\n  /**\r\n   * Get the amount of cents in value\r\n   *\r\n   * Returns the remainder when converting the value to euros,\r\n   * i.e. a value between 0 - 99, not the full value counted in cents.\r\n   */\r\n  get cents() {\r\n    return Math.floor(this._value % 100);\r\n  }\r\n\r\n  /**\r\n   * Gets the sign of the money amount\r\n   *\r\n   * - Returns -1 for negative money amounts\r\n   * - Returns 0 for zero amounts\r\n   * - Returns +1 for positive money amounts\r\n   */\r\n  get sign(): -1 | 0 | 1 {\r\n    return this._value === 0 ? 0 : this._value > 0 ? 1 : -1;\r\n  }\r\n\r\n  /**\r\n   * True if the amount is a positive amount (> 0)\r\n   */\r\n  get isPositive() {\r\n    return this._value > 0;\r\n  }\r\n\r\n  /**\r\n   * True if the amount is a positive amount or zero (>= 0)\r\n   */\r\n  get isNonNegative() {\r\n    return this._value >= 0;\r\n  }\r\n\r\n  /**\r\n   * True if the amount is zero (== 0)\r\n   */\r\n  get isZero() {\r\n    return this._value === 0;\r\n  }\r\n\r\n  /**\r\n   * True if the amount is a negative amount or zero (<= 0)\r\n   */\r\n  get isNonPositive() {\r\n    return this._value <= 0;\r\n  }\r\n\r\n  /**\r\n   * True if the amount is a negative amount (< 0)\r\n   */\r\n  get isNegative() {\r\n    return this._value < 0;\r\n  }\r\n\r\n  /**\r\n   * Format the money amount to a string according to the given options\r\n   */\r\n  format(options?: Partial<MoneyAmountFormatOptions>): string {\r\n    const o = { ...defaultMoneyAmountFormatOptions, ...options };\r\n\r\n    let s = \"\";\r\n\r\n    switch (o.sign) {\r\n      case \"always\":\r\n        if (this.isPositive) s += \"+\";\r\n        if (this.isNegative) s += \"-\";\r\n        break;\r\n      case \"if-positive\":\r\n        if (this.isPositive) s += \"+\";\r\n        break;\r\n      case \"if-negative\":\r\n        if (this.isNegative) s += \"-\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    switch (o.spaces) {\r\n      case \"always\":\r\n        s += \" \";\r\n        break;\r\n      case \"after-sign\":\r\n        s += \" \";\r\n        break;\r\n    }\r\n\r\n    switch (o.thousandSpaces) {\r\n      case \"always\":\r\n        s += Math.abs(this.euros)\r\n          .toFixed(0)\r\n          .split(\"\")\r\n          .reverse()\r\n          .map((char, i) => (i % 3 === 2 ? \" \" + char : char))\r\n          .reverse()\r\n          .join(\"\");\r\n        break;\r\n      case \"omit\":\r\n        s += Math.abs(this.euros).toFixed(0);\r\n        break;\r\n    }\r\n\r\n    switch (o.separator) {\r\n      case \",\":\r\n        s += \",\";\r\n        break;\r\n      case \".\":\r\n        s += \".\";\r\n        break;\r\n    }\r\n\r\n    switch (true) {\r\n      case true:\r\n        s += this.cents.toFixed(0);\r\n    }\r\n\r\n    switch (o.spaces) {\r\n      case \"always\":\r\n        s += \" \";\r\n        break;\r\n      case \"before-unit\":\r\n        s += \" \";\r\n        break;\r\n    }\r\n\r\n    switch (o.unit) {\r\n      case \"long\":\r\n        s += \"EUR\";\r\n        break;\r\n      case \"symbol\":\r\n        s += \"€\";\r\n        break;\r\n    }\r\n\r\n    return s.trim();\r\n  }\r\n\r\n  add(that: MoneyAmount) {\r\n    return new MoneyAmount(this._value + that._value);\r\n  }\r\n\r\n  subtract(that: MoneyAmount) {\r\n    return new MoneyAmount(this._value - that._value);\r\n  }\r\n\r\n  static sum(values: MoneyAmount[]) {\r\n    return values.reduce((sum, value) => sum.add(value), new MoneyAmount(0));\r\n  }\r\n}\r\n\r\n/**\r\n * Options for formatting a string\r\n */\r\nexport type MoneyAmountFormatOptions = {\r\n  /**\r\n   * Option for formatting the sign\r\n   *\r\n   * | value         | positive example | negative example | zero example |\r\n   * |---------------|------------------|------------------|--------------|\r\n   * | `omit`        | `123,45 €`       | `123,45 €`       | `0,00 €`     |\r\n   * | `if-negative` | `123,45 €`       | `- 123,45 €`     | `0,00 €`     |\r\n   * | `if-positive` | `+ 123,45 €`     | `123,45 €`       | `0,00 €`     |\r\n   * | `always`      | `+ 123,45 €`     | `- 123,45 €`     | `0,00 €`     |\r\n   *\r\n   * A zero amount will never be given a sign\r\n   *\r\n   * Defaults to `always`\r\n   */\r\n  sign: \"omit\" | \"if-negative\" | \"if-positive\" | \"always\";\r\n\r\n  /**\r\n   * Option for spacing between the sign, numeric value and the unit.\r\n   *\r\n   * | value         | example      |\r\n   * |---------------|--------------|\r\n   * | `omit`        | `+123,45€`   |\r\n   * | `after-sign`  | `+ 123,45€`  |\r\n   * | `before-unit` | `+123,45 €`  |\r\n   * | `always`      | `+ 123,45 €` |\r\n   *\r\n   * If unit or sign is omitted, no space will be inserted.\r\n   *\r\n   * Defaults to `always`\r\n   */\r\n  spaces: \"omit\" | \"always\" | \"after-sign\" | \"before-unit\";\r\n\r\n  /**\r\n   * Option for formatting the thousands separation\r\n   *\r\n   * | value         | example             |\r\n   * |---------------|---------------------|\r\n   * | `omit`        | `+ 12345678,00 €`   |\r\n   * | `always`      | `+ 12 345 678,00 €` |\r\n   *\r\n   * Defaults to `always`\r\n   */\r\n  thousandSpaces: \"omit\" | \"always\";\r\n\r\n  /**\r\n   * Option for the decimal separator\r\n   *\r\n   * | value | example      |\r\n   * |-------|--------------|\r\n   * | `,`   | `+ 123,45 €` |\r\n   * | `.`   | `+ 123.45 €` |\r\n   *\r\n   * Defaults to `.`\r\n   */\r\n  separator: \",\" | \".\";\r\n\r\n  /**\r\n   * Option for the unit\r\n   *\r\n   * | value    | example (with euros) |\r\n   * |----------|----------------------|\r\n   * | `omit`   | \"- 123,45\"           |\r\n   * | `long`   | \"- 123,45 EUR\"       |\r\n   * | `symbol` | \"- 123,45 €\"         |\r\n   *\r\n   * Defaults to `symbol`\r\n   */\r\n  unit: \"omit\" | \"long\" | \"symbol\";\r\n};\r\n\r\n/**\r\n * Default options for formatting a string\r\n */\r\nexport const defaultMoneyAmountFormatOptions: MoneyAmountFormatOptions = {\r\n  sign: \"always\",\r\n  spaces: \"always\",\r\n  thousandSpaces: \"always\",\r\n  separator: \".\",\r\n  unit: \"symbol\",\r\n};\r\n","import { JsonTransaction } from \"./transactions.json\";\r\nimport * as uuid from \"uuid\";\r\nimport { MoneyAmount } from \"../../utils/MoneyAmount\";\r\n\r\nexport class Transaction {\r\n  date: Date;\r\n  category: string;\r\n  comment: string;\r\n  amount: MoneyAmount;\r\n  id: string;\r\n  uid: string;\r\n\r\n  constructor(json: JsonTransaction) {\r\n    this.date = new Date(json.time);\r\n    this.comment = json.comment || \"\";\r\n    this.category = json.category;\r\n    this.amount = new MoneyAmount(Math.floor(json.integerAmount));\r\n    this.id = json.id || uuid.v4();\r\n    this.uid = json.uid;\r\n  }\r\n\r\n  toJson(): JsonTransaction {\r\n    return {\r\n      time: this.date.getTime(),\r\n      category: this.category,\r\n      comment: this.comment,\r\n      integerAmount: this.amount.value,\r\n      id: this.id,\r\n      uid: this.uid,\r\n    };\r\n  }\r\n}\r\n","import * as datefns from \"date-fns\";\r\n\r\nexport function groupByDate<T>(\r\n  items: T[],\r\n  getDate: (t: T) => Date,\r\n  options?: { sort?: boolean }\r\n): { date: Date; items: T[] }[] {\r\n  // Function to extract a key from an item which has a date\r\n  function getKey(item: T): string {\r\n    const date = getDate(item);\r\n    return datefns.lightFormat(date, \"yyyy-MM-dd\");\r\n  }\r\n\r\n  // Get all items by their keys\r\n  const itemsByKey = items.reduce((res, item) => {\r\n    const key = getKey(item);\r\n    return {\r\n      ...res,\r\n      [key]: [...(res[key] ?? []), item],\r\n    };\r\n  }, {} as Record<string, T[]>);\r\n\r\n  // Map to array, where each key is mapped to a date\r\n  const result = Object.entries(itemsByKey).map((entry) => {\r\n    return {\r\n      date: datefns.startOfDay(new Date(entry[0])),\r\n      items: entry[1],\r\n    };\r\n  });\r\n\r\n  // Return result, optionally sorted\r\n  if (options?.sort) {\r\n    return result.sort((a, b) => {\r\n      return b.date.getTime() - a.date.getTime();\r\n    });\r\n  } else {\r\n    return result;\r\n  }\r\n}\r\n","export type DateCompareOperator = \">\" | \">=\" | \"==\" | \"<=\" | \"<\";\r\n\r\n/**\r\n * Utility function to compare two dates, where only the date is taken into\r\n * account, not the time.\r\n *\r\n * @param a  Left hand operator date\r\n * @param op Operator to specify which comparison to run\r\n * @param b  Right hand operator date\r\n */\r\nexport function compareDate(a: Date, op: DateCompareOperator, b: Date) {\r\n  // Serialize dates for easy comparison\r\n  const _a = serializeDate(a);\r\n  const _b = serializeDate(b);\r\n\r\n  switch (op) {\r\n    case \"<\":\r\n      return _a < _b;\r\n    case \"<=\":\r\n      return _a <= _b;\r\n    case \"==\":\r\n      return _a === _b;\r\n    case \">=\":\r\n      return _a >= _b;\r\n    case \">\":\r\n      return _a > _b;\r\n  }\r\n}\r\n\r\n/**\r\n * Helper function for above function to serialize dates, taking only into account\r\n * the date, month and year, not the time.\r\n *\r\n * @param date Date to serialize\r\n */\r\nfunction serializeDate(date: Date) {\r\n  return date.getFullYear() * 341 + date.getMonth() * 31 + date.getDate();\r\n}\r\n","import { computed, Computed } from \"easy-peasy\";\r\nimport { Transaction } from \"./transactions.class\";\r\nimport { MoneyAmount } from \"../../utils/MoneyAmount\";\r\nimport { groupByDate } from \"../../utils/groupByDate\";\r\nimport { StoreModel } from \"../../store\";\r\nimport { compareDate } from \"../../utils/compareDate\";\r\n\r\nexport interface FilteredTransactionsModel {\r\n  /**\r\n   * All user's current transactions after filterign\r\n   */\r\n  items: Computed<FilteredTransactionsModel, Transaction[], StoreModel>;\r\n\r\n  /**\r\n   * Filtered transactions grouped and sorted by dates\r\n   */\r\n  itemsByDates: Computed<\r\n    FilteredTransactionsModel,\r\n    { date: Date; items: Transaction[] }[],\r\n    StoreModel\r\n  >;\r\n\r\n  /**\r\n   * Filtered amount of transactions\r\n   */\r\n  count: Computed<FilteredTransactionsModel, number, StoreModel>;\r\n\r\n  /**\r\n   * Sums of filtered transactions\r\n   */\r\n  sums: Computed<\r\n    FilteredTransactionsModel,\r\n    {\r\n      all: MoneyAmount;\r\n      expenses: MoneyAmount;\r\n      incomes: MoneyAmount;\r\n    },\r\n    StoreModel\r\n  >;\r\n}\r\n\r\nexport const filteredTransactionsModel: FilteredTransactionsModel = {\r\n  items: computed(\r\n    [\r\n      (_, storeState) => storeState.transactions.items,\r\n      (_, storeState) => storeState.interval.startDate,\r\n      (_, storeState) => storeState.interval.endDate,\r\n    ],\r\n    (items, startDate, endDate) => {\r\n      return items.filter((item) => {\r\n        if (compareDate(item.date, \"<\", startDate)) return false;\r\n        if (compareDate(item.date, \">\", endDate)) return false;\r\n        return true;\r\n      });\r\n    }\r\n  ),\r\n\r\n  itemsByDates: computed(\r\n    [(_, storeState) => storeState.transactions.filtered.items],\r\n    (items) => {\r\n      return groupByDate(items, (_) => _.date, { sort: true });\r\n    }\r\n  ),\r\n\r\n  count: computed(\r\n    [(_, storeState) => storeState.transactions.filtered.items],\r\n    (items) => {\r\n      return items.length;\r\n    }\r\n  ),\r\n\r\n  sums: computed(\r\n    [(_, storeState) => storeState.transactions.filtered.items],\r\n    (items) => {\r\n      const incomes = items\r\n        .filter((_) => _.amount.isPositive)\r\n        .reduce((sum, item) => sum + item.amount.value, 0);\r\n      const expenses = items\r\n        .filter((_) => _.amount.isNegative)\r\n        .reduce((sum, item) => sum + item.amount.value, 0);\r\n      return {\r\n        all: new MoneyAmount(incomes + expenses),\r\n        incomes: new MoneyAmount(incomes),\r\n        expenses: new MoneyAmount(expenses),\r\n      };\r\n    }\r\n  ),\r\n};\r\n","import {\r\n  Action,\r\n  action,\r\n  Computed,\r\n  computed,\r\n  Thunk,\r\n  thunk,\r\n  ThunkOn,\r\n  thunkOn,\r\n} from \"easy-peasy\";\r\nimport { Transaction } from \"./transactions.class\";\r\nimport { JsonTransaction } from \"./transactions.json\";\r\nimport { TransactionService } from \"../../services/TransactionService\";\r\nimport { StoreModel, StoreInjections } from \"../../store\";\r\nimport { groupByDate } from \"../../utils/groupByDate\";\r\nimport { MoneyAmount } from \"../../utils/MoneyAmount\";\r\nimport {\r\n  filteredTransactionsModel,\r\n  FilteredTransactionsModel,\r\n} from \"./transactions.filtered.model\";\r\n\r\nexport interface TransactionsModel {\r\n  /**\r\n   * All user's current transactions\r\n   */\r\n  items: Transaction[];\r\n\r\n  /**\r\n   * Current transactions grouped and sorted by dates\r\n   */\r\n  itemsByDates: Computed<\r\n    TransactionsModel,\r\n    { date: Date; items: Transaction[] }[]\r\n  >;\r\n\r\n  /**\r\n   * Current amount of transactions\r\n   */\r\n  count: Computed<TransactionsModel, number>;\r\n\r\n  /**\r\n   * Sum of transactions\r\n   */\r\n  sums: Computed<\r\n    TransactionsModel,\r\n    {\r\n      all: MoneyAmount;\r\n      expenses: MoneyAmount;\r\n      incomes: MoneyAmount;\r\n    }\r\n  >;\r\n\r\n  /**\r\n   * Filtered properties (copies of the above properties using only\r\n   * filtered items)\r\n   */\r\n  filtered: FilteredTransactionsModel;\r\n\r\n  /**\r\n   * All different categories\r\n   */\r\n  categories: Computed<TransactionsModel, string[]>;\r\n\r\n  /**\r\n   * Fetch all transactions for user from server\r\n   */\r\n  getTransactions: Thunk<\r\n    TransactionsModel,\r\n    void,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<TransactionService[\"getTransactions\"]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by get transaction thunk to update get result to state\r\n   */\r\n  _getTransactions: Action<TransactionsModel, JsonTransaction[]>;\r\n\r\n  /**\r\n   * Post and update transaction to state\r\n   */\r\n  postTransaction: Thunk<\r\n    TransactionsModel,\r\n    Omit<JsonTransaction, \"id\" | \"uid\">,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<TransactionService[\"postTransaction\"]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by post transaction thunk to update post result to state\r\n   */\r\n  _postTransaction: Action<TransactionsModel, JsonTransaction>;\r\n\r\n  /**\r\n   * Delete and remove transaction from state\r\n   */\r\n  deleteTransaction: Thunk<\r\n    TransactionsModel,\r\n    string,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<TransactionService[\"deleteTransaction\"]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by delete transaction thunk to update delete result to state\r\n   */\r\n  _deleteTransaction: Action<TransactionsModel, string>;\r\n\r\n  /**\r\n   * Put and update transaction to state\r\n   */\r\n  putTransaction: Thunk<\r\n    TransactionsModel,\r\n    JsonTransaction,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<TransactionService[\"putTransaction\"]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by put transaction thunk to update put result to state\r\n   */\r\n  _putTransaction: Action<TransactionsModel, JsonTransaction>;\r\n\r\n  /**\r\n   * Patch and update transaction to state\r\n   */\r\n  patchTransaction: Thunk<\r\n    TransactionsModel,\r\n    JsonTransaction,\r\n    StoreInjections,\r\n    StoreModel,\r\n    ReturnType<TransactionService[\"patchTransaction\"]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by patch transaction thunk to update patch result to state\r\n   */\r\n  _patchTransaction: Action<TransactionsModel, JsonTransaction>;\r\n\r\n  /**\r\n   * Listening to auth changes\r\n   */\r\n  onAuthChanged: ThunkOn<TransactionsModel, any, StoreModel>;\r\n\r\n  _clearTransactions: Action<TransactionsModel, void>;\r\n}\r\n\r\nexport const transactionsModel: TransactionsModel = {\r\n  items: [],\r\n\r\n  itemsByDates: computed((state) => {\r\n    return groupByDate(state.items, (_) => _.date, { sort: true });\r\n  }),\r\n\r\n  count: computed((state) => state.items.length),\r\n\r\n  sums: computed((state) => {\r\n    const incomes = state.items\r\n      .filter((_) => _.amount.isPositive)\r\n      .reduce((sum, item) => sum + item.amount.value, 0);\r\n    const expenses = state.items\r\n      .filter((_) => _.amount.isNegative)\r\n      .reduce((sum, item) => sum + item.amount.value, 0);\r\n    return {\r\n      all: new MoneyAmount(incomes + expenses),\r\n      incomes: new MoneyAmount(incomes),\r\n      expenses: new MoneyAmount(expenses),\r\n    };\r\n  }),\r\n\r\n  filtered: filteredTransactionsModel,\r\n\r\n  categories: computed((state) =>\r\n    state.items.map((_) => _.category).filter((c, i, a) => a.indexOf(c) === i)\r\n  ),\r\n\r\n  getTransactions: thunk(async (actions, payload, { injections }) => {\r\n    const result = await injections.transactionService.getTransactions();\r\n    result.onSuccess((json) => actions._getTransactions(json));\r\n    return result;\r\n  }),\r\n\r\n  _getTransactions: action((state, jsons) => {\r\n    state.items = jsons.map((json) => new Transaction(json));\r\n  }),\r\n\r\n  postTransaction: thunk(async (actions, json, { injections }) => {\r\n    const result = await injections.transactionService.postTransaction(json);\r\n    result.onSuccess((json) => actions._postTransaction(json));\r\n    return result;\r\n  }),\r\n\r\n  _postTransaction: action((state, json) => {\r\n    state.items.push(new Transaction(json));\r\n  }),\r\n\r\n  deleteTransaction: thunk(async (actions, id, { injections }) => {\r\n    const result = await injections.transactionService.deleteTransaction(id);\r\n    result.onSuccess(() => actions.deleteTransaction(id));\r\n    return result;\r\n  }),\r\n\r\n  _deleteTransaction: action((state, id) => {\r\n    state.items = state.items.filter((item) => item.id !== id);\r\n  }),\r\n\r\n  putTransaction: thunk(async (actions, json, { injections }) => {\r\n    const result = await injections.transactionService.putTransaction(json);\r\n    result.onSuccess((json) => actions._putTransaction(json));\r\n    return result;\r\n  }),\r\n\r\n  _putTransaction: action((state, json) => {\r\n    state.items = state.items.map((item) =>\r\n      item.id === json.id ? new Transaction(json) : item\r\n    );\r\n  }),\r\n\r\n  patchTransaction: thunk(async (actions, json, { injections }) => {\r\n    const result = await injections.transactionService.patchTransaction(json);\r\n    result.onSuccess((json) => actions._patchTransaction(json));\r\n    return result;\r\n  }),\r\n\r\n  _patchTransaction: action((state, json) => {\r\n    state.items = state.items.map((item) =>\r\n      item.id === json.id ? new Transaction(json) : item\r\n    );\r\n  }),\r\n\r\n  onAuthChanged: thunkOn(\r\n    (_, store) => [store.auth.logout, store.auth._login],\r\n    (actions, target) => {\r\n      const [loggedOut, loggedIn] = target.resolvedTargets;\r\n      switch (target.type) {\r\n        case loggedOut:\r\n          actions._clearTransactions();\r\n          break;\r\n        case loggedIn:\r\n          actions.getTransactions();\r\n          break;\r\n      }\r\n    }\r\n  ),\r\n\r\n  _clearTransactions: action((state) => {\r\n    state.items = [];\r\n  }),\r\n};\r\n","import { Action, action, Computed, computed } from \"easy-peasy\";\r\nimport * as datefns from \"date-fns\";\r\nimport { compareDate } from \"../../utils/compareDate\";\r\n\r\nexport type IntervalModel = {\r\n  /**\r\n   * Date filter start limit.\r\n   *\r\n   * All transactions with the same or later date will pass this filter.\r\n   * The time of day is not taken into account while comparing dates.\r\n   *\r\n   * Defaults to start date of current month.\r\n   */\r\n  startDate: Date;\r\n\r\n  /**\r\n   * Date filter end limit.\r\n   *\r\n   * All transactions with the same or earlier date will pass this filter.\r\n   * The time of day is not taken into account while comparing dates.\r\n   *\r\n   * Defaults to end date of current month.\r\n   */\r\n  endDate: Date;\r\n\r\n  /**\r\n   * Action to manually specify the start date filter\r\n   */\r\n  setStartDate: Action<IntervalModel, Date>;\r\n\r\n  /**\r\n   * Action to manually specify the end date filter\r\n   */\r\n  setEndDate: Action<IntervalModel, Date>;\r\n\r\n  /**\r\n   * Action to manually specify start and end dates for interval simultaneously\r\n   */\r\n  setInterval: Action<IntervalModel, { startDate: Date; endDate: Date }>;\r\n\r\n  /**\r\n   * Move interval forward\r\n   *\r\n   * - If interval is year, select next year\r\n   * - If interval is month, select next month\r\n   * - If interval is week, select next week\r\n   * - If interval is other, select next interval of same length\r\n   *   starting from the end date of the current interval.\r\n   */\r\n  nextInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Move interval backwards\r\n   *\r\n   * - If interval is year, select previous year\r\n   * - If interval is month, select previous month\r\n   * - If interval is week, select previous week\r\n   * - If interval is other, select previous interval of same length\r\n   *   ending at the starting date of the current interval.\r\n   */\r\n  previousInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Move interval to nearest week\r\n   */\r\n  weekInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Move interval to nearest month\r\n   */\r\n  monthInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Move interval to nearest year\r\n   */\r\n  yearInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Is the urrent date interval a signle full week\r\n   */\r\n  isWeek: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * Is the current date interval a single full month\r\n   */\r\n  isMonth: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * Is the current date interval a single full year\r\n   */\r\n  isYear: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * Smarter display string that displays in format...\r\n   *\r\n   * - `MMMM, yyyy` (e.g. `July, 1999`) when `isMonth` is `true`\r\n   * - `MMMM, yyyy` (e.g. `July, 1999`) when `isMonth` is `true`\r\n   *\r\n   * Else falls back to `displayString` property and the\r\n   * `d.M. - d.M.yyyy` or `d.M.yyyy - d.M.yyyy` format.\r\n   */\r\n  smartDisplayString: Computed<IntervalModel, string>;\r\n\r\n  /**\r\n   * Display string of format\r\n   *\r\n   * `d.M. - d.M.yyyy` or `d.M.yyyy - d.M.yyyy` if dates\r\n   * are in different years.\r\n   *\r\n   * For example\r\n   * - `1.12. - 7.12.2020`\r\n   * - `30.12.1999 - 5.1.2000`\r\n   */\r\n  displayString: Computed<IntervalModel, string>;\r\n};\r\n\r\nexport const intervalModel: IntervalModel = {\r\n  startDate: datefns.startOfMonth(new Date()),\r\n\r\n  endDate: datefns.endOfMonth(new Date()),\r\n\r\n  setStartDate: action((state, date) => {\r\n    if (compareDate(date, \">\", state.endDate)) {\r\n      throw new Error(\"Start date cannot be after end date\");\r\n    } else {\r\n      state.startDate = date;\r\n    }\r\n  }),\r\n\r\n  setEndDate: action((state, date) => {\r\n    if (compareDate(date, \"<\", state.startDate)) {\r\n      throw new Error(\"End date cannot be before start date\");\r\n    } else {\r\n      state.endDate = date;\r\n    }\r\n  }),\r\n\r\n  setInterval: action((state, dates) => {\r\n    if (compareDate(dates.startDate, \">\", dates.endDate)) {\r\n      throw new Error(\"End date cannot be before start date\");\r\n    } else {\r\n      state.startDate = dates.startDate;\r\n      state.endDate = dates.endDate;\r\n    }\r\n  }),\r\n\r\n  nextInterval: action((state) => {\r\n    const length = datefns.differenceInDays(state.startDate, state.endDate);\r\n    const newStartDate = datefns.addDays(state.endDate, 1);\r\n    if (state.isYear) {\r\n      state.endDate = datefns.endOfYear(newStartDate);\r\n    } else if (state.isMonth) {\r\n      state.endDate = datefns.endOfMonth(newStartDate);\r\n    } else if (state.isWeek) {\r\n      state.endDate = datefns.endOfWeek(newStartDate, { weekStartsOn: 1 });\r\n    } else {\r\n      state.endDate = datefns.addDays(newStartDate, length);\r\n    }\r\n    state.startDate = newStartDate;\r\n  }),\r\n\r\n  previousInterval: action((state) => {\r\n    const length = datefns.differenceInDays(state.startDate, state.endDate);\r\n    const newEndDate = datefns.subDays(state.startDate, 1);\r\n    if (state.isYear) {\r\n      state.startDate = datefns.startOfYear(newEndDate);\r\n    } else if (state.isMonth) {\r\n      state.startDate = datefns.startOfMonth(newEndDate);\r\n    } else if (state.isWeek) {\r\n      state.startDate = datefns.startOfWeek(newEndDate, { weekStartsOn: 1 });\r\n    } else {\r\n      state.startDate = datefns.subDays(newEndDate, length);\r\n    }\r\n    state.endDate = newEndDate;\r\n  }),\r\n\r\n  weekInterval: action((state) => {\r\n    state.startDate = datefns.startOfWeek(state.startDate, { weekStartsOn: 1 });\r\n    state.endDate = datefns.endOfWeek(state.startDate, { weekStartsOn: 1 });\r\n  }),\r\n\r\n  monthInterval: action((state) => {\r\n    state.startDate = datefns.startOfMonth(state.startDate);\r\n    state.endDate = datefns.endOfMonth(state.startDate);\r\n  }),\r\n\r\n  yearInterval: action((state) => {\r\n    state.startDate = datefns.startOfYear(state.startDate);\r\n    state.endDate = datefns.endOfYear(state.startDate);\r\n  }),\r\n\r\n  isYear: computed((state) => {\r\n    return (\r\n      datefns.isSameYear(state.startDate, state.endDate) &&\r\n      datefns.getDayOfYear(state.startDate) === 1 &&\r\n      datefns.isSameDay(state.endDate, datefns.lastDayOfYear(state.endDate))\r\n    );\r\n  }),\r\n\r\n  isMonth: computed((state) => {\r\n    return (\r\n      datefns.isSameMonth(state.startDate, state.endDate) &&\r\n      datefns.isFirstDayOfMonth(state.startDate) &&\r\n      datefns.isLastDayOfMonth(state.endDate)\r\n    );\r\n  }),\r\n\r\n  isWeek: computed((state) => {\r\n    return (\r\n      datefns.isSameWeek(state.startDate, state.endDate, { weekStartsOn: 1 }) &&\r\n      datefns.getDay(state.startDate) === 1 &&\r\n      datefns.getDay(state.endDate) === 0\r\n    );\r\n  }),\r\n\r\n  smartDisplayString: computed((state) => {\r\n    if (state.isYear) {\r\n      return datefns.format(state.startDate, \"yyyy\");\r\n    } else if (state.isMonth) {\r\n      return datefns.format(state.startDate, \"MMMM, yyyy\");\r\n    } else {\r\n      return state.displayString;\r\n    }\r\n  }),\r\n\r\n  displayString: computed((state) => {\r\n    return (\r\n      (datefns.isSameYear(state.startDate, state.endDate)\r\n        ? datefns.format(state.startDate, \"d.M\")\r\n        : datefns.format(state.startDate, \"d.M.yyyy\")) +\r\n      \" - \" +\r\n      datefns.format(state.endDate, \"d.M.yyyy\")\r\n    );\r\n  }),\r\n};\r\n","export class Config {\r\n  static get API_URL() {\r\n    const env = process.env.NODE_ENV;\r\n    if (!env || env === \"development\") {\r\n      return \"http://localhost:4000\";\r\n    } else if (env === \"test\") {\r\n      return \"http://localhost:4001\";\r\n    } else {\r\n      return \"https://expenceapp.herokuapp.com\";\r\n    }\r\n  }\r\n}\r\n","import { AxiosError } from \"axios\";\r\n\r\n/**\r\n * Defines properties of a problem\r\n */\r\nexport type IProblem<T = undefined> = {\r\n  /**\r\n   * Message property defines a human readable definition of the error message.\r\n   */\r\n  message: string;\r\n\r\n  /**\r\n   * Status defines a status code for the problem.\r\n   *\r\n   * Codes\r\n   * - `10-19` Local error\r\n   * - `20-29` Local network and service errors\r\n   * - - `21` Network error or could not reach server\r\n   * - - `22` Could not formulate request\r\n   * - - `23` Invalid data received from server\r\n   * - `100 - 599` Reserved for corresponding HTTP codes\r\n   */\r\n  status: number;\r\n\r\n  /**\r\n   * Code defines a stringified code of the problem for better error handling\r\n   * and responses. Use kebab-case.\r\n   *\r\n   * Codes are defined as follow\r\n   *\r\n   * `domain/{subdomains/.../}definition`\r\n   *\r\n   * Following codes are examples of valid codes\r\n   *\r\n   * - `auth/unauthenticated`\r\n   * - `data/already-exists`\r\n   */\r\n  code: string;\r\n\r\n  /**\r\n   * Define any extra data that is passed to the problem.\r\n   */\r\n  data: T;\r\n};\r\n\r\nexport class Problem<T extends object = {}> implements IProblem<T> {\r\n  message: string;\r\n\r\n  status: number;\r\n\r\n  code: string;\r\n\r\n  data: T;\r\n\r\n  /**\r\n   * Construct a problem from a problem object\r\n   */\r\n  constructor(problem: IProblem<T>) {\r\n    this.message = problem.message;\r\n    this.status = problem.status;\r\n    this.code = problem.code;\r\n    this.data = problem.data;\r\n  }\r\n\r\n  /**\r\n   * Automatically generate problem from axios error\r\n   */\r\n  static fromAxiosError(axiosError: AxiosError): Problem<{ errors?: object }> {\r\n    if (axiosError.response) {\r\n      const error = axiosError.response.data;\r\n      return new Problem({\r\n        status: axiosError.response.status,\r\n        message:\r\n          error?.message && typeof error.message === \"string\"\r\n            ? error.message\r\n            : \"Unknown server error\",\r\n        code:\r\n          error?.code && typeof error.code === \"string\"\r\n            ? error.code\r\n            : \"server/unknown\",\r\n        data:\r\n          error?.errors && typeof error.errors === \"object\"\r\n            ? { errors: error.errors }\r\n            : {},\r\n      });\r\n    } else if (axiosError.request) {\r\n      return new Problem({\r\n        status: 21,\r\n        code: \"server/unavailable\",\r\n        message: \"Could not reach server\",\r\n        data: {},\r\n      });\r\n    } else {\r\n      return new Problem({\r\n        status: 22,\r\n        code: \"server/failure-formulating-request\",\r\n        message: \"Could not formulate request to server\",\r\n        data: {},\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { IProblem, Problem } from \"./Problem\";\r\n\r\nexport type Result<T = any, E = any> = Success<T, E> | Failure<T, E>;\r\n\r\nexport function promiseToResult<T = any>(\r\n  promise: Promise<T>\r\n): Promise<Result<T>> {\r\n  return promise\r\n    .then((value) => new Success(value))\r\n    .catch((value) => new Failure(value));\r\n}\r\n\r\ninterface IResult<T = any, E = any> {\r\n  /**\r\n   * The current value, either the success or failure value\r\n   */\r\n  value: T | E;\r\n\r\n  /**\r\n   * Currently stored value, whether it is the success value or failure value\r\n   */\r\n  getOr(fallbackValue: T): T;\r\n\r\n  /**\r\n   * Check if this ``Result`` is a success\r\n   */\r\n  isSuccess(): this is Success<T, E>;\r\n\r\n  /**\r\n   * Check if this ``Result`` is a failure\r\n   */\r\n  isFailure(): this is Failure<T, E>;\r\n\r\n  /**\r\n   * If and when the ``Result`` succeeds, this function will map the ``Success``\r\n   * to another ``Result`` (potentially failing the value) or use the existing\r\n   * ``Failure`` if the original ``Result`` failed.\r\n   */\r\n  map<U = T, R = E>(fn: (value: T) => Result<U, E | R>): Result<U, E | R>;\r\n\r\n  /**\r\n   * If the ``Result`` succeeds, the provided callback function is ran with the\r\n   * success value. This is an alternative to saying\r\n   *\r\n   * ```\r\n   * if (result.isSuccess()) {\r\n   *   callback(result.value)\r\n   * }\r\n   * ```\r\n   */\r\n  onSuccess(callback: (value: T) => void): void;\r\n\r\n  /**\r\n   * If the ``Result`` fails, the provided callback function is ran with the\r\n   * failure value. This is an alternative to saying\r\n   *\r\n   * ```\r\n   * if (result.isFailure()) {\r\n   *   callback(result.value)\r\n   * }\r\n   * ```\r\n   */\r\n  onFailure(callback: (value: E) => void): void;\r\n\r\n  /**\r\n   * If and when the ``Result`` succeeds, maps the success value to a new value\r\n   * using the given function.\r\n   */\r\n  mapSuccess<U = T>(fn: (value: T) => U): Result<U, E>;\r\n\r\n  /**\r\n   * If and when the ``Result`` fails, maps the failure value to a new value\r\n   * using the given function.\r\n   */\r\n  mapFailure<U = E>(fn: (value: E) => U): Result<T, U>;\r\n\r\n  /**\r\n   * If and when the ``Result`` succeeds, this function will map the ``Success``\r\n   * to either the given ``Success`` or the given ``Failure`` based on whether\r\n   * the given function returns true with the current success value. If the\r\n   * original ``Result`` failed, returns with the original ``Failure``.\r\n   */\r\n  transform<U = T, R = E>(\r\n    fn: (value: T) => boolean,\r\n    success: (value: T) => Success<U, any>,\r\n    failure: (value: T) => Failure<any, R>\r\n  ): Result<U, E | R>;\r\n\r\n  /**\r\n   * In and when the ``Result`` succeeds, this function will ensure the type of\r\n   * the success value and return a ``Success`` if the type of the value is\r\n   * correct, else it will return a new ``Failure`` as specified. If the\r\n   * original ``Result`` failed, returns with the original ``Failure``.\r\n   */\r\n  ensureType<U = T, R = E, D = any>(\r\n    value: (value: T) => D,\r\n    typeGuard: (value: any) => value is U,\r\n    failure: (value: D) => Result<U, R>\r\n  ): Result<U, E | R>;\r\n}\r\n\r\n/**\r\n * Success implementation\r\n */\r\nexport class Success<T = any, E = any> implements IResult<T, E> {\r\n  value: T;\r\n\r\n  constructor(value: T) {\r\n    this.value = value;\r\n  }\r\n\r\n  getOr(fallbackValue: T): T {\r\n    return this.value;\r\n  }\r\n\r\n  isSuccess(): this is Success<T, E> {\r\n    return true;\r\n  }\r\n\r\n  isFailure(): this is Failure<T, E> {\r\n    return false;\r\n  }\r\n\r\n  onSuccess(callback: (value: T) => void): void {\r\n    callback(this.value);\r\n  }\r\n\r\n  onFailure(callback: (value: E) => void): void {}\r\n\r\n  map<U = T, E2 = E>(fn: (value: T) => Result<U, E | E2>): Result<U, E | E2> {\r\n    return fn(this.value);\r\n  }\r\n\r\n  mapSuccess<U = T>(fn: (value: T) => U): Result<U, E> {\r\n    return new Success(fn(this.value));\r\n  }\r\n\r\n  mapFailure<U = E>(fn: (value: E) => U): Result<T, U> {\r\n    return new Success(this.value);\r\n  }\r\n\r\n  transform<U = T, R = E>(\r\n    fn: (value: T) => boolean,\r\n    success: (value: T) => Success<U, any>,\r\n    failure: (value: T) => Failure<any, R>\r\n  ): Result<U, E | R> {\r\n    return fn(this.value)\r\n      ? new Success<U, E | R>(success(this.value).value)\r\n      : new Failure<U, E | R>(failure(this.value).value);\r\n  }\r\n\r\n  ensureType<U = T, R = E, D = any>(\r\n    value: (value: T) => D,\r\n    typeGuard: (value: any) => value is U,\r\n    failure: (value: D) => Result<U, R>\r\n  ): Result<U, E | R> {\r\n    const v = value(this.value);\r\n    if (typeGuard(v)) {\r\n      return new Success<U, E | R>(v);\r\n    } else {\r\n      return failure(v);\r\n    }\r\n  }\r\n\r\n  static From<R = any, U = any>(value: U) {\r\n    return new Success<U, R>(value);\r\n  }\r\n\r\n  static Empty<R = any>() {\r\n    return new Success<undefined, R>(undefined);\r\n  }\r\n}\r\n\r\n/**\r\n * Failure implementation\r\n */\r\nexport class Failure<T = any, E = any> implements IResult<T, E> {\r\n  value: E;\r\n\r\n  constructor(value: E) {\r\n    this.value = value;\r\n  }\r\n\r\n  getOr(fallbackValue: T): T {\r\n    return fallbackValue;\r\n  }\r\n\r\n  onSuccess(callback: (value: T) => void): void {}\r\n\r\n  onFailure(callback: (value: E) => void): void {\r\n    callback(this.value);\r\n  }\r\n\r\n  isSuccess(): this is Success<T, E> {\r\n    return false;\r\n  }\r\n\r\n  isFailure(): this is Failure<T, E> {\r\n    return true;\r\n  }\r\n\r\n  map<U = T, E2 = E>(fn: (value: T) => Result<U, E | E2>): Result<U, E | E2> {\r\n    return new Failure<U, E>(this.value);\r\n  }\r\n\r\n  mapSuccess<U = T>(fn: (value: T) => U): Result<U, E> {\r\n    return new Failure(this.value);\r\n  }\r\n\r\n  mapFailure<U = E>(fn: (value: E) => U): Result<T, U> {\r\n    return new Failure(fn(this.value));\r\n  }\r\n\r\n  transform<U = T, R = E>(\r\n    fn: (value: T) => boolean,\r\n    success: (value: T) => Success<U, any>,\r\n    failure: (value: T) => Failure<any, R>\r\n  ): Result<U, E | R> {\r\n    return new Failure<U, E | R>(this.value);\r\n  }\r\n\r\n  ensureType<U = T, R = E, D = any>(\r\n    value: (value: T) => D,\r\n    typeGuard: (value: any) => value is U,\r\n    failure: (value: D) => Result<U, R>\r\n  ): Result<U, E | R> {\r\n    return new Failure<U, E | R>(this.value);\r\n  }\r\n\r\n  static Problem<U = any, R extends object = {}>(problem: IProblem<R>) {\r\n    return new Failure<U, Problem<R>>(new Problem(problem));\r\n  }\r\n}\r\n","import Axios, { AxiosInstance, AxiosRequestConfig, AxiosError } from \"axios\";\r\nimport { Config } from \"../config\";\r\nimport { store } from \"../store\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { promiseToResult, Result } from \"../utils/Result\";\r\nimport { Problem } from \"../utils/Problem\";\r\n\r\nexport type ServiceMethodResponse<T = void> = Result<\r\n  T,\r\n  | Problem<{\r\n      errors?: object | undefined;\r\n    }>\r\n  | Problem<any>\r\n>;\r\n\r\nexport abstract class ServiceBase {\r\n  protected baseURL: string;\r\n  protected axios: AxiosInstance;\r\n\r\n  /**\r\n   * Set up base URL and axios instance for service\r\n   */\r\n  constructor() {\r\n    this.baseURL = `${Config.API_URL}/api`;\r\n    this.axios = Axios.create({ baseURL: this.baseURL, withCredentials: true });\r\n  }\r\n\r\n  /**\r\n   * Construct endpoint from path, base URL already handled\r\n   */\r\n  protected endpoint(path: string) {\r\n    return `${this.baseURL}${path}`;\r\n  }\r\n\r\n  /**\r\n   * Ensure access token is valid\r\n   */\r\n  protected isAccessTokenValid() {\r\n    const token = store.getState().auth.accessToken;\r\n    if (!token) return false;\r\n    try {\r\n      const payload = jwt.decode(token) as any;\r\n      const expiresAt = Number(payload?.exp || 0) * 1000;\r\n      const expirationBuffer = 5000; // Fetch new access token 30 seconds before expiration\r\n      const tokenIsValid = Date.now() < expiresAt - expirationBuffer;\r\n      return tokenIsValid;\r\n    } catch (error) {\r\n      console.warn(\"Error occured while checking access token\", error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempt refresh access token function\r\n   */\r\n  protected async attemptRefreshAccessToken(force: boolean = false) {\r\n    const accessTokenIsValid = this.isAccessTokenValid();\r\n    if (!accessTokenIsValid || force) {\r\n      const url = this.endpoint(\"/auth/refresh_token\");\r\n      try {\r\n        const result = await this.axios.get<string>(url);\r\n        const accessToken = result.data;\r\n        store.getActions().auth._setAccessToken(accessToken);\r\n      } catch (e) {\r\n        if (store.getState().auth.accessToken) {\r\n          store.getActions().auth.logout();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Before request hook\r\n   */\r\n  protected async onBeforeRequest() {\r\n    await this.attemptRefreshAccessToken();\r\n  }\r\n\r\n  /**\r\n   * Gets basic axios config\r\n   */\r\n  protected getConfig(\r\n    override?: AxiosRequestConfig | undefined\r\n  ): AxiosRequestConfig {\r\n    const accessToken = store.getState().auth.accessToken;\r\n\r\n    // Construct request headers\r\n    const headers = { ...override?.headers };\r\n    if (accessToken) {\r\n      headers.Authorization = `bearer ${accessToken}`;\r\n    }\r\n\r\n    // Override config with headers\r\n    return {\r\n      ...override,\r\n      headers,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Run requests with hooks and error handling\r\n   *\r\n   * @param requestFunction Request creator function\r\n   */\r\n  protected async handleRequest<T>(\r\n    path: string,\r\n    config: AxiosRequestConfig | undefined,\r\n    requestFunction: (url: string, options: AxiosRequestConfig) => Promise<T>\r\n  ) {\r\n    /**\r\n     * Run hooks\r\n     */\r\n    await this.onBeforeRequest();\r\n\r\n    /**\r\n     * Run request function to promise\r\n     */\r\n    const url = this.endpoint(path);\r\n    const options = this.getConfig(config);\r\n    const promise = requestFunction(url, options);\r\n\r\n    /**\r\n     * Create result from promise\r\n     */\r\n    const result = await promiseToResult(promise);\r\n\r\n    /**\r\n     * Map failures to Problems, automatically created from failures\r\n     */\r\n    return result.mapFailure((failureValue) => {\r\n      return Problem.fromAxiosError(failureValue as AxiosError);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed GET request wrapper with hooks\r\n   */\r\n  protected async get<ResponseData = any>(\r\n    path: string,\r\n    config?: AxiosRequestConfig | undefined\r\n  ) {\r\n    return this.handleRequest(path, config, (url, options) => {\r\n      return this.axios.get<ResponseData>(url, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed POST request wrapper with hooks\r\n   */\r\n  protected async post<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    return this.handleRequest(path, config, (url, options) => {\r\n      return this.axios.post<ResponseData>(url, data, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed DELETE request wrapper with hooks\r\n   */\r\n  protected async delete<ResponseData = any>(\r\n    path: string,\r\n    config?: AxiosRequestConfig | undefined\r\n  ) {\r\n    return this.handleRequest(path, config, (url, options) => {\r\n      return this.axios.delete<ResponseData>(url, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed PUT request wrapper with hooks\r\n   */\r\n  protected async put<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    return this.handleRequest(path, config, (url, options) => {\r\n      return this.axios.put<ResponseData>(url, data, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed PATCH request wrapper with hooks\r\n   */\r\n  protected async patch<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    return this.handleRequest(path, config, (url, options) => {\r\n      return this.axios.patch<ResponseData>(url, data, options);\r\n    });\r\n  }\r\n}\r\n","import { ServiceBase, ServiceMethodResponse } from \"./ServiceBase\";\r\nimport { isJsonAuth, JsonAuth } from \"../models/authentication/auth.json\";\r\nimport { Failure, Success } from \"../utils/Result\";\r\n\r\nexport class AuthService extends ServiceBase {\r\n  /**\r\n   * Fetches the user's profile if the user is signed in.\r\n   */\r\n  async getProfile(): Promise<ServiceMethodResponse<JsonAuth>> {\r\n    const result = await this.get(\"/auth/profile\");\r\n\r\n    return result.ensureType(\r\n      (response) => response.data,\r\n      isJsonAuth,\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"auth/profile/invalid-response\",\r\n          message: \"Invalid profile response from server\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Registers and logs in a new user with the given credentials.\r\n   */\r\n  async registerWithEmailAndPassword(credentials: {\r\n    email: string;\r\n    password: string;\r\n  }): Promise<ServiceMethodResponse> {\r\n    const result = await this.post(\"/auth/register\", credentials);\r\n\r\n    return result.transform(\r\n      (response) => response.status === 200,\r\n      () => Success.Empty(),\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"auth/register/invalid-response\",\r\n          message: \"Invalid registration response from server\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Logs the user in with the given credentials.\r\n   */\r\n  async loginWithEmailAndPassword(credentials: {\r\n    email: string;\r\n    password: string;\r\n  }): Promise<ServiceMethodResponse> {\r\n    const result = await this.post(\"/auth/login\", credentials);\r\n\r\n    return result.transform(\r\n      (response) => response.status === 200,\r\n      () => Success.Empty(),\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"auth/login/invalid-response\",\r\n          message: \"Invalid login response from server\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Sends a forgot password email to the given email address.\r\n   */\r\n  async forgotPassword(credentials: {\r\n    email: string;\r\n  }): Promise<ServiceMethodResponse> {\r\n    const result = await this.post(\"/auth/forgot_password\", credentials);\r\n\r\n    return result.transform(\r\n      (response) => response.status === 200,\r\n      () => Success.Empty(),\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"auth/forgotpassword/invalid-response\",\r\n          message: \"Invalid forgot password response from server\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Validates a password change token\r\n   */\r\n  async validatePasswordChangeToken(credentials: { token: string }) {\r\n    const result = await this.get(`/auth/change_password/${credentials.token}`);\r\n\r\n    return result.transform(\r\n      (response) =>\r\n        response.status === 200 && typeof response.data === \"string\",\r\n      (response) => new Success(String(response.data)),\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"auth/changepassword/invalid-response\",\r\n          message: \"Invalid change password response from server\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Change a user's password\r\n   */\r\n  async changePassword(credentials: { token: string; password: string }) {\r\n    const result = await this.post(\r\n      `/auth/change_password/${credentials.token}`,\r\n      { password: credentials.password }\r\n    );\r\n\r\n    return result.transform(\r\n      (response) => response.status === 200,\r\n      () => Success.Empty(),\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"auth/changepassword/invalid-response\",\r\n          message: \"Invalid change password response from server\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Confirm a user's email\r\n   */\r\n  async confirmEmail(credentials: { token: string }) {\r\n    const result = await this.get(`/auth/confirm_email/${credentials.token}`);\r\n\r\n    return result.transform(\r\n      (response) => response.status === 200,\r\n      () => Success.Empty(),\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"auth/confirmemail/invalid-response\",\r\n          message: \"Invalid confirm email response from server\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Logs the user out.\r\n   */\r\n  async logout() {\r\n    const result = await this.post(`/auth/logout`);\r\n\r\n    return result.transform(\r\n      (response) => response.status === 200,\r\n      () => Success.Empty(),\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"auth/logout/invalid-response\",\r\n          message: \"Invalid logout response from server\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Logs the user in with a Google account. Redirects the user.\r\n   */\r\n  loginWithGoogle() {\r\n    window.location.href = this.endpoint(\"/auth/google\");\r\n  }\r\n}\r\n","import { object, string, number, ObjectSchema } from \"yup\";\r\n\r\nconst id = () => string();\r\nconst uid = () => string();\r\nconst integerAmount = () => number().integer();\r\nconst time = () => number().positive().integer();\r\nconst category = () => string().min(1);\r\nconst comment = () => string();\r\n\r\nexport type JsonTransaction = {\r\n  id: string;\r\n  uid: string;\r\n  time: number;\r\n  category: string;\r\n  integerAmount: number;\r\n  comment?: string | undefined;\r\n};\r\n\r\nexport const jsonTransactionSchema: ObjectSchema<JsonTransaction> = object({\r\n  id: id().required(),\r\n  uid: uid().required(),\r\n  time: time().required(),\r\n  category: category().required(),\r\n  integerAmount: integerAmount().required(),\r\n  comment: comment(),\r\n}).required();\r\n\r\nexport function isJsonTransaction(arg: any): arg is JsonTransaction {\r\n  try {\r\n    jsonTransactionSchema.validateSync(arg);\r\n    return true;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function isJsonTransactionArray(arg: any): arg is JsonTransaction[] {\r\n  return Array.isArray(arg) && arg.every(isJsonTransaction);\r\n}\r\n","import { ServiceBase } from \"./ServiceBase\";\r\nimport {\r\n  JsonTransaction,\r\n  isJsonTransactionArray,\r\n  isJsonTransaction,\r\n} from \"../models/transactions/transactions.json\";\r\nimport { Failure, Success } from \"../utils/Result\";\r\n\r\nexport class TransactionService extends ServiceBase {\r\n  async getTransactions() {\r\n    const result = await this.get(\"/transactions\");\r\n\r\n    return result.ensureType(\r\n      (response) => response.data,\r\n      isJsonTransactionArray,\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"transactions/get/invalid-response\",\r\n          message: \"Could not get transactions, received invalid response.\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  async postTransaction(json: Omit<JsonTransaction, \"id\" | \"uid\">) {\r\n    const result = await this.post(\"/transactions\", json);\r\n\r\n    return result.ensureType(\r\n      (response) => response.data,\r\n      isJsonTransaction,\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"transactions/post/invalid-response\",\r\n          message: \"Could not post transaction, received invalid response.\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  async deleteTransaction(id: string) {\r\n    const result = await this.delete(`/transactions/${id}`);\r\n\r\n    return result.transform(\r\n      (response) => response.status === 200,\r\n      () => Success.Empty(),\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"transactions/delete/invalid-response\",\r\n          message: \"Could not delete transaction, received invalid response.\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  async putTransaction(json: JsonTransaction) {\r\n    const result = await this.put(`/transactions/${json.id}`, json);\r\n\r\n    return result.ensureType(\r\n      (response) => response.data,\r\n      isJsonTransaction,\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"transactions/put/invalid-response\",\r\n          message: \"Could not put transaction, received invalid response.\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n\r\n  async patchTransaction(json: JsonTransaction) {\r\n    const result = await this.patch(`/transactions/${json.id}`, json);\r\n\r\n    return result.ensureType(\r\n      (response) => response.data,\r\n      isJsonTransaction,\r\n      (response) =>\r\n        Failure.Problem({\r\n          status: 23,\r\n          code: \"transactions/patch/invalid-response\",\r\n          message: \"Could not patch transaction, received invalid response.\",\r\n          data: response.data,\r\n        })\r\n    );\r\n  }\r\n}\r\n","import { createStore, createTypedHooks } from \"easy-peasy\";\r\nimport { AuthModel, authModel } from \"./models/authentication/auth.model\";\r\nimport {\r\n  TransactionsModel,\r\n  transactionsModel,\r\n} from \"./models/transactions/transactions.model\";\r\nimport { intervalModel, IntervalModel } from \"./models/interval/interval.model\";\r\nimport { AuthService } from \"./services/AuthService\";\r\nimport { TransactionService } from \"./services/TransactionService\";\r\n\r\nexport interface StoreModel {\r\n  transactions: TransactionsModel;\r\n  interval: IntervalModel;\r\n  auth: AuthModel;\r\n}\r\n\r\nconst storeModel: StoreModel = {\r\n  transactions: transactionsModel,\r\n  interval: intervalModel,\r\n  auth: authModel,\r\n};\r\n\r\nexport interface StoreInjections {\r\n  authService: AuthService;\r\n  transactionService: TransactionService;\r\n}\r\n\r\nexport const store = createStore(storeModel, {\r\n  injections: {\r\n    authService: new AuthService(),\r\n    transactionService: new TransactionService(),\r\n  },\r\n});\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).store = store;\r\n}\r\n\r\nexport const typedHooks = createTypedHooks<StoreModel>();\r\n\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;\r\nexport const useStore = typedHooks.useStore;\r\n","import { routes } from \"../Routes\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type RouteSelector = (r: typeof routes) => string;\r\n\r\nexport function useRedirect() {\r\n  const history = useHistory();\r\n  return (path: string | RouteSelector) =>\r\n    history.push(typeof path === \"string\" ? path : path(routes));\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LoginView } from './LoginView';\r\nimport * as yup from \"yup\"\r\nimport { useStoreActions, useStoreState } from '../../store';\r\nimport { useRedirect } from '../../hooks/useRedirect';\r\n\r\nexport const loginValidationSchema = yup.object({\r\n\temail: yup.string().defined().email(),\r\n\tpassword: yup.string().defined(),\r\n}).defined()\r\n\r\nexport type LoginFormType = yup.InferType<typeof loginValidationSchema>\r\n\r\nexport const Login: React.FC<{}> = () => {\r\n\r\n\tconst [error, setError] = useState<string>()\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\r\n\tconst loginWithGoogle = useStoreActions(_ => _.auth.loginWithGoogle)\r\n\tconst loginWithEmailPassword = useStoreActions(_ => _.auth.loginWithEmailPassword)\r\n\r\n\t/**\r\n\t * Check initial login\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tif (user) {\r\n\t\t\tredirect(routes => routes.dashboard)\r\n\t\t}\r\n\t}, [user, redirect])\r\n\r\n\tasync function handleSubmit(values: LoginFormType) {\r\n\t\tsetError(undefined)\r\n\r\n\t\tconst result = await loginWithEmailPassword(values)\r\n\t\tresult.onSuccess(() => redirect(routes => routes.dashboard))\r\n\r\n\t\tresult.onFailure(failure => {\r\n\t\t\tswitch (failure.code) {\r\n\t\t\t\tcase \"data/invalid-request-data\":\r\n\t\t\t\t\tsetError(\"Invalid email or password.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/invalid-credentials\":\r\n\t\t\t\t\tsetError(\"Wrong password or the user does not have a password.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/user-not-found\":\r\n\t\t\t\t\tsetError(\"No user exists with that email.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/email-not-confirmed\":\r\n\t\t\t\t\tsetError(\"Confirm your email before logging in.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"server/unavailable\":\r\n\t\t\t\t\tsetError(\"Could not contact server. Try again later.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn(\"Uncaught error code in login:\", failure)\r\n\t\t\t\t\tsetError(\"An error occured while logging in. Try again.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tasync function handleGoogleSubmit() {\r\n\t\tloginWithGoogle()\r\n\t}\r\n\r\n\tasync function handleForgotPassword() {\r\n\t\tredirect(_ => _.forgotPassword)\r\n\t}\r\n\r\n\tasync function handleCreateAccount() {\r\n\t\tredirect(_ => _.register)\r\n\t}\r\n\r\n\treturn <LoginView {...{\r\n\t\thandleGoogleSubmit,\r\n\t\thandleSubmit,\r\n\t\thandleForgotPassword,\r\n\t\thandleCreateAccount,\r\n\t\terror,\r\n\t}} />\r\n}","import \"./Register.scss\"\r\nimport React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { registerValidationSchema, RegisterFormType } from './RegisterController';\r\nimport { yupResolver } from '@hookform/resolvers';\r\nimport { TextField, Button, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport {\r\n\tEmail as EmailIcon,\r\n\tVisibility as PasswordVisibleIcon,\r\n\tVisibilityOff as PasswordInvisibleIcon,\r\n} from \"@material-ui/icons\";\r\nimport { AuthFrame } from \"../../components/AuthFrame/AuthFrame\";\r\nimport { Type } from \"../../components/Type/Type\";\r\n\r\n\r\nexport type RegisterViewProps = {\r\n\thandleSubmit(values: RegisterFormType): Promise<void>;\r\n\thandleLogin(): Promise<void>;\r\n\terror?: string;\r\n\tregistered: boolean;\r\n}\r\n\r\nexport const RegisterView: React.FC<RegisterViewProps> = (props) => {\r\n\r\n\tconst [passwordVisible, setPasswordVisible] = useState(false)\r\n\r\n\tconst form = useForm<RegisterFormType>({\r\n\t\tresolver: yupResolver(registerValidationSchema),\r\n\t})\r\n\r\n\tconst emailError = form.formState.touched.email && form.errors.email?.message\r\n\tconst passwordError = form.formState.touched.password && form.errors.password?.message\r\n\r\n\treturn <div className=\"Register\">\r\n\r\n\t\t<AuthFrame\r\n\r\n\t\t\theader=\"Create account\"\r\n\r\n\t\t\tbody={\r\n\t\t\t\tprops.registered\r\n\t\t\t\t\t? <>\r\n\t\t\t\t\t\t<Type variant=\"h6\">\r\n\t\t\t\t\t\t\t{\"Succesfully registered.\"}\r\n\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t{\"Check your email in order to confirm your email address. \"}\r\n\t\t\t\t\t\t\t{\"You can login after having confirmation.\"}\r\n\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t: <form onSubmit={form.handleSubmit(props.handleSubmit)}>\r\n\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"register-email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tinputRef={form.register}\r\n\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\terror={!!emailError}\r\n\t\t\t\t\t\t\thelperText={emailError}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<EmailIcon />\r\n\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"register-password\"\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\ttype={passwordVisible ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\tinputRef={form.register}\r\n\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\terror={!!passwordError}\r\n\t\t\t\t\t\t\thelperText={passwordError}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<IconButton onClick={() => setPasswordVisible(_ => !_)} size=\"small\">\r\n\t\t\t\t\t\t\t\t\t\t{passwordVisible ? <PasswordVisibleIcon /> : <PasswordInvisibleIcon />}\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Create account\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprops.error\r\n\t\t\t\t\t\t\t\t? <Type color=\"error\">\r\n\t\t\t\t\t\t\t\t\t{props.error}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</form >\r\n\t\t\t}\r\n\r\n\t\t\tfooter={\r\n\t\t\t\t<Button onClick={() => props.handleLogin()}>\r\n\t\t\t\t\t{\"Already have an account? Login\"}\r\n\t\t\t\t</Button>\r\n\t\t\t}\r\n\r\n\t\t/>\r\n\r\n\t</div>\r\n}","import React, { useState } from 'react';\r\nimport { RegisterView } from './RegisterView';\r\nimport { InferType, object, string } from \"yup\"\r\nimport { useStoreActions } from '../../store';\r\nimport { useRedirect } from '../../hooks/useRedirect';\r\n\r\nexport const registerValidationSchema = object({\r\n\temail: string().defined().max(255).email(),\r\n\tpassword: string().defined().min(6).max(255),\r\n}).defined()\r\n\r\nexport type RegisterFormType = InferType<typeof registerValidationSchema>\r\n\r\nexport const Register: React.FC<{}> = () => {\r\n\r\n\tconst [error, setError] = useState<string>()\r\n\r\n\tconst [registered, setRegistered] = useState(false)\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst register = useStoreActions(_ => _.auth.registerWithEmailPassword)\r\n\r\n\tasync function handleSubmit(values: RegisterFormType) {\r\n\t\tsetError(undefined)\r\n\t\tconsole.log(\"Submit\")\r\n\t\tconst result = await register({ email: values.email, password: values.password })\r\n\t\tresult.onSuccess(() => setRegistered(true))\r\n\t\tresult.onFailure(failure => {\r\n\t\t\tswitch (failure.code) {\r\n\t\t\t\tcase \"data/invalid-request-data\":\r\n\t\t\t\t\tsetError(\"Invalid email or password.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/user-already-exists\":\r\n\t\t\t\t\tsetError(\"An user already exists with that email.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"server/unavailable\":\r\n\t\t\t\t\tsetError(\"Could not contact server. Try again later.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn(\"Uncaught error code in login:\", failure)\r\n\t\t\t\t\tsetError(\"An error occured while logging in. Try again.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tasync function handleLogin() {\r\n\t\tredirect(_ => _.login)\r\n\t}\r\n\r\n\treturn <RegisterView\r\n\t\thandleSubmit={handleSubmit}\r\n\t\thandleLogin={handleLogin}\r\n\t\terror={error}\r\n\t\tregistered={registered}\r\n\t/>\r\n}","import React from \"react\";\r\nimport { Route, RouteProps, Redirect } from \"react-router-dom\";\r\nimport { useStoreState } from \"../../store\";\r\nimport { routes } from \"../../Routes\";\r\n\r\nexport type ProtectedRouteProps = {\r\n\tfallbackRoute?: string;\r\n} & RouteProps\r\n\r\nexport default function ProtectedRoute(props: ProtectedRouteProps) {\r\n\r\n\tconst { fallbackRoute, ...routeProps } = props\r\n\r\n\t/**\r\n\t * Default fallback to login on redirect\r\n\t */\r\n\tconst defaultFallbackRoute = routes.login\r\n\r\n\t/**\r\n\t * Get current user details\r\n\t */\r\n\tconst initialized = useStoreState(_ => _.auth.initialized)\r\n\tconst isLoggedIn = useStoreState(_ => _.auth.isLoggedIn)\r\n\r\n\t/**\r\n\t * If the user is being loaded, show nothing\r\n\t */\r\n\tif (!initialized) return null\r\n\r\n\t/**\r\n\t * Else if user is not logged in redirect to fallback route or default fallback route\r\n\t * if none specified in props\r\n\t */\r\n\telse if (!isLoggedIn) return <Redirect to={fallbackRoute || defaultFallbackRoute} />\r\n\r\n\t/**\r\n\t * Else return route as is\r\n\t */\r\n\telse return <Route {...routeProps} />\r\n}","import \"./TransactionListing.scss\";\r\nimport React from \"react\"\r\nimport cx from \"classnames\"\r\nimport { Transaction } from \"../../models/transactions/transactions.class\";\r\nimport { Plus as PlusIcon, Minus as MinusIcon } from \"react-feather\"\r\n\r\nexport type TransactionListingViewProps = {\r\n\ttransaction: Transaction;\r\n\thandleDelete: Function;\r\n}\r\n\r\nexport function TransactionListingView(props: TransactionListingViewProps) {\r\n\r\n\tconst signClass = props.transaction.amount.isPositive ? \"positive\" : \"negative\"\r\n\r\n\treturn <div className=\"TransactionListing\">\r\n\t\t<div className={cx(\"icon\", signClass)}>\r\n\t\t\t<div className=\"iconContainer\">\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.transaction.amount.isPositive\r\n\t\t\t\t\t\t? <PlusIcon />\r\n\t\t\t\t\t\t: <MinusIcon />\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"category\">\r\n\t\t\t<span>\r\n\t\t\t\t{props.transaction.category}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div className=\"comment\">\r\n\t\t\t<span>\r\n\t\t\t\t{props.transaction.comment}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div className={cx(\"amount\", signClass)}>\r\n\t\t\t<span>\r\n\t\t\t\t{props.transaction.amount.format()}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t</div>\r\n}","import React, { useCallback } from \"react\"\r\nimport { TransactionListingView } from \"./TransactionListingView\"\r\nimport { Transaction } from \"../../models/transactions/transactions.class\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport type TransactionListingProps = {\r\n\ttransaction: Transaction;\r\n}\r\n\r\nexport function TransactionListing(props: TransactionListingProps) {\r\n\r\n\tconst deleteTransaction = useStoreActions(_ => _.transactions.deleteTransaction)\r\n\r\n\tconst handleDelete = useCallback(() => {\r\n\t\tdeleteTransaction(props.transaction.id)\r\n\t}, [props.transaction, deleteTransaction])\r\n\r\n\treturn <TransactionListingView\r\n\t\ttransaction={props.transaction}\r\n\t\thandleDelete={handleDelete}\r\n\t/>\r\n}","import \"./TransactionList.scss\";\r\nimport React from \"react\"\r\nimport { TransactionListing } from \"../TransactionListing/TransactionListing\";\r\nimport { Transaction } from \"../../models/transactions/transactions.class\";\r\nimport { format } from \"date-fns\"\r\nimport { useStoreActions } from \"../../store\";\r\n\r\nexport type TransactionListViewProps = {\r\n\titemsByDates: {\r\n\t\tdate: Date;\r\n\t\titems: Transaction[];\r\n\t}[]\r\n}\r\n\r\nexport function TransactionListView(props: TransactionListViewProps) {\r\n\r\n\tfunction toDatestring(date: Date) {\r\n\t\treturn date.getFullYear() === currentYear\r\n\t\t\t? format(date, \"dd.MM.\")\r\n\t\t\t: format(date, \"dd.MM.yyyy\")\r\n\t}\r\n\r\n\tconst del = useStoreActions(_ => _.transactions.deleteTransaction)\r\n\r\n\treturn <div className=\"TransactionList\">\r\n\r\n\t\t<ul >\r\n\r\n\t\t\t{\r\n\t\t\t\tprops.itemsByDates.map(entry => {\r\n\r\n\t\t\t\t\tconst datestring = toDatestring(entry.date)\r\n\r\n\t\t\t\t\treturn <li key={datestring}>\r\n\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t{datestring}\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t<ul >\r\n\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tentry.items.map(item => {\r\n\r\n\t\t\t\t\t\t\t\t\treturn <li key={item.id}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tdel(item.id).catch(error => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"Error deleting:\", error)\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<TransactionListing transaction={item} />\r\n\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t</ul>\r\n\r\n\t</div >\r\n}\r\n\r\nconst currentYear = new Date().getFullYear()","import React from \"react\"\r\nimport { TransactionListView } from \"./TransactionListView\"\r\nimport { useStoreState } from \"../../store\"\r\n\r\nexport type TransactionListProps = {\r\n\tbypassFilters?: boolean;\r\n}\r\n\r\nexport function TransactionList(props: TransactionListProps) {\r\n\r\n\tconst itemsByDates = useStoreState(_ => _.transactions.itemsByDates)\r\n\r\n\tconst filteredItemsByDates = useStoreState(_ => _.transactions.filtered.itemsByDates)\r\n\r\n\treturn <TransactionListView\r\n\t\titemsByDates={props.bypassFilters ? itemsByDates : filteredItemsByDates}\r\n\t/>\r\n}","import \"./TransactionListFilters.scss\";\r\nimport React from \"react\"\r\nimport { Button, ButtonGroup } from \"@material-ui/core\"\r\nimport {\r\n\tChevronLeft as ChevronLeftIcon,\r\n\tChevronRight as ChevronRightIcon\r\n} from \"@material-ui/icons\"\r\n\r\nexport type TransactionListFiltersViewProps = {\r\n\tonPreviousInterval(): void;\r\n\tonNextInterval(): void;\r\n\tonYearInterval(): void;\r\n\tonMonthInterval(): void;\r\n\tonWeekInterval(): void;\r\n\tstartDate: Date;\r\n\tendDate: Date;\r\n\tisWeek: boolean;\r\n\tisMonth: boolean;\r\n\tisYear: boolean;\r\n\tintervalString: string;\r\n}\r\n\r\nexport function TransactionListFiltersView(props: TransactionListFiltersViewProps) {\r\n\treturn <div className=\"TransactionListFilters\">\r\n\r\n\t\t<div className=\"date-selector\">\r\n\r\n\t\t\t<ButtonGroup size=\"small\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tonClick={props.onPreviousInterval}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ChevronLeftIcon />\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Button\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tclassName={props.isYear ? \"selected-button\" : \"\"}\r\n\t\t\t\t\tonClick={props.onYearInterval}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\"Year\"}\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Button\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tclassName={props.isMonth ? \"selected-button\" : \"\"}\r\n\t\t\t\t\tonClick={props.onMonthInterval}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\"Month\"}\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Button\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tclassName={props.isWeek ? \"selected-button\" : \"\"}\r\n\t\t\t\t\tonClick={props.onWeekInterval}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\"Week\"}\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t{/* <Button\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tstartIcon={<CalendarIcon />}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.intervalString}\r\n\t\t\t\t</Button> */}\r\n\r\n\t\t\t\t<Button\r\n\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tonClick={props.onNextInterval}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ChevronRightIcon />\r\n\t\t\t\t</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t</div>\r\n\r\n\t</div>\r\n}","import React from \"react\"\r\nimport { TransactionListFiltersView } from \"./TransactionListFiltersView\"\r\nimport { useStoreActions, useStoreState } from \"../../store\"\r\n\r\nexport type TransactionListFiltersProps = {\r\n\r\n}\r\n\r\nexport function TransactionListFilters(props: TransactionListFiltersProps) {\r\n\r\n\tconst nextInterval = useStoreActions(_ => _.interval.nextInterval)\r\n\tconst previousInterval = useStoreActions(_ => _.interval.previousInterval)\r\n\r\n\tconst weekInterval = useStoreActions(_ => _.interval.weekInterval)\r\n\tconst monthInterval = useStoreActions(_ => _.interval.monthInterval)\r\n\tconst yearInterval = useStoreActions(_ => _.interval.yearInterval)\r\n\r\n\tconst startDate = useStoreState(_ => _.interval.startDate)\r\n\tconst endDate = useStoreState(_ => _.interval.endDate)\r\n\tconst isYear = useStoreState(_ => _.interval.isYear)\r\n\tconst isMonth = useStoreState(_ => _.interval.isMonth)\r\n\tconst isWeek = useStoreState(_ => _.interval.isWeek)\r\n\tconst displayString = useStoreState(_ => _.interval.displayString)\r\n\r\n\treturn <TransactionListFiltersView\r\n\t\tonNextInterval={() => nextInterval()}\r\n\t\tonPreviousInterval={() => previousInterval()}\r\n\t\tonWeekInterval={() => weekInterval()}\r\n\t\tonMonthInterval={() => monthInterval()}\r\n\t\tonYearInterval={() => yearInterval()}\r\n\t\tstartDate={startDate}\r\n\t\tendDate={endDate}\r\n\t\tisYear={isYear}\r\n\t\tisMonth={isMonth}\r\n\t\tisWeek={isWeek}\r\n\t\tintervalString={displayString}\r\n\t/>\r\n}","import \"./PageHeader.scss\";\r\nimport React from \"react\"\r\nimport textureImg from \"../../images/pexels-johannes-plenio-1103970.jpg\"\r\n\r\nexport type PageHeaderProps = {\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nexport function PageHeader(props: PageHeaderProps) {\r\n\treturn <header className=\"PageHeader\">\r\n\t\t<img src={textureImg} alt=\"\" className=\"texture\" />\r\n\t\t{props.children}\r\n\t</header>\r\n}","import \"./MoneyType.scss\";\r\nimport React from \"react\"\r\nimport { MoneyAmount, MoneyAmountFormatOptions } from \"../../utils/MoneyAmount\";\r\nimport { Type, TypeProps } from \"../Type/Type\";\r\n\r\nexport type MoneyTypeProps = {\r\n\tamount: MoneyAmount;\r\n\tformatOptions?: Partial<MoneyAmountFormatOptions>;\r\n} & TypeProps\r\n\r\nexport function MoneyType(props: MoneyTypeProps) {\r\n\r\n\tconst { amount, formatOptions, ...typeProps } = props\r\n\r\n\treturn <span className=\"MoneyType\">\r\n\t\t<Type condensed {...typeProps} component=\"span\">\r\n\t\t\t{amount.format(formatOptions)}\r\n\t\t</Type>\r\n\t</span >\r\n}","import \"./Dashboard.scss\"\r\nimport React from \"react\";\r\nimport { TransactionList } from \"../../components/TransactionList/TransactionList\";\r\nimport { Auth } from \"../../models/authentication/auth.class\";\r\nimport { MoneyAmount } from \"../../utils/MoneyAmount\";\r\n// import { ChevronUp as ChevronUpIcon, ChevronDown as ChevronDownIcon } from \"react-feather\"\r\nimport { TransactionListFilters } from \"../../components/TransactionListFilters/TransactionListFiltersController\";\r\nimport { PageHeader } from \"../../components/PageHeader/PageHeader\";\r\nimport { MoneyType } from \"../../components/MoneyType/MoneyType\";\r\n\r\nexport type DashboardViewProps = {\r\n\tuser: Auth;\r\n\tintervalString: string;\r\n\r\n\tfilteredSum: MoneyAmount;\r\n\tfilteredIncomesSum: MoneyAmount;\r\n\tfilteredExpensesSum: MoneyAmount;\r\n}\r\n\r\nexport function DashboardView(props: DashboardViewProps) {\r\n\r\n\treturn <div className=\"Dashboard\">\r\n\r\n\t\t<PageHeader>\r\n\r\n\t\t\t<div className=\"totals\">\r\n\r\n\t\t\t\t<MoneyType\r\n\t\t\t\t\tamount={props.filteredSum}\r\n\t\t\t\t\tvariant=\"h4\"\r\n\t\t\t\t/>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</PageHeader>\r\n\r\n\t\t<div className=\"filters\">\r\n\r\n\t\t\t<TransactionListFilters />\r\n\r\n\t\t</div>\r\n\r\n\t\t<main>\r\n\r\n\t\t\t<div className=\"list\">\r\n\r\n\t\t\t\t<TransactionList />\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</main>\r\n\r\n\t</div>\r\n\r\n}","import React from \"react\"\r\nimport { DashboardView } from \"./DashboardView\"\r\nimport { useStoreState } from \"../../store\";\r\n\r\nexport function Dashboard() {\r\n\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\r\n\tconst smartDisplayString = useStoreState(_ => _.interval.smartDisplayString)\r\n\r\n\tconst filteredSums = useStoreState(_ => _.transactions.filtered.sums)\r\n\r\n\tif (!user) return null\r\n\r\n\treturn <DashboardView\r\n\r\n\t\tintervalString={smartDisplayString}\r\n\r\n\t\tfilteredSum={filteredSums.all}\r\n\t\tfilteredIncomesSum={filteredSums.incomes}\r\n\t\tfilteredExpensesSum={filteredSums.expenses}\r\n\r\n\t\tuser={user}\r\n\r\n\t/>\r\n}","import \"./Settings.scss\";\r\nimport React from \"react\"\r\nimport { Auth } from \"../../models/authentication/auth.class\";\r\n\r\nexport type SettingsViewProps = {\r\n\tuser: Auth;\r\n\thandleLogout(): void;\r\n}\r\n\r\nexport function SettingsView(props: SettingsViewProps) {\r\n\r\n\treturn <div className=\"Settings\">\r\n\r\n\t\t{\r\n\t\t\tprops.user.photoUrl ? <img style={{ width: 64, height: 64 }} alt=\"profile\" src={props.user.photoUrl} /> : null\r\n\t\t}\r\n\r\n\t\t<table>\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Display name</td>\r\n\t\t\t\t\t<td>{props.user.displayName}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Email</td>\r\n\t\t\t\t\t<td>{props.user.email}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>ID</td>\r\n\t\t\t\t\t<td>{props.user.id}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Google ID</td>\r\n\t\t\t\t\t<td>{props.user.googleId}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\r\n\t\t<button onClick={props.handleLogout}>Log out</button>\r\n\r\n\t</div>\r\n}","import React from \"react\"\r\nimport { SettingsView } from \"./SettingsView\"\r\nimport { useStoreState, useStoreActions } from \"../../store\"\r\nimport { useRedirect } from \"../../hooks/useRedirect\"\r\n\r\nexport type SettingsProps = {\r\n\r\n}\r\n\r\nexport function Settings(props: SettingsProps) {\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\tconst logout = useStoreActions(_ => _.auth.logout)\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tasync function handleLogout() {\r\n\t\tconst result = await logout()\r\n\t\tresult.onSuccess(() => {\r\n\t\t\tredirect(_ => _.login)\r\n\t\t})\r\n\t}\r\n\r\n\tif (!user) return null\r\n\r\n\treturn <SettingsView\r\n\t\tuser={user}\r\n\t\thandleLogout={handleLogout}\r\n\t/>\r\n}","import \"./Analytics.scss\";\r\nimport React from \"react\"\r\nimport { useStoreActions } from \"../../store\";\r\n\r\nexport type AnalyticsViewProps = {\r\n\r\n}\r\n\r\nexport function AnalyticsView(props: AnalyticsViewProps) {\r\n\r\n\tconst postTransaction = useStoreActions(_ => _.transactions.postTransaction)\r\n\r\n\tfunction handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n\r\n\t\tconsole.log(\"Handling change\")\r\n\r\n\t\tif (!e.target.files) throw new Error(\"No files array\")\r\n\r\n\t\tconst file = e.target.files[0]\r\n\r\n\t\tif (!file) throw new Error(\"No file\")\r\n\r\n\t\tconst reader = new FileReader();\r\n\r\n\t\treader.addEventListener('load', function (e) {\r\n\r\n\t\t\tif (!e.target) throw new Error(\"No load event target\")\r\n\r\n\t\t\tif (!e.target.result) throw new Error(\"Load event target result is null\")\r\n\r\n\t\t\tconst csvData = e.target.result.toString()\r\n\r\n\t\t\t// const result: Transaction[] = []\r\n\r\n\t\t\tconst rows = csvData.split(\"\\n\")\r\n\r\n\t\t\tfor (const row of rows) {\r\n\r\n\t\t\t\tif (row) {\r\n\r\n\t\t\t\t\tconst values = row.split(\";\")\r\n\r\n\t\t\t\t\tpostTransaction({\r\n\t\t\t\t\t\tcategory: values[1],\r\n\t\t\t\t\t\tcomment: values[3],\r\n\t\t\t\t\t\tintegerAmount: Number(values[2].replace(/[^\\d-]/g, '')),\r\n\t\t\t\t\t\ttime: new Date(values[0].split(\".\").reverse().map(_ => _.padStart(2, \"0\")).join(\"-\")).getTime(),\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\t\treader.readAsText(file)\r\n\r\n\t}\r\n\r\n\treturn <div className=\"Analytics\">\r\n\r\n\t\t<input type=\"file\" accept=\".csv\" onChange={handleChange} />\r\n\r\n\t</div>\r\n}","import React from \"react\"\r\nimport { AnalyticsView } from \"./AnalyticsView\"\r\n\r\nexport type AnalyticsProps = {\r\n\r\n}\r\n\r\nexport function Analytics(props: AnalyticsProps) {\r\n\treturn <AnalyticsView />\r\n}","import \"./ForgotPassword.scss\";\r\nimport React from \"react\"\r\nimport { ForgotPasswordFormType, forgotPasswordValidationSchema } from \"./ForgotPasswordController\";\r\nimport { TextField, Button, InputAdornment } from \"@material-ui/core\";\r\nimport { Email as EmailIcon } from \"@material-ui/icons\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { AuthFrame } from \"../../components/AuthFrame/AuthFrame\";\r\nimport { Type } from \"../../components/Type/Type\";\r\n\r\nexport type ForgotPasswordViewProps = {\r\n\thandleSubmit(values: ForgotPasswordFormType): Promise<void>;\r\n\thandleGoogleSubmit(): Promise<void>;\r\n\thandleLogin(): Promise<void>;\r\n\thandleCreateAccount(): Promise<void>;\r\n\tsuccess: boolean;\r\n\terror?: string;\r\n}\r\n\r\nexport function ForgotPasswordView(props: ForgotPasswordViewProps) {\r\n\r\n\t/**\r\n\t * React hook form\r\n\t */\r\n\tconst { register, handleSubmit, errors, formState, ...form } = useForm<ForgotPasswordFormType>({\r\n\t\tresolver: yupResolver(forgotPasswordValidationSchema),\r\n\t})\r\n\r\n\t/**\r\n\t * Email and password error shorthands for react hook form\r\n\t */\r\n\tconst emailError = formState.touched.email && errors.email?.message\r\n\r\n\treturn <div className=\"ForgotPassword\">\r\n\r\n\t\t<AuthFrame\r\n\r\n\t\t\theader=\"Forgot password\"\r\n\r\n\t\t\tbody={\r\n\t\t\t\tprops.success\r\n\t\t\t\t\t? <Type>\r\n\t\t\t\t\t\t{\"Recovery email sent. Check your email.\"}\r\n\t\t\t\t\t</Type>\r\n\t\t\t\t\t: <form noValidate onSubmit={handleSubmit(props.handleSubmit)}>\r\n\r\n\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t{\"Enter your email below and we will send you an email containing a link, which you can use to change your password.\"}\r\n\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"login-email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tinputRef={register}\r\n\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\terror={!!emailError}\r\n\t\t\t\t\t\t\thelperText={emailError}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<EmailIcon />\r\n\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Send recovery email\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprops.error\r\n\t\t\t\t\t\t\t\t? <Type color=\"error\">\r\n\t\t\t\t\t\t\t\t\t{props.error}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</form >\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfooter={\r\n\t\t\t\t<Button onClick={() => props.handleLogin()}>\r\n\t\t\t\t\t{\"Back\"}\r\n\t\t\t\t</Button>}\r\n\r\n\t\t/>\r\n\r\n\t</div >\r\n}","import React, { useState } from \"react\"\r\nimport { ForgotPasswordView } from \"./ForgotPasswordView\"\r\nimport * as yup from \"yup\";\r\nimport { useStoreActions } from \"../../store\";\r\nimport { useRedirect } from \"../../hooks/useRedirect\";\r\n\r\nexport const forgotPasswordValidationSchema = yup.object({\r\n\temail: yup.string().defined().min(3).max(255).email(),\r\n}).defined()\r\n\r\nexport type ForgotPasswordFormType = yup.InferType<typeof forgotPasswordValidationSchema>\r\n\r\nexport type ForgotPasswordProps = {\r\n\r\n}\r\n\r\nexport function ForgotPassword(props: ForgotPasswordProps) {\r\n\r\n\tconst [error, setError] = useState<string>()\r\n\r\n\tconst [success, setSuccess] = useState<boolean>(false)\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst forgotPassword = useStoreActions(_ => _.auth.forgotPassword)\r\n\tconst loginWithGoogle = useStoreActions(_ => _.auth.loginWithGoogle)\r\n\r\n\tasync function handleSubmit(values: ForgotPasswordFormType) {\r\n\t\tsetError(undefined)\r\n\t\tconst result = await forgotPassword(values)\r\n\t\tresult.onSuccess(() => setSuccess(true))\r\n\t\tresult.onFailure(failure => {\r\n\t\t\tswitch (failure.code) {\r\n\t\t\t\tcase \"data/invalid-request-data\":\r\n\t\t\t\t\tsetError(\"Invalid email or password.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/invalid-credentials\":\r\n\t\t\t\t\tsetError(\"Wrong password or the user does not have a password.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/user-not-found\":\r\n\t\t\t\t\tsetError(\"No user exists with that email.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"server/unavailable\":\r\n\t\t\t\t\tsetError(\"Could not contact server. Try again later.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn(\"Uncaught error code in login:\", failure)\r\n\t\t\t\t\tsetError(\"An error occured while logging in. Try again.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tasync function handleLogin() {\r\n\t\tredirect(_ => _.login)\r\n\t}\r\n\r\n\tasync function handleCreateAccount() {\r\n\t\tredirect(_ => _.register)\r\n\t}\r\n\r\n\tasync function handleGoogleSubmit() {\r\n\t\tloginWithGoogle()\r\n\t}\r\n\r\n\treturn <ForgotPasswordView {...{\r\n\t\thandleSubmit,\r\n\t\thandleCreateAccount,\r\n\t\thandleGoogleSubmit,\r\n\t\thandleLogin,\r\n\t\tsuccess,\r\n\t\terror\r\n\t}} />\r\n}","import \"./TransactionForm.scss\";\r\nimport React from \"react\"\r\nimport { TextField, InputAdornment, Button } from \"@material-ui/core\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { Type } from \"../Type/Type\";\r\n\r\nexport type TransactionFormViewProps = {\r\n\r\n\tonSubmit(): Promise<void>;\r\n\r\n\t/**\r\n\t * Form state\r\n\t */\r\n\tamount: string;\r\n\tcategory: string;\r\n\ttime: Date;\r\n\tcomment: string;\r\n\r\n\t/**\r\n\t * Form change handlers\r\n\t */\r\n\tonAmountChange(value: string): void;\r\n\tonCategoryChange(value: string): void;\r\n\tonTimeChange(value: Date): void;\r\n\tonCommentChange(value: string): void;\r\n\r\n\t/**\r\n\t * Form errors\r\n\t */\r\n\terrors: {\r\n\t\tmain?: string;\r\n\t\tamount?: string;\r\n\t\tcategory?: string;\r\n\t\ttime?: string;\r\n\t\tcomment?: string;\r\n\t};\r\n\r\n\tcategories: string[];\r\n\r\n}\r\n\r\nexport function TransactionFormView(props: TransactionFormViewProps) {\r\n\r\n\tfunction handleSubmit(e: React.FormEvent) {\r\n\t\te.preventDefault()\r\n\t\tprops.onSubmit()\r\n\t}\r\n\r\n\treturn <form className=\"TransactionForm\" onSubmit={handleSubmit}>\r\n\r\n\t\t<Type variant=\"button\">\r\n\t\t\t{\"New transaction\"}\r\n\t\t</Type>\r\n\r\n\t\t<TextField\r\n\t\t\tvalue={props.amount}\r\n\t\t\tonChange={e => props.onAmountChange(e.target.value)}\r\n\t\t\tid=\"transaction-amount\"\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tname=\"amount\"\r\n\t\t\ttype=\"numeric\"\r\n\t\t\tlabel=\"Amount\"\r\n\t\t\terror={!!props.errors.amount}\r\n\t\t\thelperText={props.errors.amount}\r\n\t\t\tfullWidth\r\n\t\t\trequired\r\n\t\t\tsize=\"small\"\r\n\t\t\tInputProps={{\r\n\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t{\"EUR\"}\r\n\t\t\t\t\t</Type>\r\n\t\t\t\t</InputAdornment>\r\n\t\t\t}}\r\n\t\t/>\r\n\r\n\t\t<Autocomplete\r\n\t\t\tvalue={props.category}\r\n\t\t\tonChange={(e, v) => props.onCategoryChange(v)}\r\n\t\t\tid=\"transaction-category\"\r\n\t\t\tfreeSolo\r\n\t\t\topenOnFocus\r\n\t\t\tautoHighlight\r\n\t\t\tselectOnFocus\r\n\t\t\tdisableClearable\r\n\t\t\tfullWidth\r\n\t\t\tsize=\"small\"\r\n\t\t\toptions={props.categories}\r\n\t\t\trenderInput={(params) => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tname=\"category\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tlabel=\"Category\"\r\n\t\t\t\t\terror={!!props.errors.category}\r\n\t\t\t\t\thelperText={props.errors.category}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\t{...params}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t/>\r\n\r\n\t\t<KeyboardDatePicker\r\n\t\t\tvalue={props.time}\r\n\t\t\tonChange={d => props.onTimeChange(d as Date)}\r\n\t\t\tformat=\"dd/MM/yyyy\"\r\n\t\t\tid=\"transaction-time\"\r\n\t\t\tvariant=\"inline\"\r\n\t\t\tinputVariant=\"outlined\"\r\n\t\t\tlabel=\"Date\"\r\n\t\t\terror={!!props.errors.time}\r\n\t\t\thelperText={props.errors.time}\r\n\t\t\tfullWidth\r\n\t\t\trequired\r\n\t\t\tsize=\"small\"\r\n\t\t/>\r\n\r\n\t\t<TextField\r\n\t\t\tvalue={props.comment}\r\n\t\t\tonChange={e => props.onCommentChange(e.target.value)}\r\n\t\t\tid=\"transaction-comment\"\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tname=\"comment\"\r\n\t\t\ttype=\"text\"\r\n\t\t\tlabel=\"Comment\"\r\n\t\t\terror={!!props.errors.comment}\r\n\t\t\thelperText={props.errors.comment}\r\n\t\t\tfullWidth\r\n\t\t\tsize=\"small\"\r\n\t\t/>\r\n\r\n\t\t<Button\r\n\t\t\ttype=\"submit\"\r\n\t\t\tcolor=\"primary\"\r\n\t\t\tvariant=\"contained\"\r\n\t\t\tsize=\"small\"\r\n\t\t>\r\n\t\t\t{\"Create\"}\r\n\t\t</Button>\r\n\r\n\t</form>\r\n}","import React, { useState } from \"react\"\r\nimport { TransactionFormView } from \"./TransactionFormView\"\r\nimport { useStoreActions, useStoreState } from \"../../store\"\r\n\r\nexport type TransactionFormProps = {\r\n\r\n}\r\n\r\nexport function TransactionForm(props: TransactionFormProps) {\r\n\r\n\tconst categories = useStoreState(_ => _.transactions.categories)\r\n\r\n\tconst postTransaction = useStoreActions(_ => _.transactions.postTransaction)\r\n\r\n\t/**\r\n\t * Input state\r\n\t */\r\n\tconst [amount, setAmount] = useState<string>(\"\")\r\n\tconst [category, setCategory] = useState<string>(\"\")\r\n\tconst [time, setTime] = useState<Date>(new Date())\r\n\tconst [comment, setComment] = useState<string>(\"\")\r\n\r\n\t/**\r\n\t * Error state\r\n\t */\r\n\tconst [error, setError] = useState<string>()\r\n\tconst [amountError, setAmountError] = useState<string>()\r\n\tconst [categoryError, setCategoryError] = useState<string>()\r\n\tconst [timeError, setTimeError] = useState<string>()\r\n\tconst [commentError, setCommentError] = useState<string>()\r\n\r\n\t/**\r\n\t * Validators\r\n\t */\r\n\tfunction validateAmount(): string | undefined {\r\n\t\t/* eslint-disable-next-line no-useless-escape */\r\n\t\tconst valid = /^-?\\d*[\\.,]?\\d{0,2}$/.test(amount.trim())\r\n\t\tif (!valid) return \"Invalid number\"\r\n\t\treturn undefined\r\n\t}\r\n\r\n\tfunction validateCategory(): string | undefined {\r\n\t\tconst valid = /[A-Za-z\\d\\-_\\s]+/.test(category.trim())\r\n\t\tconst empty = category.trim() === \"\"\r\n\t\tif (!valid) return \"Invalid category, do not use any special characters\"\r\n\t\tif (empty) return \"Please enter a cetegory\"\r\n\t\treturn undefined\r\n\t}\r\n\r\n\tfunction validateTime(): string | undefined {\r\n\t\tconst valid = time.getTime() > 0 && !isNaN(time.getTime())\r\n\t\tif (!valid) return \"Invalid date\"\r\n\t\treturn undefined\r\n\t}\r\n\r\n\tfunction validateComment(): string | undefined {\r\n\t\treturn undefined\r\n\t}\r\n\r\n\t/**\r\n\t * Full validation\r\n\t */\r\n\tfunction validateForm(): boolean {\r\n\t\tconst amountValidationError = validateAmount()\r\n\t\tconst categoryValidationError = validateCategory()\r\n\t\tconst timeValidationError = validateTime()\r\n\t\tconst commentValidationError = validateComment()\r\n\r\n\t\tsetAmountError(amountValidationError)\r\n\t\tsetCategoryError(categoryValidationError)\r\n\t\tsetTimeError(timeValidationError)\r\n\t\tsetCommentError(commentValidationError)\r\n\r\n\t\tif (\r\n\t\t\t!amountValidationError &&\r\n\t\t\t!categoryValidationError &&\r\n\t\t\t!timeValidationError &&\r\n\t\t\t!commentValidationError\r\n\t\t) {\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\t/**\r\n\t * Handle form submission\r\n\t */\r\n\tasync function handleSubmit() {\r\n\t\tconst formValid = validateForm()\r\n\t\tif (formValid) {\r\n\t\t\tconst result = await postTransaction({\r\n\t\t\t\tintegerAmount: Math.trunc(Number(amount.trim().replace(/,/g, '.')) * 100),\r\n\t\t\t\tcategory: category.trim(),\r\n\t\t\t\ttime: time.getTime(),\r\n\t\t\t\tcomment: comment.trim(),\r\n\t\t\t})\r\n\t\t\tresult.onSuccess(() => {\r\n\t\t\t\tsetAmount(\"\")\r\n\t\t\t\tsetCategory(\"\")\r\n\t\t\t\tsetTime(new Date())\r\n\t\t\t\tsetComment(\"\")\r\n\t\t\t})\r\n\t\t\tresult.onFailure(failure => {\r\n\t\t\t\tswitch (failure.code) {\r\n\t\t\t\t\tcase \"data/invalid-request-data\":\r\n\t\t\t\t\t\tif (failure.data?.errors?.integerAmount) {\r\n\t\t\t\t\t\t\tsetAmountError(String(failure.data.errors.integerAmount))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (failure.data?.errors?.category) {\r\n\t\t\t\t\t\t\tsetCategoryError(String(failure.data.errors.category))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (failure.data?.errors?.comment) {\r\n\t\t\t\t\t\t\tsetCommentError(String(failure.data.errors.comment))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (failure.data?.errors?.time) {\r\n\t\t\t\t\t\t\tsetTimeError(String(failure.data.errors.time))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (failure.data?.errors?._root) {\r\n\t\t\t\t\t\t\tsetError(failure.data.errors._root)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (failure.data?.errors?.id) {\r\n\t\t\t\t\t\t\tsetError(failure.data.errors.id)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (failure.data?.errors?.uid) {\r\n\t\t\t\t\t\t\tsetError(failure.data.errors.uid)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"transaction/already-exists\":\r\n\t\t\t\t\t\tsetError(\"Could not post transaction due to overlapping IDs\")\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"server/unavailable\":\r\n\t\t\t\t\t\tsetError(\"Could not react server. Try again later.\")\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.warn(\"Uncaught failure\", failure)\r\n\t\t\t\t\t\tsetError(\"Error posting transaction.\")\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn <TransactionFormView\r\n\t\tonSubmit={handleSubmit}\r\n\t\tamount={amount}\r\n\t\tcategory={category}\r\n\t\ttime={time}\r\n\t\tcomment={comment}\r\n\t\tonAmountChange={value => setAmount(value)}\r\n\t\tonCategoryChange={value => setCategory(value)}\r\n\t\tonTimeChange={value => setTime(value)}\r\n\t\tonCommentChange={value => setComment(value)}\r\n\t\terrors={{\r\n\t\t\tmain: error,\r\n\t\t\tamount: amountError,\r\n\t\t\tcategory: categoryError,\r\n\t\t\ttime: timeError,\r\n\t\t\tcomment: commentError,\r\n\t\t}}\r\n\t\tcategories={categories}\r\n\t/>\r\n}","import { useEffect, useState, useCallback, useMemo } from \"react\";\r\n\r\nexport function useMedia(query: string) {\r\n  /**\r\n   * Media query list from query\r\n   */\r\n  const mediaQueryList = useMemo(() => {\r\n    return window.matchMedia(query);\r\n  }, [query]);\r\n\r\n  /**\r\n   * Current value\r\n   */\r\n  const [value, setValue] = useState<boolean>(false);\r\n\r\n  /**\r\n   * Changehandler: sets the current value\r\n   */\r\n  const changeHandler = useCallback(() => {\r\n    setValue(mediaQueryList.matches);\r\n  }, [mediaQueryList]);\r\n\r\n  /**\r\n   * Listening to changes and cleanup\r\n   */\r\n  useEffect(() => {\r\n    changeHandler();\r\n    mediaQueryList.addEventListener(\"change\", changeHandler);\r\n    return () => {\r\n      mediaQueryList.removeEventListener(\"change\", changeHandler);\r\n    };\r\n  }, [mediaQueryList, changeHandler]);\r\n\r\n  /**\r\n   * Returning value\r\n   */\r\n  return value;\r\n}\r\n\r\n/**\r\n * (min-width: $px) media query hook wrapper\r\n */\r\nexport function useMinWidthMedia(minWidth: number) {\r\n  const query = `(min-width: ${minWidth}px)`;\r\n  return useMedia(query);\r\n}\r\n\r\n/**\r\n * (max-width: $px) media query hook wrapper\r\n */\r\nexport function useMaxWidthMedia(maxWidth: number) {\r\n  const query = `(max-width: ${maxWidth}px)`;\r\n  return useMedia(query);\r\n}\r\n\r\n/**\r\n * Responsive media queries for app breakpoints\r\n *\r\n * SM breakpoint at 600px\r\n */\r\nexport function useSmMedia() {\r\n  const query = `(min-width: 600px)`;\r\n  return useMedia(query);\r\n}\r\n\r\n/**\r\n * Responsive media queries for app breakpoints\r\n *\r\n * MD breakpoint at 900px\r\n */\r\nexport function useMdMedia() {\r\n  const query = `(min-width: 900px)`;\r\n  return useMedia(query);\r\n}\r\n\r\n/**\r\n * Responsive media queries for app breakpoints\r\n *\r\n * LG breakpoint at 1200px\r\n */\r\nexport function useLgMedia() {\r\n  const query = `(min-width: 1200px)`;\r\n  return useMedia(query);\r\n}\r\n","import \"./Sidebar.scss\";\r\nimport React from \"react\"\r\nimport { Auth } from \"../../models/authentication/auth.class\";\r\nimport { IconButton, Button, Drawer } from \"@material-ui/core\";\r\nimport {\r\n\tHome as DashboardIcon,\r\n\tBarChart2 as AnalyticsIcon,\r\n\tUser as UserIcon,\r\n\tSettings as SettingsIcon,\r\n\tBriefcase as BudgetIcon,\r\n\tLogOut as LogoutIcon,\r\n\tPlus as PlusIcon\r\n} from \"react-feather\"\r\nimport cx from \"classnames\"\r\nimport { TransactionForm } from \"../../components/TransactionForm/TransactionFormController\";\r\nimport { useSmMedia } from \"../../hooks/useMedia\";\r\nimport { Type } from \"../../components/Type/Type\";\r\n\r\nexport type SidebarViewProps = {\r\n\tisDashboard: boolean;\r\n\tonDashboard(): void;\r\n\r\n\tisAnalytics: boolean;\r\n\tonAnalytics(): void;\r\n\r\n\tisBudget: boolean;\r\n\tonBudget(): void;\r\n\r\n\tisSettings: boolean;\r\n\tonSettings(): void;\r\n\r\n\tuser: Auth;\r\n\tlogout(): void;\r\n\r\n\ttransactionFormOpen: boolean;\r\n\tonTransactionFormOpen(): void;\r\n\tonTransactionFormClose(): void;\r\n}\r\n\r\nexport function SidebarView(props: SidebarViewProps) {\r\n\r\n\tconst sidebarView = useSmMedia()\r\n\r\n\treturn <>\r\n\r\n\t\t<Drawer\r\n\t\t\topen={props.transactionFormOpen}\r\n\t\t\tonClose={props.onTransactionFormClose}\r\n\t\t\tanchor={sidebarView ? \"left\" : \"bottom\"}\r\n\t\t>\r\n\t\t\t<TransactionForm />\r\n\t\t</Drawer>\r\n\r\n\t\t<div className=\"Sidebar\">\r\n\r\n\t\t\t{\r\n\r\n\t\t\t\tsidebarView\r\n\r\n\t\t\t\t\t? <div className=\"sidebar\">\r\n\r\n\t\t\t\t\t\t<div className=\"header\">\r\n\r\n\t\t\t\t\t\t\t<div className=\"top-row\">\r\n\r\n\t\t\t\t\t\t\t\t<Type variant=\"h4\" component=\"h6\">\r\n\t\t\t\t\t\t\t\t\t{\"Expence\"}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t\t\t<IconButton onClick={props.logout}>\r\n\t\t\t\t\t\t\t\t\t<LogoutIcon />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"bottom-row\">\r\n\r\n\t\t\t\t\t\t\t\t<UserIcon />\r\n\r\n\t\t\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t\t\t{props.user.displayName}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"body\">\r\n\r\n\t\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isDashboard })}\r\n\t\t\t\t\t\t\t\t\tonClick={props.onDashboard}\r\n\t\t\t\t\t\t\t\t\tstartIcon={<DashboardIcon />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\"Dashboard\"}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isAnalytics })}\r\n\t\t\t\t\t\t\t\t\tonClick={props.onAnalytics}\r\n\t\t\t\t\t\t\t\t\tstartIcon={<AnalyticsIcon />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\"Analytics\"}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isBudget })}\r\n\t\t\t\t\t\t\t\t\tonClick={props.onBudget}\r\n\t\t\t\t\t\t\t\t\tstartIcon={<BudgetIcon />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\"Budget\"}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isSettings })}\r\n\t\t\t\t\t\t\t\t\tonClick={props.onSettings}\r\n\t\t\t\t\t\t\t\t\tstartIcon={<SettingsIcon />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\"Settings\"}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"tabContainer addButton\">\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName={cx(\"tab\")}\r\n\t\t\t\t\t\t\t\t\tonClick={props.onTransactionFormOpen}\r\n\t\t\t\t\t\t\t\t\tstartIcon={<PlusIcon />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\"New transaction\"}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t: <div className=\"tabs\">\r\n\r\n\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isDashboard })}\r\n\t\t\t\t\t\t\t\tonClick={props.onDashboard}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<DashboardIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isAnalytics })}\r\n\t\t\t\t\t\t\t\tonClick={props.onAnalytics}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<AnalyticsIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={cx(\"tab\")}\r\n\t\t\t\t\t\t\t\tonClick={props.onTransactionFormOpen}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<PlusIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isBudget })}\r\n\t\t\t\t\t\t\t\tonClick={props.onBudget}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<BudgetIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isSettings })}\r\n\t\t\t\t\t\t\t\tonClick={props.onSettings}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<SettingsIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n\r\n\t</>\r\n}","import React, { useState } from \"react\"\r\nimport { SidebarView } from \"./SidebarView\"\r\nimport { useRouteMatch } from \"react-router-dom\"\r\nimport { routes } from \"../../Routes\"\r\nimport { useRedirect } from \"../../hooks/useRedirect\"\r\nimport { useStoreState, useStoreActions } from \"../../store\"\r\n\r\nexport type SidebarProps = {\r\n\r\n}\r\n\r\nexport function Sidebar(props: SidebarProps) {\r\n\r\n\tconst dashboardMatch = useRouteMatch(routes.dashboard)\r\n\tconst analyticsMatch = useRouteMatch(routes.analytics)\r\n\tconst budgetMatch = useRouteMatch(routes.budget)\r\n\tconst settingsMatch = useRouteMatch(routes.settings)\r\n\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\r\n\tconst logout = useStoreActions(_ => _.auth.logout)\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst [transactionFormOpen, setTransactionFormOpen] = useState(false)\r\n\r\n\tif (!user) return null\r\n\r\n\treturn <SidebarView\r\n\r\n\t\tisDashboard={!!dashboardMatch}\r\n\t\tonDashboard={() => redirect(routes.dashboard)}\r\n\r\n\t\tisAnalytics={!!analyticsMatch}\r\n\t\tonAnalytics={() => redirect(routes.analytics)}\r\n\r\n\t\tisBudget={!!budgetMatch}\r\n\t\tonBudget={() => redirect(routes.budget)}\r\n\r\n\t\tisSettings={!!settingsMatch}\r\n\t\tonSettings={() => redirect(routes.settings)}\r\n\r\n\t\tuser={user}\r\n\t\tlogout={() => logout()}\r\n\r\n\t\ttransactionFormOpen={transactionFormOpen}\r\n\t\tonTransactionFormOpen={() => setTransactionFormOpen(true)}\r\n\t\tonTransactionFormClose={() => setTransactionFormOpen(false)}\r\n\r\n\t/>\r\n}","import \"./AppFrame.scss\";\r\nimport React from \"react\"\r\nimport { Sidebar } from \"../Sidebar/SidebarController\";\r\n\r\nexport type AppFrameViewProps = {\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nexport function AppFrameView(props: AppFrameViewProps) {\r\n\treturn <div className=\"AppFrame\">\r\n\t\t<div className=\"sidebar\">\r\n\t\t\t<Sidebar />\r\n\t\t</div>\r\n\t\t<div className=\"content\">\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t</div>\r\n}","import React from \"react\"\r\nimport { AppFrameView } from \"./AppFrameView\"\r\n\r\nexport type AppFrameProps = {\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nexport function AppFrame(props: AppFrameProps) {\r\n\treturn <AppFrameView children={props.children} />\r\n}","import \"./ChangePassword.scss\";\r\nimport React, { useState } from \"react\"\r\nimport { AuthFrame } from \"../../components/AuthFrame/AuthFrame\";\r\nimport { ChangePasswordFormType, changePasswordValidationSchema } from \"./ChangePasswordController\";\r\nimport { Type } from \"../../components/Type/Type\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField, InputAdornment, IconButton, Button, CircularProgress } from \"@material-ui/core\";\r\nimport {\r\n\tVisibility as PasswordVisibleIcon,\r\n\tVisibilityOff as PasswordInvisibleIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nexport type ChangePasswordViewProps = {\r\n\r\n\tvalidTokenEmail: string | undefined | null;\r\n\r\n\tloading: boolean;\r\n\r\n\tpasswordChangeSuccessful: boolean;\r\n\r\n\terror?: string;\r\n\r\n\tonSubmit(values: ChangePasswordFormType): void;\r\n\r\n\tonLogin(): void;\r\n\r\n}\r\n\r\nexport function ChangePasswordView(props: ChangePasswordViewProps) {\r\n\r\n\t/**\r\n\t * Password visible state\r\n\t */\r\n\tconst [passwordVisible, setPasswordVisible] = useState(false)\r\n\r\n\t/**\r\n\t * React hook form\r\n\t */\r\n\tconst form = useForm<ChangePasswordFormType>({\r\n\t\tresolver: yupResolver(changePasswordValidationSchema),\r\n\t})\r\n\r\n\t/**\r\n\t * Email and password error shorthands for react hook form\r\n\t */\r\n\tconst passwordError = form.formState.touched.password && form.errors.password?.message\r\n\r\n\treturn <div className=\"ChangePassword\">\r\n\r\n\t\t<AuthFrame\r\n\r\n\t\t\theader=\"Change password\"\r\n\r\n\t\t\tbody={(() => {\r\n\r\n\t\t\t\tif (props.loading) {\r\n\r\n\t\t\t\t\treturn <CircularProgress />\r\n\r\n\t\t\t\t} else if (!props.validTokenEmail) {\r\n\r\n\t\t\t\t\treturn <>\r\n\r\n\t\t\t\t\t\t<Type color=\"error\">\r\n\t\t\t\t\t\t\t{\"Invalid password change link\"}\r\n\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={props.onLogin}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Back to login\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t</>\r\n\r\n\t\t\t\t} else if (props.passwordChangeSuccessful) {\r\n\r\n\t\t\t\t\treturn <>\r\n\r\n\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t{\"Password changed for \" + props.validTokenEmail}\r\n\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={props.onLogin}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Login\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t</>\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn <form onSubmit={form.handleSubmit(props.onSubmit)}>\r\n\r\n\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t{\"Enter a new password for \" + props.validTokenEmail}\r\n\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"change-password\"\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\ttype={passwordVisible ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\tinputRef={form.register}\r\n\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\terror={!!passwordError}\r\n\t\t\t\t\t\t\thelperText={passwordError}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<IconButton onClick={() => setPasswordVisible(_ => !_)} size=\"small\">\r\n\t\t\t\t\t\t\t\t\t\t{passwordVisible ? <PasswordVisibleIcon /> : <PasswordInvisibleIcon />}\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Change password\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprops.error ?\r\n\t\t\t\t\t\t\t\t<Type color=\"error\">\r\n\t\t\t\t\t\t\t\t\t{props.error}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t})()}\r\n\r\n\t\t/>\r\n\r\n\t</div>\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { ChangePasswordView } from \"./ChangePasswordView\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useRedirect } from \"../../hooks/useRedirect\"\r\nimport * as yup from \"yup\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport const changePasswordValidationSchema = yup.object({\r\n\tpassword: yup.string().defined().min(6).max(255),\r\n}).defined()\r\n\r\nexport type ChangePasswordFormType = yup.InferType<typeof changePasswordValidationSchema>\r\n\r\nexport type ChangePasswordProps = {\r\n\r\n}\r\n\r\nexport function ChangePassword(props: ChangePasswordProps) {\r\n\r\n\tconst { token } = useParams<{ token?: string }>()\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst validateChangePasswordToken = useStoreActions(_ => _.auth.validateChangePasswordToken)\r\n\tconst changePassword = useStoreActions(_ => _.auth.changePassword)\r\n\r\n\t/**\r\n\t * Result from server whether the token is valid: for a valid\r\n\t * token the server will return the user's email, which is stored\r\n\t * here as a string to signal a valid token.\r\n\t * \r\n\t * We use null to signal an invalid token, when the server responds\r\n\t * with an error and undefined to signal a loading state.\r\n\t */\r\n\tconst [validTokenEmail, setValidTokenEmail] = useState<string | null | undefined>()\r\n\r\n\tconst [passwordChangeSuccessful, setPasswordChangeSuccessful] = useState(false)\r\n\r\n\tconst [error, setError] = useState<string>()\r\n\r\n\t/**\r\n\t * Initially loading the token validity state from the server\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tif (token) {\r\n\t\t\tvalidateChangePasswordToken({ token }).then(result => {\r\n\t\t\t\tresult.onSuccess((value) => {\r\n\t\t\t\t\tsetValidTokenEmail(value)\r\n\t\t\t\t})\r\n\t\t\t\tresult.onFailure(() => {\r\n\t\t\t\t\tsetValidTokenEmail(null)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}, []) // eslint-disable-line\r\n\r\n\t/**\r\n\t * If no token is present, automatically redirect the user\r\n\t */\r\n\tif (!token) {\r\n\t\tredirect(_ => _.login)\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Handle submitting\r\n\t */\r\n\tfunction handleSubmit(values: ChangePasswordFormType) {\r\n\t\tif (token) {\r\n\t\t\tchangePassword({ ...values, token }).then(result => {\r\n\t\t\t\tresult.onSuccess(() => {\r\n\t\t\t\t\tsetPasswordChangeSuccessful(true)\r\n\t\t\t\t})\r\n\t\t\t\tresult.onFailure(() => {\r\n\t\t\t\t\tsetError(\"Could not change password\")\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn <ChangePasswordView\r\n\r\n\t\tvalidTokenEmail={validTokenEmail}\r\n\r\n\t\tloading={validTokenEmail === undefined}\r\n\r\n\t\tpasswordChangeSuccessful={passwordChangeSuccessful}\r\n\r\n\t\tonSubmit={handleSubmit}\r\n\r\n\t\tonLogin={() => redirect(_ => _.login)}\r\n\r\n\t\terror={error}\r\n\r\n\t/>\r\n}","import \"./ConfirmEmail.scss\";\r\nimport React from \"react\"\r\nimport { AuthFrame } from \"../../components/AuthFrame/AuthFrame\";\r\nimport { Type } from \"../../components/Type/Type\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\n\r\nexport type ConfirmEmailViewProps = {\r\n\tsuccess: undefined | boolean;\r\n\tonLogin(): void;\r\n}\r\n\r\nexport function ConfirmEmailView(props: ConfirmEmailViewProps) {\r\n\r\n\treturn <div className=\"ConfirmEmail\">\r\n\r\n\t\t<AuthFrame\r\n\r\n\t\t\theader=\"Change password\"\r\n\r\n\t\t\tbody={(() => {\r\n\r\n\t\t\t\tswitch (props.success) {\r\n\r\n\t\t\t\t\tcase undefined:\r\n\r\n\t\t\t\t\t\treturn <CircularProgress />\r\n\r\n\t\t\t\t\tcase false:\r\n\r\n\t\t\t\t\t\treturn <>\r\n\r\n\t\t\t\t\t\t\t<Type color=\"error\">\r\n\t\t\t\t\t\t\t\t{\"Invalid password change link\"}\r\n\t\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={props.onLogin}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{\"Back to login\"}\r\n\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t\tcase true:\r\n\r\n\t\t\t\t\t\treturn <>\r\n\r\n\t\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t\t{\"Email succesfully confirmed\"}\r\n\t\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={props.onLogin}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{\"Login\"}\r\n\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t})()}\r\n\r\n\t\t/>\r\n\r\n\t</div>\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { ConfirmEmailView } from \"./ConfirmEmailView\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useRedirect } from \"../../hooks/useRedirect\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport type ConfirmEmailProps = {\r\n\r\n}\r\n\r\nexport function ConfirmEmail(props: ConfirmEmailProps) {\r\n\r\n\tconst { token } = useParams<{ token?: string }>()\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst confirmEmail = useStoreActions(_ => _.auth.confirmEmail)\r\n\r\n\t/**\r\n\t * Boolean for whether confirmation was successful or not: undefined\r\n\t * signals a loading value\r\n\t */\r\n\tconst [success, setSuccess] = useState<boolean>()\r\n\r\n\t/**\r\n\t * Initially loading the token validity state from the server\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tif (token) {\r\n\t\t\tconfirmEmail({ token }).then(result => {\r\n\t\t\t\tsetSuccess(result.isSuccess())\r\n\t\t\t})\r\n\t\t}\r\n\t}, []) // eslint-disable-line\r\n\r\n\t/**\r\n\t * If no token is present, automatically redirect the user\r\n\t */\r\n\tif (!token) {\r\n\t\tredirect(_ => _.login)\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn <ConfirmEmailView\r\n\r\n\t\tsuccess={success}\r\n\r\n\t\tonLogin={() => redirect(_ => _.login)}\r\n\r\n\t/>\r\n}","import React from \"react\"\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Login } from './views/Login/LoginController';\r\nimport { Register } from './views/Register/RegisterController';\r\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute';\r\nimport { Dashboard } from './views/Dashboard/DashboardController';\r\nimport { Settings } from \"./views/Settings/SettingsController\";\r\nimport { Analytics } from \"./views/Analytics/AnalyticsController\";\r\nimport { ForgotPassword } from \"./views/ForgotPassword/ForgotPasswordController\";\r\nimport { AppFrame } from \"./views/AppFrame/AppFrameController\";\r\nimport { ChangePassword } from \"./views/ChangePassword/ChangePasswordController\";\r\nimport { ConfirmEmail } from \"./views/ConfirmEmail/ConfirmEmailController\";\r\n\r\nexport const routes = {\r\n\tapproot: \"/app\",\r\n\tdashboard: \"/app/dashboard\",\r\n\tanalytics: \"/app/analytics\",\r\n\tbudget: \"/app/budget\",\r\n\tsettings: \"/app/settings\",\r\n\tlogin: \"/\",\r\n\tforgotPassword: \"/forgotPassword\",\r\n\tregister: \"/register\",\r\n\tchangePassword(token: string) {\r\n\t\treturn `/changePassword/${token}`\r\n\t},\r\n\tconfirmEmail(token: string) {\r\n\t\treturn `/confirmEmail/${token}`\r\n\t}\r\n} as const;\r\n\r\nexport function Routes() {\r\n\r\n\treturn <Switch>\r\n\r\n\t\t<Route exact path={routes.login}>\r\n\t\t\t<Login />\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.register}>\r\n\t\t\t<Register />\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.forgotPassword}>\r\n\t\t\t<ForgotPassword />\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.changePassword(\":token\")}>\r\n\t\t\t<ChangePassword />\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.confirmEmail(\":token\")}>\r\n\t\t\t<ConfirmEmail />\r\n\t\t</Route>\r\n\r\n\t\t<ProtectedRoute exact path={routes.dashboard}>\r\n\t\t\t<AppFrame>\r\n\t\t\t\t<Dashboard />\r\n\t\t\t</AppFrame>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.analytics}>\r\n\t\t\t<AppFrame>\r\n\t\t\t\t<Analytics />\r\n\t\t\t</AppFrame>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.budget}>\r\n\t\t\t<AppFrame>\r\n\t\t\t\t<p>Budget placeholder</p>\r\n\t\t\t</AppFrame>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.settings}>\r\n\t\t\t<AppFrame>\r\n\t\t\t\t<Settings />\r\n\t\t\t</AppFrame>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<Route exact path=\"/v\">\r\n\t\t\tVersion number 0.0.1\r\n\t\t</Route>\r\n\r\n\t\t<Route path=\"/\">\r\n\t\t\t<Redirect to={routes.dashboard} />\r\n\t\t</Route>\r\n\t</Switch>\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport { Routes } from './Routes';\r\nimport { useStoreActions } from './store';\r\n\r\nfunction App() {\r\n\r\n\t/**\r\n\t * Initialize by fetching the user's profile if any\r\n\t */\r\n\tconst getProfile = useStoreActions(_ => _.auth.getProfile)\r\n\r\n\tuseEffect(() => {\r\n\t\tgetProfile()\r\n\t}, [getProfile])\r\n\r\n\treturn <Routes />\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createMuiTheme, colors } from \"@material-ui/core\";\r\n\r\n// Access any CSS var in :root by name\r\nfunction cssvar(\r\n  name: string,\r\n  options?: {\r\n    color?: boolean;\r\n  }\r\n) {\r\n  let value = getComputedStyle(document.documentElement).getPropertyValue(\r\n    \"--\" + name\r\n  );\r\n  if (options) {\r\n    if (options.color) {\r\n      if (process.env.NODE_ENV === \"development\") {\r\n        value = value.substring(1);\r\n      }\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      ...colors.deepPurple,\r\n      main: cssvar(\"color-primary-main\", { color: true }),\r\n      dark: cssvar(\"color-primary-dark\", { color: true }),\r\n      light: cssvar(\"color-primary-light\", { color: true }),\r\n      50: cssvar(\"color-primary-50\", { color: true }),\r\n      100: cssvar(\"color-primary-100\", { color: true }),\r\n      200: cssvar(\"color-primary-200\", { color: true }),\r\n      300: cssvar(\"color-primary-300\", { color: true }),\r\n      400: cssvar(\"color-primary-400\", { color: true }),\r\n      500: cssvar(\"color-primary-500\", { color: true }),\r\n      600: cssvar(\"color-primary-600\", { color: true }),\r\n      700: cssvar(\"color-primary-900\", { color: true }),\r\n      800: cssvar(\"color-primary-800\", { color: true }),\r\n      900: cssvar(\"color-primary-700\", { color: true }),\r\n      contrastText: \"#fff\",\r\n    },\r\n  },\r\n});\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).theme = theme;\r\n}\r\n","import \"./styles/index.scss\"\r\nimport \"./styles/main.scss\"\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from './store';\r\nimport { StoreProvider } from 'easy-peasy';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { theme } from \"./styles/theme\";\r\nimport DateFnsUtils from \"@date-io/date-fns\"\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<StoreProvider store={store}>\r\n\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\t\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t\t<App />\r\n\t\t\t\t\t</BrowserRouter>\r\n\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t</ThemeProvider>\r\n\t\t</StoreProvider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}