{"version":3,"sources":["images/logo_google.png","images/pexels-johannes-plenio-1103970.jpg","components/Type/Type.tsx","components/AuthFrame/AuthFrame.tsx","views/Login/LoginView.tsx","classes/Auth.ts","config.ts","utils/Result/Result.ts","utils/Result/PromiseToResult.ts","utils/Result/Try.ts","services/Service.ts","services/AuthService.ts","models/auth.model.ts","classes/MoneyAmount.ts","classes/Transaction.ts","services/TransactionService.ts","utils/groupByDate/groupByDate.ts","utils/compareDate/compareDate.ts","models/transactions.filtered.model.ts","models/transactions.model.ts","constants.ts","store.ts","models/interval.model.ts","models/filters.model.ts","hooks/useRedirect.ts","views/Login/LoginController.tsx","views/Register/RegisterView.tsx","views/Register/RegisterController.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/TransactionListing/TransactionListingView.tsx","components/TransactionListing/TransactionListing.tsx","components/TransactionList/TransactionListView.tsx","components/TransactionList/TransactionListController.tsx","components/PageHeader/PageHeader.tsx","components/MoneyType/MoneyType.tsx","hooks/useMedia.ts","components/FiltersForm/FiltersFormView.tsx","components/FiltersForm/FiltersFormController.tsx","components/IntervalPickerForm/IntervalPickerFormView.tsx","components/IntervalPickerForm/IntervalPickerFormController.tsx","components/FiltersPanel/FiltersPanelView.tsx","components/FiltersPanel/FiltersPanelController.tsx","views/Dashboard/DashboardView.tsx","views/Dashboard/DashboardController.tsx","utils/FileIO/FileIO.ts","utils/FileIO/TransactionSpreadsheet.ts","utils/FileIO/Spreadsheet.ts","components/FileUploader/FileUploaderView.tsx","components/FileUploader/FileUploader.tsx","views/Settings/SettingsView.tsx","views/Settings/SettingsController.tsx","views/Analytics/AnalyticsView.tsx","views/Analytics/AnalyticsController.tsx","views/ForgotPassword/ForgotPasswordView.tsx","views/ForgotPassword/ForgotPasswordController.tsx","components/TransactionForm/TransactionFormView.tsx","components/TransactionForm/TransactionFormController.tsx","views/Sidebar/SidebarView.tsx","views/Sidebar/SidebarController.tsx","views/AppFrame/AppFrameView.tsx","views/AppFrame/AppFrameController.tsx","views/ChangePassword/ChangePasswordView.tsx","views/ChangePassword/ChangePasswordController.tsx","views/ConfirmEmail/ConfirmEmailView.tsx","views/ConfirmEmail/ConfirmEmailController.tsx","Routes.tsx","App.tsx","serviceWorker.ts","styles/theme.ts","index.tsx"],"names":["module","exports","Type","props","condensed","className","color","typographyProps","Typography","cx","String","AuthFrame","variant","component","header","body","footer","Divider","LoginView","useState","passwordVisible","setPasswordVisible","useForm","resolver","yupResolver","loginValidationSchema","register","handleSubmit","errors","formState","emailError","touched","email","message","passwordError","password","noValidate","onSubmit","TextField","id","name","type","inputRef","label","error","helperText","fullWidth","InputProps","endAdornment","InputAdornment","position","Email","IconButton","onClick","_","size","Button","handleGoogleSubmit","startIcon","src","googleLogo","alt","handleCreateAccount","handleForgotPassword","Auth","json","displayName","photoUrl","googleId","this","undefined","arg","JsonSchema","isValidSync","object","string","required","min","Config","Success","value","fallbackValue","callback","array","filter","isSuccess","map","Failure","options","status","code","details","isFailure","axiosError","response","data","request","codePrefix","description","trim","PromiseToResult","promise","then","resolved","catch","rejected","Try","fn","result","Promise","_result","Service","path","baseURL","token","store","getState","auth","accessToken","payload","jwt","decode","expiresAt","Number","exp","Date","now","console","warn","force","isAccessTokenValid","url","endpoint","axios","get","getActions","_setAccessToken","logout","attemptRefreshAccessToken","override","headers","Authorization","config","requestFunction","onBeforeRequest","getConfig","a","AxiosError","handleRequest","post","delete","put","patch","API_URL","Axios","create","withCredentials","AuthService","isJson","InvalidResponse","credentials","Empty","window","location","href","authModel","initialized","_setInitialized","action","state","boolean","user","isLoggedIn","computed","Boolean","newAccessToken","_login","_logout","getProfile","thunk","actions","profileResult","onSuccess","profile","loginWithGoogle","loginWithEmailPassword","loginWithEmailAndPassword","registerWithEmailPassword","registerWithEmailAndPassword","forgotPassword","validateChangePasswordToken","validatePasswordChangeToken","changePassword","confirmEmail","requestConfirmationEmail","MoneyAmount","cents","_value","Math","trunc","Error","decimalValue","toLocaleString","style","currency","that","floor","abs","values","reduce","sum","add","Transaction","date","category","comment","amount","uid","time","integerAmount","uuid","getTime","validateSync","Array","isArray","every","number","positive","integer","TransactionService","isJsonArray","groupByDate","items","getDate","itemsByKey","res","item","key","datefns","getKey","Object","entries","entry","sort","b","compareDate","op","_a","serializeDate","_b","getFullYear","getMonth","filteredTransactionsModel","storeState","transactions","interval","startDate","endDate","filters","searchTerm","minAmount","maxAmount","excludedCategories","includes","format","toLowerCase","itemsByDates","filtered","count","length","sums","incomes","isPositive","expenses","isNegative","all","transactionsModel","categories","c","i","indexOf","minimumAmount","next","maximumAmount","max","getTransactions","_getTransactions","jsons","postTransaction","_postTransaction","push","deleteTransaction","_deleteTransaction","putTransaction","_putTransaction","patchTransaction","_patchTransaction","onAuthChanged","thunkOn","target","resolvedTargets","loggedOut","loggedIn","_clearTransactions","MINIMUM_DATE","MAXIMUM_DATE","storeModel","setStartDate","setEndDate","setInterval","dates","nextInterval","isAll","newStartDate","isYear","isMonth","isWeek","weekStartsOn","previousInterval","newEndDate","dayInterval","weekInterval","monthInterval","yearInterval","allInterval","today","isDay","includesToday","smartDisplayString","displayString","NEGATIVE_INFINITY","POSITIVE_INFINITY","resetAll","setSearchTerm","resetSearchTerm","setAmount","resetAmount","excludeCategory","includeCategory","resetExcludedCategories","createStore","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","useStore","useRedirect","history","useHistory","routes","yup","defined","Login","setError","redirect","dashboard","onFailure","failure","useEffect","RegisterView","form","registerValidationSchema","registered","handleLogin","Register","setRegistered","login","ProtectedRoute","fallbackRoute","routeProps","defaultFallbackRoute","to","TransactionListingView","signClass","transaction","TransactionListing","handleDelete","useCallback","TransactionListView","virtualizedListRef","createRef","current","recomputeRowHeights","autoSizer","ref","height","width","rowCount","rowHeight","index","noRowsRenderer","rowRenderer","rowProps","currentYear","TransactionList","filteredItemsByDates","bypassFilters","PageHeader","textureImg","children","MoneyType","typeProps","useMedia","query","mediaQueryList","useMemo","matchMedia","setValue","changeHandler","matches","addEventListener","removeEventListener","useSmMedia","FiltersFormView","onResetAll","onChange","e","onResetSearchTerm","Clear","onResetAmount","minPossibleAmount","maxPossibleAmount","ceil","Slider","step","marks","valueLabelDisplay","onResetExcludedCategories","excluded","Chip","onConfirm","FiltersForm","IntervalPickerFormView","intervalString","disabled","onPrevious","ChevronLeft","onNow","onNext","ChevronRight","onDay","onWeek","onMonth","onYear","onAll","DatePicker","d","inputVariant","IntervalPickerForm","toDay","toWeek","toMonth","toYear","toAll","previous","FiltersPanelView","filtersFormDrawerOpen","setFiltersFormDrawerOpen","intervalPickerMenuAnchor","setIntervalPickerMenuAnchor","mediumScreen","largeScreen","Drawer","open","onClose","anchor","Menu","anchorEl","currentTarget","endIcon","FiltersPanel","DashboardView","filteredSum","Dashboard","filteredSums","filteredIncomesSum","filteredExpensesSum","FileIO","resolve","onload","reader","FileReader","onerror","FileReaderFailure","onabort","FileReaderAbortedFailure","input","file","files","MissingFileFailure","createReader","event","FileReaderInvalidTypeFailure","FileReaderMissingTargetFailure","readAsArrayBuffer","readAsText","TransactionSpreadsheet","schema","names","transformBeforeValidation","replace","split","day","month","year","dd","padStart","mm","iso","join","row","transformed","keys","forEach","columnKey","find","columnValue","validate","validation","From","readFileAsArrayBuffer","arrayBuffer","workbook","XLSX","read","sheet","Sheets","SheetNames","utils","sheet_to_json","raw","rowParsers","parseRow","parsedRows","succeededRows","All","failedRows","success","failed","FileUploaderView","handleFileUpload","parsing","CircularProgress","uploading","handleUpload","FileUploader","setResult","setParsing","setUploading","transactionSpreadsheet","readFile","readResult","SettingsView","desktopLayout","uploaderOpen","onUploaderClose","handleLogout","onUploaderOpen","Settings","setUploaderOpen","AnalyticsView","accept","log","rows","toString","reverse","Analytics","ForgotPasswordView","forgotPasswordValidationSchema","ForgotPassword","setSuccess","TransactionFormView","preventDefault","onAmountChange","Autocomplete","v","onCategoryChange","freeSolo","openOnFocus","autoHighlight","selectOnFocus","disableClearable","renderInput","params","onTimeChange","onCommentChange","TransactionForm","setCategory","setTime","setComment","amountError","setAmountError","categoryError","setCategoryError","timeError","setTimeError","commentError","setCommentError","validateForm","amountValidationError","test","validateAmount","categoryValidationError","valid","empty","validateCategory","timeValidationError","isNaN","validateTime","validateComment","_root","main","SidebarView","sidebarView","transactionFormOpen","onTransactionFormClose","active","isDashboard","onDashboard","isAnalytics","onAnalytics","isBudget","onBudget","isSettings","onSettings","onTransactionFormOpen","Sidebar","dashboardMatch","useRouteMatch","analyticsMatch","analytics","budgetMatch","budget","settingsMatch","settings","setTransactionFormOpen","AppFrameView","AppFrame","ChangePasswordView","changePasswordValidationSchema","loading","validTokenEmail","passwordChangeSuccessful","onLogin","ChangePassword","useParams","setValidTokenEmail","setPasswordChangeSuccessful","ConfirmEmailView","ConfirmEmail","approot","Routes","exact","App","hostname","match","cssvar","getComputedStyle","document","documentElement","getPropertyValue","theme","createMuiTheme","palette","primary","colors","deepPurple","dark","light","50","100","200","300","400","500","600","700","800","900","contrastText","ReactDOM","render","StrictMode","ThemeProvider","DateFnsUtils","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.309ef663.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_google.696b80ec.png\";","module.exports = __webpack_public_path__ + \"static/media/pexels-johannes-plenio-1103970.afe78909.jpg\";","import \"./Type.scss\";\r\nimport React, { ElementType } from \"react\"\r\nimport cx from \"classnames\"\r\nimport { Typography, TypographyProps } from \"@material-ui/core\";\r\n\r\nexport type TypeProps = Omit<TypographyProps, \"color\"> & {\r\n\tcomponent?: ElementType;\r\n\tcolor?: TypographyProps[\"color\"] | \"white\" | \"black\"\r\n\tcondensed?: boolean;\r\n}\r\n\r\nexport function Type(props: TypeProps) {\r\n\r\n\tconst { condensed, className, color, ...typographyProps } = props\r\n\r\n\treturn <Typography\r\n\r\n\t\t{...typographyProps}\r\n\r\n\t\tcolor={(() => {\r\n\t\t\tswitch (color) {\r\n\t\t\t\tcase \"white\":\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\tcase \"black\":\r\n\t\t\t\t\treturn undefined;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn color;\r\n\t\t\t}\r\n\t\t})()}\r\n\r\n\t\tclassName={cx(\r\n\t\t\tclassName,\r\n\t\t\t\"Type\",\r\n\t\t\t{ condensed },\r\n\t\t\t`color-${String(color)}`\r\n\t\t)}\r\n\t/>\r\n}\r\n\r\n","import \"./AuthFrame.scss\";\r\nimport React from \"react\"\r\nimport { Type } from \"../Type/Type\";\r\nimport { Divider } from \"@material-ui/core\";\r\n\r\nexport type AuthFrameProps = {\r\n\theader: string;\r\n\tbody: React.ReactNode;\r\n\tfooter?: React.ReactNode;\r\n}\r\n\r\nexport function AuthFrame(props: AuthFrameProps) {\r\n\treturn <div className=\"AuthFrame\">\r\n\r\n\t\t<div className=\"container\">\r\n\r\n\t\t\t<header>\r\n\r\n\t\t\t\t<Type variant=\"h5\" component=\"h1\" color=\"white\">\r\n\t\t\t\t\t{props.header}\r\n\t\t\t\t</Type>\r\n\r\n\t\t\t</header>\r\n\r\n\t\t\t<div className=\"content\">\r\n\r\n\t\t\t\t{props.body}\r\n\r\n\t\t\t\t{\r\n\r\n\t\t\t\t\tprops.footer\r\n\t\t\t\t\t\t? <>\r\n\r\n\t\t\t\t\t\t\t<Divider />\r\n\r\n\t\t\t\t\t\t\t<footer>\r\n\r\n\t\t\t\t\t\t\t\t{props.footer}\r\n\r\n\t\t\t\t\t\t\t</footer>\r\n\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t: null\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\r\n\t</div>\r\n}","import \"./Login.scss\";\r\nimport React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { loginValidationSchema, LoginFormType } from './LoginController';\r\nimport { yupResolver } from '@hookform/resolvers';\r\nimport { TextField, Button, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport googleLogo from \"../../images/logo_google.png\"\r\nimport {\r\n\tEmail as EmailIcon,\r\n\tVisibility as PasswordVisibleIcon,\r\n\tVisibilityOff as PasswordInvisibleIcon,\r\n} from \"@material-ui/icons\";\r\nimport { AuthFrame } from \"../../components/AuthFrame/AuthFrame\";\r\nimport { Type } from \"../../components/Type/Type\";\r\n\r\nexport type LoginViewProps = {\r\n\thandleSubmit(values: LoginFormType): Promise<void>;\r\n\thandleGoogleSubmit(): Promise<void>;\r\n\thandleForgotPassword(): Promise<void>;\r\n\thandleCreateAccount(): Promise<void>;\r\n\terror?: string;\r\n}\r\n\r\nexport const LoginView: React.FC<LoginViewProps> = (props) => {\r\n\r\n\t/**\r\n\t * Password visible state\r\n\t */\r\n\tconst [passwordVisible, setPasswordVisible] = useState(false)\r\n\r\n\t/**\r\n\t * React hook form\r\n\t */\r\n\tconst { register, handleSubmit, errors, formState, ...form } = useForm<LoginFormType>({\r\n\t\tresolver: yupResolver(loginValidationSchema),\r\n\t})\r\n\r\n\t/**\r\n\t * Email and password error shorthands for react hook form\r\n\t */\r\n\tconst emailError = formState.touched.email && errors.email?.message\r\n\tconst passwordError = formState.touched.password && errors.password?.message\r\n\r\n\treturn <div className=\"Login\">\r\n\t\t<AuthFrame\r\n\r\n\t\t\theader=\"Login to Expence\"\r\n\r\n\t\t\tbody={\r\n\t\t\t\t<form noValidate onSubmit={handleSubmit(props.handleSubmit)}>\r\n\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"login-email\"\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tinputRef={register}\r\n\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\terror={!!emailError}\r\n\t\t\t\t\t\thelperText={emailError}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t<EmailIcon />\r\n\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tid=\"login-password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\ttype={passwordVisible ? \"text\" : \"password\"}\r\n\t\t\t\t\t\tinputRef={register}\r\n\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\terror={!!passwordError}\r\n\t\t\t\t\t\thelperText={passwordError}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t<IconButton onClick={() => setPasswordVisible(_ => !_)} size=\"small\">\r\n\t\t\t\t\t\t\t\t\t{passwordVisible ? <PasswordVisibleIcon /> : <PasswordInvisibleIcon />}\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\"Login\"}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops.error\r\n\t\t\t\t\t\t\t? <Type color=\"error\">\r\n\t\t\t\t\t\t\t\t{props.error}\r\n\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tonClick={() => props.handleGoogleSubmit()}\r\n\t\t\t\t\t\tstartIcon={<img className=\"logo\" src={googleLogo} alt=\"Google Logo\" />}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\"Log in with Google\"}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t</form>\r\n\t\t\t}\r\n\r\n\t\t\tfooter={<div className=\"footerContent\">\r\n\r\n\t\t\t\t<Button onClick={() => props.handleCreateAccount()}>\r\n\t\t\t\t\t{\"Create account\"}\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Button onClick={() => props.handleForgotPassword()}>\r\n\t\t\t\t\t{\"Forgot password\"}\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t</div>}\r\n\t\t/>\r\n\t</div>\r\n}\r\n","import { object, string, ObjectSchema } from \"yup\";\r\n\r\nexport type JsonAuth = {\r\n  id: string;\r\n  displayName: string | undefined;\r\n  photoUrl: string | undefined;\r\n  email: string | undefined;\r\n  googleId: string | undefined;\r\n};\r\n\r\nexport class Auth {\r\n  id: string;\r\n  displayName?: string;\r\n  email?: string;\r\n  photoUrl?: string;\r\n  googleId?: string;\r\n\r\n  constructor(json: JsonAuth) {\r\n    this.id = json.id;\r\n    this.displayName = json.displayName ?? undefined;\r\n    this.email = json.email ?? undefined;\r\n    this.photoUrl = json.photoUrl ?? undefined;\r\n    this.googleId = json.googleId ?? undefined;\r\n  }\r\n\r\n  /**\r\n   * JsonSchema defining shape of JsonAuth for yup validatioin\r\n   */\r\n  static JsonSchema: ObjectSchema<JsonAuth> = object({\r\n    id: string().required().min(1),\r\n    displayName: string(),\r\n    photoUrl: string(),\r\n    email: string(),\r\n    googleId: string(),\r\n  }).required();\r\n\r\n  /**\r\n   * Is the value a valid JsonAuth\r\n   */\r\n  static isJson(arg: any): arg is JsonAuth {\r\n    try {\r\n      Auth.JsonSchema.isValidSync(arg);\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Convert Auth to JsonAuth\r\n   */\r\n  toJson(): JsonAuth {\r\n    return {\r\n      id: this.id,\r\n      displayName: this.displayName,\r\n      email: this.email,\r\n      googleId: this.googleId,\r\n      photoUrl: this.photoUrl,\r\n    };\r\n  }\r\n}\r\n","export class Config {\r\n  static get API_URL() {\r\n    const env = process.env.NODE_ENV;\r\n    if (!env || env === \"development\") {\r\n      return \"http://localhost:4000\";\r\n    } else if (env === \"test\") {\r\n      return \"http://localhost:4001\";\r\n    } else {\r\n      return \"https://expenceapp.herokuapp.com\";\r\n    }\r\n  }\r\n}\r\n","import { AxiosError, AxiosResponse } from \"axios\";\r\n\r\nexport type Result<T = undefined, E = undefined> =\r\n  | Success<T, E>\r\n  | Failure<T, E>;\r\n\r\ninterface IResult<T = undefined, E = undefined> {\r\n  /**\r\n   * The current value, either the success or failure value\r\n   */\r\n  value: T | E;\r\n\r\n  /**\r\n   * Currently stored value, whether it is the success value or failure value\r\n   */\r\n  getOr(fallbackValue: T): T;\r\n\r\n  /**\r\n   * Check if this ``Result`` is a success\r\n   */\r\n  isSuccess(): this is Success<T, E>;\r\n\r\n  /**\r\n   * Check if this ``Result`` is a failure\r\n   */\r\n  isFailure(): this is Failure<T, E>;\r\n\r\n  /**\r\n   * If the ``Result`` succeeds, the provided callback function is ran with the\r\n   * success value. This is an alternative to saying\r\n   *\r\n   * ```\r\n   * if (result.isSuccess()) {\r\n   *   callback(result.value)\r\n   * }\r\n   * ```\r\n   */\r\n  onSuccess(callback: (value: T) => void): this;\r\n\r\n  /**\r\n   * If the ``Result`` fails, the provided callback function is ran with the\r\n   * failure value. This is an alternative to saying\r\n   *\r\n   * ```\r\n   * if (result.isFailure()) {\r\n   *   callback(result.value)\r\n   * }\r\n   * ```\r\n   */\r\n  onFailure(callback: (value: Failure<T, E>) => void): this;\r\n}\r\n\r\n/**\r\n * Success implementation\r\n */\r\nexport class Success<T = undefined, E = undefined> implements IResult<T, E> {\r\n  value: T;\r\n\r\n  constructor(value: T) {\r\n    this.value = value;\r\n  }\r\n\r\n  getOr(fallbackValue: T): T {\r\n    return this.value;\r\n  }\r\n\r\n  isSuccess(): this is Success<T, E> {\r\n    return true;\r\n  }\r\n\r\n  isFailure(): this is Failure<T, E> {\r\n    return false;\r\n  }\r\n\r\n  onSuccess(callback: (value: T) => void): this {\r\n    callback(this.value);\r\n    return this;\r\n  }\r\n\r\n  onFailure(callback: (value: Failure<T, E>) => void): this {\r\n    return this;\r\n  }\r\n\r\n  static All<T, E>(array: Array<Result<T, E>>): Array<Success<T, E>> {\r\n    return array.filter((_) => _.isSuccess()).map((_) => _ as Success<T, E>);\r\n  }\r\n\r\n  static From<R = any, U = any>(value: U) {\r\n    return new Success<U, R>(value);\r\n  }\r\n\r\n  static Empty<R = any>() {\r\n    return new Success<undefined, R>(undefined);\r\n  }\r\n}\r\n\r\n/**\r\n * Failure implementation\r\n */\r\nexport class Failure<T = undefined, E = undefined> implements IResult<T, E> {\r\n  /**\r\n   * Detailed information on the failure: Failure message.\r\n   *\r\n   * More human readable message for displaying to the user or\r\n   * for debugging purposes.\r\n   */\r\n  message: string;\r\n\r\n  /**\r\n   * Detailed information on the failure: Failure status code.\r\n   *\r\n   * Codes\r\n   * - `0-9` Generic failures and errors\r\n   *   - `0` Unknown failure\r\n   *   - `1` Caught error\r\n   *   - `2` Unimplemented failure\r\n   * - `10-19` Local failure\r\n   *   - `10` Any local failure\r\n   * - `20-29` Local network and service failures\r\n   *   - `21` Network error or could not reach server\r\n   *   - `22` Could not formulate request\r\n   *   - `23` Invalid data received from server\r\n   * - `100 - 599` Reserved for corresponding HTTP codes\r\n   */\r\n  status: number;\r\n\r\n  /**\r\n   * Detailed information on the failure: Failure error code.\r\n   *\r\n   * Code defines a stringified code presenting more information on\r\n   * what caused the failure and where it occured.\r\n   */\r\n  code: string;\r\n\r\n  /**\r\n   * Details is an object which wraps status, code and message into\r\n   * a signle object.\r\n   */\r\n  details: {\r\n    message: string;\r\n    status: number;\r\n    code: string;\r\n  };\r\n\r\n  /**\r\n   * Data if any is given\r\n   */\r\n  value: E;\r\n\r\n  constructor(\r\n    /**\r\n     * Failure value.\r\n     */\r\n    value: E,\r\n\r\n    /**\r\n     * More specific failure options. If not given, will use\r\n     * default failure options.\r\n     */\r\n    options?: {\r\n      /**\r\n       * Detailed information on the failure: Failure message.\r\n       *\r\n       * More human readable message for displaying to the user or\r\n       * for debugging purposes.\r\n       */\r\n\r\n      message?: Failure[\"message\"];\r\n\r\n      /**\r\n       * Detailed information on the failure: Failure status code.\r\n       *\r\n       * Codes\r\n       * - `0-9` Generic failures and errors\r\n       *   - `0` Unknown failure\r\n       *   - `1` Caught error\r\n       *   - `2` Unimplemented failure\r\n       * - `10-19` Local failure\r\n       *   - `10` Any local failure\r\n       * - `20-29` Local network and service failures\r\n       *   - `21` Network error or could not reach server\r\n       *   - `22` Could not formulate request\r\n       *   - `23` Invalid data received from server\r\n       * - `100 - 599` Reserved for corresponding HTTP codes\r\n       */\r\n      status?: Failure[\"status\"];\r\n\r\n      /**\r\n       * Detailed information on the failure: Failure error code.\r\n       *\r\n       * Code defines a stringified code presenting more information on\r\n       * what caused the failure and where it occured.\r\n       */\r\n      code?: Failure[\"code\"];\r\n    }\r\n  ) {\r\n    this.details = {\r\n      message: options?.message ?? \"Unknown failure.\",\r\n      status: options?.status ?? 0,\r\n      code: options?.code ?? \"failure/unknown\",\r\n    };\r\n    this.message = this.details.message;\r\n    this.status = this.details.status;\r\n    this.code = this.details.code;\r\n    this.value = value;\r\n  }\r\n\r\n  getOr(fallbackValue: T): T {\r\n    return fallbackValue;\r\n  }\r\n\r\n  onSuccess(callback: (value: T) => void): this {\r\n    return this;\r\n  }\r\n\r\n  onFailure(callback: (value: Failure<T, E>) => void): this {\r\n    callback(this);\r\n    return this;\r\n  }\r\n\r\n  isSuccess(): this is Success<T, E> {\r\n    return false;\r\n  }\r\n\r\n  isFailure(): this is Failure<T, E> {\r\n    return true;\r\n  }\r\n\r\n  static All<T, E>(array: Array<Result<T, E>>): Array<Failure<T, E>> {\r\n    return array.filter((_) => _.isFailure()).map((_) => _ as Failure<T, E>);\r\n  }\r\n\r\n  // Defining common failure types as static factory methods\r\n\r\n  /**\r\n   * Generate a failure from an Axios error.\r\n   */\r\n  static AxiosError<T = undefined>(\r\n    axiosError: AxiosError\r\n  ): Failure<T, { errors?: object }> {\r\n    if (axiosError.response) {\r\n      const error = axiosError.response.data;\r\n      return new Failure<T, { errors?: object }>(\r\n        error?.errors && typeof error.errors === \"object\"\r\n          ? { errors: error.errors }\r\n          : {},\r\n        {\r\n          status: axiosError.response.status,\r\n          message:\r\n            error?.message && typeof error.message === \"string\"\r\n              ? error.message\r\n              : \"Unknown server error\",\r\n          code:\r\n            error?.code && typeof error.code === \"string\"\r\n              ? error.code\r\n              : \"server/unknown\",\r\n        }\r\n      );\r\n    } else if (axiosError.request) {\r\n      return new Failure<T, { errors?: object }>(\r\n        {},\r\n        {\r\n          status: 21,\r\n          code: \"server/unavailable\",\r\n          message: \"Could not reach server\",\r\n        }\r\n      );\r\n    } else {\r\n      return new Failure<T, { errors?: object }>(\r\n        {},\r\n        {\r\n          status: 22,\r\n          code: \"server/failure-formulating-request\",\r\n          message: \"Could not formulate request to server\",\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Invalid server response Failure\r\n   *\r\n   * This method is purposed for Services\r\n   */\r\n  static InvalidResponse<T = undefined>(\r\n    response: AxiosResponse<any>,\r\n    codePrefix: string = \"failure\",\r\n    description: string = \"\"\r\n  ) {\r\n    return new Failure<T, { errors?: object; response: AxiosResponse<any> }>(\r\n      { response },\r\n      {\r\n        status: 23,\r\n        code: `${codePrefix}/invalid-response`,\r\n        message: `${description} Invalid response from server.`.trim(),\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Unimplemented Failure.\r\n   */\r\n  static Unimplemented<T = undefined>() {\r\n    return new Failure<T, undefined>(undefined, {\r\n      code: \"failure/unimplemented\",\r\n      message: \"Unimplemented feature\",\r\n      status: 2,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Failure from thrown console.error();\r\n\t \r\n   */\r\n  static Error<T = undefined>(error: Error) {\r\n    return new Failure<T, Error>(error, {\r\n      message: error.message,\r\n      code: `error/${error.name}`,\r\n      status: 1,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unknonw failure\r\n   */\r\n  static Unknown<T = undefined>() {\r\n    return new Failure<T, undefined>(undefined);\r\n  }\r\n}\r\n","import { Failure, Success } from \"./Result\";\r\n\r\nexport function PromiseToResult<T, E = any>(promise: Promise<T>) {\r\n  return promise\r\n    .then((resolved) => new Success<T, E>(resolved))\r\n    .catch((rejected) => new Failure<T, E>(rejected));\r\n}\r\n","import { Success, Failure, Result } from \"./Result\";\r\n\r\n// Synchronous Try overload\r\nexport function Try<T = undefined, E = undefined>(\r\n  fn: () => Success<T, any> | Failure<any, E>\r\n): Result<T, E>;\r\n\r\n// Asynchronous Try overload\r\nexport function Try<T = undefined, E = undefined>(\r\n  fn: () => Promise<Success<T, any> | Failure<any, E>>\r\n): Promise<Result<T, E>>;\r\n\r\n/**\r\n * Running code inside a try function enables returning a `Success`\r\n * or a `Failure` instance, either synchronously or asynchronously\r\n * and the function will handle\r\n */\r\nexport function Try<T = undefined, E = undefined>(\r\n  fn:\r\n    | (() => Success<T, any> | Failure<any, E>)\r\n    | (() => Promise<Success<T, any> | Failure<any, E>>)\r\n): Result<T, E> | Promise<Result<T, E>> {\r\n  const result = fn();\r\n\r\n  if (result instanceof Promise) {\r\n    return result.then((_result) => {\r\n      if (_result instanceof Success) {\r\n        return new Success<T, E>(_result.value);\r\n      } else {\r\n        return new Failure<T, E>(_result.value, _result.details);\r\n      }\r\n    });\r\n  } else {\r\n    if (result instanceof Success) {\r\n      return new Success<T, E>(result.value);\r\n    } else {\r\n      return new Failure<T, E>(result.value, result.details);\r\n    }\r\n  }\r\n}\r\n","import Axios, { AxiosRequestConfig, AxiosError, AxiosResponse } from \"axios\";\r\nimport { Config } from \"../config\";\r\nimport { store } from \"../store\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { Failure, Result } from \"../utils/Result/Result\";\r\nimport { PromiseToResult } from \"../utils/Result/PromiseToResult\";\r\nimport { Try } from \"../utils/Result/Try\";\r\n\r\nexport class Service {\r\n  /**\r\n   * Base URL for sending requests to the API\r\n   */\r\n  protected static baseURL = `${Config.API_URL}/api`;\r\n\r\n  /**\r\n   * Axios instance to use for sending requests\r\n   */\r\n  protected static axios = Axios.create({\r\n    baseURL: Service.baseURL,\r\n    withCredentials: true,\r\n  });\r\n\r\n  /**\r\n   * Construct endpoint from path, base URL already handled\r\n   */\r\n  protected static endpoint(path: string) {\r\n    return `${Service.baseURL}${path}`;\r\n  }\r\n\r\n  /**\r\n   * Ensure access token is valid\r\n   */\r\n  protected static isAccessTokenValid() {\r\n    const token = store.getState().auth.accessToken;\r\n    if (!token) return false;\r\n    try {\r\n      const payload = jwt.decode(token) as any;\r\n      const expiresAt = Number(payload?.exp || 0) * 1000;\r\n      const expirationBuffer = 5000; // Fetch new access token 30 seconds before expiration\r\n      const tokenIsValid = Date.now() < expiresAt - expirationBuffer;\r\n      return tokenIsValid;\r\n    } catch (error) {\r\n      console.warn(\"Error occured while checking access token\", error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempt refresh access token function\r\n   */\r\n  protected static async attemptRefreshAccessToken(force: boolean = false) {\r\n    const accessTokenIsValid = Service.isAccessTokenValid();\r\n    if (!accessTokenIsValid || force) {\r\n      const url = Service.endpoint(\"/auth/refresh_token\");\r\n      try {\r\n        const result = await Service.axios.get<string>(url);\r\n        const accessToken = result.data;\r\n        store.getActions().auth._setAccessToken(accessToken);\r\n      } catch (e) {\r\n        if (store.getState().auth.accessToken) {\r\n          store.getActions().auth.logout();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Before request hook\r\n   */\r\n  protected static async onBeforeRequest() {\r\n    await Service.attemptRefreshAccessToken();\r\n  }\r\n\r\n  /**\r\n   * Gets basic axios config\r\n   */\r\n  protected static getConfig(\r\n    override?: AxiosRequestConfig | undefined\r\n  ): AxiosRequestConfig {\r\n    const accessToken = store.getState().auth.accessToken;\r\n\r\n    // Construct request headers\r\n    const headers = { ...override?.headers };\r\n    if (accessToken) {\r\n      headers.Authorization = `bearer ${accessToken}`;\r\n    }\r\n\r\n    // Override config with headers\r\n    return {\r\n      ...override,\r\n      headers,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Run requests with hooks and error handling\r\n   *\r\n   * @param requestFunction Request creator function\r\n   */\r\n  protected static async handleRequest<T>(\r\n    path: string,\r\n    config: AxiosRequestConfig | undefined,\r\n    requestFunction: (url: string, options: AxiosRequestConfig) => Promise<T>\r\n  ): Promise<Result<T, { errors?: object; response?: AxiosResponse<any> }>> {\r\n    /**\r\n     * Run hooks\r\n     */\r\n    await Service.onBeforeRequest();\r\n\r\n    /**\r\n     * Run request function to promise\r\n     */\r\n    const url = Service.endpoint(path);\r\n    const options = Service.getConfig(config);\r\n    const promise = requestFunction(url, options);\r\n\r\n    return Try(async () => {\r\n      const result = await PromiseToResult(promise);\r\n      if (result.isSuccess()) {\r\n        return result;\r\n      } else {\r\n        return Failure.AxiosError(result.value as AxiosError);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed GET request wrapper with hooks\r\n   */\r\n  protected static async get<ResponseData = any>(\r\n    path: string,\r\n    config?: AxiosRequestConfig | undefined\r\n  ) {\r\n    return Service.handleRequest(path, config, (url, options) => {\r\n      return Service.axios.get<ResponseData>(url, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed POST request wrapper with hooks\r\n   */\r\n  protected static async post<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    return Service.handleRequest(path, config, (url, options) => {\r\n      return Service.axios.post<ResponseData>(url, data, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed DELETE request wrapper with hooks\r\n   */\r\n  protected static async delete<ResponseData = any>(\r\n    path: string,\r\n    config?: AxiosRequestConfig | undefined\r\n  ) {\r\n    return Service.handleRequest(path, config, (url, options) => {\r\n      return Service.axios.delete<ResponseData>(url, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed PUT request wrapper with hooks\r\n   */\r\n  protected static async put<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    return Service.handleRequest(path, config, (url, options) => {\r\n      return Service.axios.put<ResponseData>(url, data, options);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Axios typed PATCH request wrapper with hooks\r\n   */\r\n  protected static async patch<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    return Service.handleRequest(path, config, (url, options) => {\r\n      return Service.axios.patch<ResponseData>(url, data, options);\r\n    });\r\n  }\r\n}\r\n","import { Service } from \"./Service\";\r\nimport { Failure, Success } from \"../utils/Result/Result\";\r\nimport { Try } from \"../utils/Result/Try\";\r\nimport { Auth } from \"../classes/Auth\";\r\n\r\nexport class AuthService extends Service {\r\n  /**\r\n   * Fetches the user's profile if the user is signed in.\r\n   */\r\n  static async getProfile() {\r\n    return Try(async () => {\r\n      const result = await Service.get(\"/auth/profile\");\r\n      if (result.isFailure()) {\r\n        return result;\r\n      } else if (Auth.isJson(result.value)) {\r\n        return new Success(result.value);\r\n      } else {\r\n        return Failure.InvalidResponse(\r\n          result.value,\r\n          \"auth/profile\",\r\n          \"Could not get profile.\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Registers and logs in a new user with the given credentials.\r\n   */\r\n  static async registerWithEmailAndPassword(credentials: {\r\n    email: string;\r\n    password: string;\r\n  }) {\r\n    return Try(async () => {\r\n      const result = await Service.post(\"/auth/register\", credentials);\r\n      if (result.isFailure()) {\r\n        return result;\r\n      } else if (result.value.status === 200) {\r\n        return Success.Empty();\r\n      } else {\r\n        return Failure.InvalidResponse(\r\n          result.value,\r\n          \"auth/register\",\r\n          \"Could not register.\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Logs the user in with the given credentials.\r\n   */\r\n  static async loginWithEmailAndPassword(credentials: {\r\n    email: string;\r\n    password: string;\r\n  }) {\r\n    return Try(async () => {\r\n      const result = await Service.post(\"/auth/login\", credentials);\r\n      if (result.isFailure()) {\r\n        return result;\r\n      } else if (result.value.status === 200) {\r\n        return Success.Empty();\r\n      } else {\r\n        return Failure.InvalidResponse(\r\n          result.value,\r\n          \"auth/login\",\r\n          \"Could not login.\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sends a forgot password email to the given email address.\r\n   */\r\n  static async forgotPassword(credentials: { email: string }) {\r\n    return Try(async () => {\r\n      const result = await Service.post(\"/auth/forgot_password\", credentials);\r\n      if (result.isFailure()) {\r\n        return result;\r\n      } else if (result.value.status === 200) {\r\n        return Success.Empty();\r\n      } else {\r\n        return Failure.InvalidResponse(\r\n          result.value,\r\n          \"auth/forgot-password\",\r\n          \"Could not send forgot password link.\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Validates a password change token\r\n   */\r\n  static async validatePasswordChangeToken(credentials: { token: string }) {\r\n    return Try(async () => {\r\n      const result = await Service.get(\r\n        `/auth/change_password/${credentials.token}`\r\n      );\r\n      if (result.isFailure()) {\r\n        return result;\r\n      } else if (\r\n        result.value.status === 200 &&\r\n        result.value.data &&\r\n        typeof result.value.data === \"string\"\r\n      ) {\r\n        return new Success(result.value.data);\r\n      } else {\r\n        return Failure.InvalidResponse(\r\n          result.value,\r\n          \"auth/change-password\",\r\n          \"Could not valildate password change token.\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Change a user's password\r\n   */\r\n  static async changePassword(credentials: {\r\n    token: string;\r\n    password: string;\r\n  }) {\r\n    return Try(async () => {\r\n      const result = await Service.post(\r\n        `/auth/change_password/${credentials.token}`,\r\n        { password: credentials.password }\r\n      );\r\n      if (result.isFailure()) {\r\n        return result;\r\n      } else if (result.value.status === 200) {\r\n        return Success.Empty();\r\n      } else {\r\n        return Failure.InvalidResponse(\r\n          result.value,\r\n          \"auth/change-password\",\r\n          \"Could not change password.\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Request new confirmation email\r\n   */\r\n  static async requestConfirmationEmail(credentials: { email: string }) {\r\n    return Try(async () => {\r\n      const result = await Service.post<{ email: string }>(\r\n        `/auth/request_confirm_email`,\r\n        credentials\r\n      );\r\n      if (result.isFailure()) {\r\n        return result;\r\n      } else if (result.value.status === 200) {\r\n        return Success.Empty();\r\n      } else {\r\n        return Failure.InvalidResponse(\r\n          result.value,\r\n          \"auth/request-confirm-email\",\r\n          \"Unable to get new confirmation email\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Confirm a user's email\r\n   */\r\n  static async confirmEmail(credentials: { token: string }) {\r\n    return Try(async () => {\r\n      const result = await Service.get(\r\n        `/auth/confirm_email/${credentials.token}`\r\n      );\r\n      if (result.isFailure()) {\r\n        return result;\r\n      } else if (result.value.status === 200) {\r\n        return Success.Empty();\r\n      } else {\r\n        return Failure.InvalidResponse(\r\n          result.value,\r\n          \"auth/confirm-email\",\r\n          \"Could not confirm email.\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Logs the user out.\r\n   */\r\n  static async logout() {\r\n    return Try(async () => {\r\n      const result = await Service.post(`/auth/logout`);\r\n      if (result.isFailure()) {\r\n        return result;\r\n      } else if (result.value.status === 200) {\r\n        return Success.Empty();\r\n      } else {\r\n        return Failure.InvalidResponse(\r\n          result.value,\r\n          \"auth/logout\",\r\n          \"Could not log out.\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Logs the user in with a Google account. Redirects the user.\r\n   */\r\n  static loginWithGoogle() {\r\n    window.location.href = Service.endpoint(\"/auth/google\");\r\n  }\r\n}\r\n","import { Action, action, Computed, computed, Thunk, thunk } from \"easy-peasy\";\r\nimport { Auth, JsonAuth } from \"../classes/Auth\";\r\nimport { AuthService } from \"../services/AuthService\";\r\nimport { StoreModel } from \"../store\";\r\n\r\nexport interface AuthModel {\r\n  /**\r\n   * Initialized state: has the profile been fetched at the least once\r\n   */\r\n  initialized: boolean;\r\n  _setInitialized: Action<AuthModel, boolean>;\r\n\r\n  /**\r\n   * Currently logged in user or null if none logged in\r\n   */\r\n  user: Auth | null;\r\n\r\n  /**\r\n   * Computed property for whether the user is currently logged in\r\n   */\r\n  isLoggedIn: Computed<AuthModel, boolean>;\r\n\r\n  /**\r\n   * Current access token for authentication in memory for security purposes.\r\n   * This is automatically refreshed when making a request with a service and\r\n   * should not be manually set.\r\n   */\r\n  accessToken: string | null;\r\n\r\n  /**\r\n   * Function to set the access token\r\n   */\r\n  _setAccessToken: Action<AuthModel, string>;\r\n\r\n  /**\r\n   * Action to set the current user with partial user JSON object\r\n   */\r\n  _login: Action<AuthModel, JsonAuth>;\r\n\r\n  /**\r\n   * Action to set the current user to null\r\n   */\r\n  _logout: Action<AuthModel, void>;\r\n\r\n  /**\r\n   * Function to get the currently logged in user's profile data and apply it\r\n   * to the user property. The logged in property is defined by the current\r\n   * refresh token.\r\n   */\r\n  getProfile: Thunk<\r\n    AuthModel,\r\n    void,\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"getProfile\"]>\r\n  >;\r\n\r\n  /**\r\n   * Log in the current user with a Google account\r\n   */\r\n  loginWithGoogle: Thunk<\r\n    AuthModel,\r\n    void,\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"loginWithGoogle\"]>\r\n  >;\r\n\r\n  /**\r\n   * Register the current user with email and password\r\n   */\r\n  registerWithEmailPassword: Thunk<\r\n    AuthModel,\r\n    Parameters<typeof AuthService[\"registerWithEmailAndPassword\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"registerWithEmailAndPassword\"]>\r\n  >;\r\n\r\n  /**\r\n   * Log in the current user with email and password\r\n   */\r\n  loginWithEmailPassword: Thunk<\r\n    AuthModel,\r\n    Parameters<typeof AuthService[\"loginWithEmailAndPassword\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"loginWithEmailAndPassword\"]>\r\n  >;\r\n\r\n  /**\r\n   * Forgot password\r\n   */\r\n  forgotPassword: Thunk<\r\n    AuthModel,\r\n    Parameters<typeof AuthService[\"forgotPassword\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"forgotPassword\"]>\r\n  >;\r\n\r\n  /**\r\n   * Log out the current user\r\n   */\r\n  logout: Thunk<\r\n    AuthModel,\r\n    void,\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"logout\"]>\r\n  >;\r\n\r\n  /**\r\n   * Validate a change password token\r\n   */\r\n  validateChangePasswordToken: Thunk<\r\n    AuthModel,\r\n    Parameters<typeof AuthService[\"validatePasswordChangeToken\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"validatePasswordChangeToken\"]>\r\n  >;\r\n\r\n  /**\r\n   * Change a user's password\r\n   */\r\n  changePassword: Thunk<\r\n    AuthModel,\r\n    Parameters<typeof AuthService[\"changePassword\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"changePassword\"]>\r\n  >;\r\n\r\n  /**\r\n   * Confirm a user's email\r\n   */\r\n  confirmEmail: Thunk<\r\n    AuthModel,\r\n    Parameters<typeof AuthService[\"confirmEmail\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"confirmEmail\"]>\r\n  >;\r\n\r\n  /**\r\n   * Request a new confirmation email for user\r\n   */\r\n  requestConfirmationEmail: Thunk<\r\n    AuthModel,\r\n    Parameters<typeof AuthService[\"requestConfirmationEmail\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof AuthService[\"requestConfirmationEmail\"]>\r\n  >;\r\n}\r\n\r\n/**\r\n * Implementation of the authentication model\r\n */\r\nexport const authModel: AuthModel = {\r\n  initialized: false,\r\n  _setInitialized: action((state, boolean) => {\r\n    state.initialized = boolean;\r\n  }),\r\n\r\n  user: null,\r\n\r\n  isLoggedIn: computed((state) => Boolean(state.user)),\r\n\r\n  accessToken: null,\r\n\r\n  _setAccessToken: action((state, newAccessToken) => {\r\n    state.accessToken = newAccessToken;\r\n  }),\r\n\r\n  _login: action((state, json) => {\r\n    if (Auth.isJson(json)) {\r\n      state.user = new Auth(json);\r\n    }\r\n  }),\r\n\r\n  _logout: action((state) => {\r\n    state.user = null;\r\n    state.accessToken = null;\r\n  }),\r\n\r\n  getProfile: thunk(async (actions, payload) => {\r\n    const profileResult = await AuthService.getProfile();\r\n    profileResult.onSuccess((profile) => {\r\n      actions._login(profile);\r\n    });\r\n    actions._setInitialized(true);\r\n    return profileResult;\r\n  }),\r\n\r\n  loginWithGoogle: thunk((actions, payload) => {\r\n    return AuthService.loginWithGoogle();\r\n  }),\r\n\r\n  loginWithEmailPassword: thunk(async (actions, payload) => {\r\n    const result = await AuthService.loginWithEmailAndPassword(payload);\r\n    result.onSuccess(async () => {\r\n      const profileResult = await AuthService.getProfile();\r\n      profileResult.onSuccess((profile) => {\r\n        actions._login(profile);\r\n      });\r\n    });\r\n    return result;\r\n  }),\r\n\r\n  registerWithEmailPassword: thunk(async (actions, payload) => {\r\n    const result = await AuthService.registerWithEmailAndPassword(payload);\r\n    if (result.isSuccess()) {\r\n      const profileResult = await AuthService.getProfile();\r\n      profileResult.onSuccess((profile) => {\r\n        actions._login(profile);\r\n      });\r\n    }\r\n    return result;\r\n  }),\r\n\r\n  forgotPassword: thunk(async (actions, payload) => {\r\n    const result = await AuthService.forgotPassword(payload);\r\n    return result;\r\n  }),\r\n\r\n  validateChangePasswordToken: thunk(async (actions, payload) => {\r\n    const result = await AuthService.validatePasswordChangeToken(payload);\r\n    return result;\r\n  }),\r\n\r\n  changePassword: thunk(async (actions, payload) => {\r\n    const result = await AuthService.changePassword(payload);\r\n    return result;\r\n  }),\r\n\r\n  confirmEmail: thunk(async (actions, payload) => {\r\n    const result = await AuthService.confirmEmail(payload);\r\n    return result;\r\n  }),\r\n\r\n  requestConfirmationEmail: thunk(async (actions, payload) => {\r\n    const result = await AuthService.requestConfirmationEmail(payload);\r\n    return result;\r\n  }),\r\n\r\n  logout: thunk(async (actions, payload) => {\r\n    const result = await AuthService.logout();\r\n    result.onSuccess(() => {\r\n      actions._logout();\r\n    });\r\n    return result;\r\n  }),\r\n};\r\n","export class MoneyAmount {\r\n  /**\r\n   * Value of money amount as integer in cents\r\n   */\r\n  private _value: number;\r\n\r\n  /**\r\n   * Construct a money amount from an integer value in cents.\r\n   *\r\n   * @throws Error if input value is not an integer.\r\n   */\r\n  constructor(cents: number) {\r\n    if (Math.trunc(cents) !== cents) {\r\n      throw new Error(\"Cannot construct money amount from non-integer value\");\r\n    }\r\n    this._value = cents;\r\n  }\r\n\r\n  /**\r\n   * The money amount's value as an integer in cents.\r\n   */\r\n  get value(): number {\r\n    return this._value;\r\n  }\r\n\r\n  /**\r\n   * The money amount's value in euros.\r\n   */\r\n  get decimalValue(): number {\r\n    return this._value / 100;\r\n  }\r\n\r\n  /**\r\n   * Get the value in euros as an integer\r\n   */\r\n  get euros() {\r\n    return Math.trunc(this._value / 100);\r\n  }\r\n\r\n  /**\r\n   * Get the amount of cents in value\r\n   *\r\n   * Returns the remainder when converting the value to euros,\r\n   * i.e. a value between 0 - 99, not the full value counted in cents.\r\n   */\r\n  get cents() {\r\n    return Math.floor(Math.abs(this._value) % 100);\r\n  }\r\n\r\n  /**\r\n   * Gets the sign of the money amount\r\n   *\r\n   * - Returns -1 for negative money amounts\r\n   * - Returns 0 for zero amounts\r\n   * - Returns +1 for positive money amounts\r\n   */\r\n  get sign(): -1 | 0 | 1 {\r\n    return this._value === 0 ? 0 : this._value > 0 ? 1 : -1;\r\n  }\r\n\r\n  /**\r\n   * True if the amount is a positive amount (> 0)\r\n   */\r\n  get isPositive() {\r\n    return this._value > 0;\r\n  }\r\n\r\n  /**\r\n   * True if the amount is a positive amount or zero (>= 0)\r\n   */\r\n  get isNonNegative() {\r\n    return this._value >= 0;\r\n  }\r\n\r\n  /**\r\n   * True if the amount is zero (== 0)\r\n   */\r\n  get isZero() {\r\n    return this._value === 0;\r\n  }\r\n\r\n  /**\r\n   * True if the amount is a negative amount or zero (<= 0)\r\n   */\r\n  get isNonPositive() {\r\n    return this._value <= 0;\r\n  }\r\n\r\n  /**\r\n   * True if the amount is a negative amount (< 0)\r\n   */\r\n  get isNegative() {\r\n    return this._value < 0;\r\n  }\r\n\r\n  /**\r\n   * Format the money amount to a string according to the given options\r\n   */\r\n  format(): string {\r\n    return this.decimalValue.toLocaleString(\"fi-FI\", {\r\n      style: \"currency\",\r\n      currency: \"EUR\",\r\n    });\r\n  }\r\n\r\n  add(that: MoneyAmount) {\r\n    return new MoneyAmount(this._value + that._value);\r\n  }\r\n\r\n  subtract(that: MoneyAmount) {\r\n    return new MoneyAmount(this._value - that._value);\r\n  }\r\n\r\n  static sum(values: MoneyAmount[]) {\r\n    return values.reduce((sum, value) => sum.add(value), new MoneyAmount(0));\r\n  }\r\n}\r\n","import * as uuid from \"uuid\";\r\nimport { MoneyAmount } from \"./MoneyAmount\";\r\nimport { object, string, number, ObjectSchema } from \"yup\";\r\n\r\nexport type JsonTransaction = {\r\n  id: string;\r\n  uid: string;\r\n  time: number;\r\n  category: string;\r\n  integerAmount: number;\r\n  comment?: string | undefined;\r\n};\r\n\r\nexport class Transaction {\r\n  date: Date;\r\n  category: string;\r\n  comment: string;\r\n  amount: MoneyAmount;\r\n  id: string;\r\n  uid: string;\r\n\r\n  constructor(json: JsonTransaction) {\r\n    this.date = new Date(json.time);\r\n    this.comment = json.comment || \"\";\r\n    this.category = json.category;\r\n    this.amount = new MoneyAmount(Math.floor(json.integerAmount));\r\n    this.id = json.id || uuid.v4();\r\n    this.uid = json.uid;\r\n  }\r\n\r\n  /**\r\n   * JsonSchema defining shape of JsonTransactions for yup validation\r\n   */\r\n  static JsonSchema: ObjectSchema<JsonTransaction> = object({\r\n    id: string().required(),\r\n    uid: string().required(),\r\n    time: number().positive().integer().required(),\r\n    category: string().min(1).required(),\r\n    integerAmount: number().integer().required(),\r\n    comment: string(),\r\n  }).required();\r\n\r\n  /**\r\n   * Is the value a valid JsonTransaction\r\n   */\r\n  static isJson(arg: any): arg is JsonTransaction {\r\n    try {\r\n      Transaction.JsonSchema.validateSync(arg);\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Is the value an array of valid JsonTransactions\r\n   */\r\n  static isJsonArray(arg: any): arg is JsonTransaction[] {\r\n    return Array.isArray(arg) && arg.every(Transaction.isJson);\r\n  }\r\n\r\n  /**\r\n   * Convert Transaction to JsonTransaction\r\n   */\r\n  toJson(): JsonTransaction {\r\n    return {\r\n      time: this.date.getTime(),\r\n      category: this.category,\r\n      comment: this.comment,\r\n      integerAmount: this.amount.value,\r\n      id: this.id,\r\n      uid: this.uid,\r\n    };\r\n  }\r\n}\r\n","import { Service } from \"./Service\";\r\nimport { Failure, Success } from \"../utils/Result/Result\";\r\nimport { Try } from \"../utils/Result/Try\";\r\nimport { JsonTransaction, Transaction } from \"../classes/Transaction\";\r\n\r\nexport class TransactionService extends Service {\r\n  /**\r\n   * Get all transactions for user as Result\r\n   */\r\n  static async getTransactions() {\r\n    return Try(async () => {\r\n      const result = await Service.get(\"/transactions\");\r\n      if (result.isFailure()) {\r\n        return result;\r\n      } else if (Transaction.isJsonArray(result.value.data)) {\r\n        return new Success(result.value.data);\r\n      } else {\r\n        return Failure.InvalidResponse(\r\n          result.value,\r\n          \"transactions/get\",\r\n          \"Could not get transactions.\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Post a transaction (in json, without id or uid) and return\r\n   * created json transaction response as Result.\r\n   */\r\n  static async postTransaction(json: Omit<JsonTransaction, \"id\" | \"uid\">) {\r\n    return Try(async () => {\r\n      const result = await Service.post(\"/transactions\", json);\r\n      if (result.isFailure()) {\r\n        return result;\r\n      } else if (Transaction.isJson(result.value.data)) {\r\n        return new Success(result.value.data);\r\n      } else {\r\n        return Failure.InvalidResponse(\r\n          result.value,\r\n          \"transactions/post\",\r\n          \"Could not post transaction.\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Delete a transaction by ID and return empty Result.\r\n   */\r\n  static async deleteTransaction(id: string) {\r\n    return Try(async () => {\r\n      const result = await Service.delete(`/transactions/${id}`);\r\n      if (result.isFailure()) {\r\n        return result;\r\n      } else if (result.value.status === 200) {\r\n        return Success.Empty();\r\n      } else {\r\n        return Failure.InvalidResponse(\r\n          result.value,\r\n          \"transactions/delete\",\r\n          \"Could not delete transaction.\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Put a transaction on the server as json (upsert) and\r\n   * return upserted json transaction as Result.\r\n   */\r\n  static async putTransaction(json: JsonTransaction) {\r\n    return Try(async () => {\r\n      const result = await Service.put(`/transactions/${json.id}`, json);\r\n      if (result.isFailure()) {\r\n        return result;\r\n      } else if (Transaction.isJson(result.value.data)) {\r\n        return new Success(result.value.data);\r\n      } else {\r\n        return Failure.InvalidResponse(\r\n          result.value,\r\n          \"transactions/put\",\r\n          \"Could not put transaction\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Patch a transaction on the server as json (partial update)\r\n   * and return updated json transaction as Result.\r\n   */\r\n  static async patchTransaction(json: JsonTransaction) {\r\n    return Try(async () => {\r\n      const result = await Service.patch(`/transactions/${json.id}`, json);\r\n      if (result.isFailure()) {\r\n        return result;\r\n      } else if (Transaction.isJson(result.value.data)) {\r\n        return new Success(result.value.data);\r\n      } else {\r\n        return Failure.InvalidResponse(\r\n          result.value,\r\n          \"transactions/patch\",\r\n          \"Could not patch transaction.\"\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","import * as datefns from \"date-fns\";\r\n\r\nexport function groupByDate<T>(\r\n  items: T[],\r\n  getDate: (t: T) => Date,\r\n  options?: { sort?: boolean }\r\n): { date: Date; items: T[] }[] {\r\n  // Function to extract a key from an item which has a date\r\n  function getKey(item: T): string {\r\n    const date = getDate(item);\r\n    return datefns.lightFormat(date, \"yyyy-MM-dd\");\r\n  }\r\n\r\n  // Get all items by their keys\r\n  const itemsByKey = items.reduce((res, item) => {\r\n    const key = getKey(item);\r\n    return {\r\n      ...res,\r\n      [key]: [...(res[key] ?? []), item],\r\n    };\r\n  }, {} as Record<string, T[]>);\r\n\r\n  // Map to array, where each key is mapped to a date\r\n  const result = Object.entries(itemsByKey).map((entry) => {\r\n    return {\r\n      date: datefns.startOfDay(new Date(entry[0])),\r\n      items: entry[1],\r\n    };\r\n  });\r\n\r\n  // Return result, optionally sorted\r\n  if (options?.sort) {\r\n    return result.sort((a, b) => {\r\n      return b.date.getTime() - a.date.getTime();\r\n    });\r\n  } else {\r\n    return result;\r\n  }\r\n}\r\n","export type DateCompareOperator = \">\" | \">=\" | \"==\" | \"<=\" | \"<\";\r\n\r\n/**\r\n * Utility function to compare two dates, where only the date is taken into\r\n * account, not the time.\r\n *\r\n * @param a  Left hand operator date\r\n * @param op Operator to specify which comparison to run\r\n * @param b  Right hand operator date\r\n */\r\nexport function compareDate(a: Date, op: DateCompareOperator, b: Date) {\r\n  // Serialize dates for easy comparison\r\n  const _a = serializeDate(a);\r\n  const _b = serializeDate(b);\r\n\r\n  switch (op) {\r\n    case \"<\":\r\n      return _a < _b;\r\n    case \"<=\":\r\n      return _a <= _b;\r\n    case \"==\":\r\n      return _a === _b;\r\n    case \">=\":\r\n      return _a >= _b;\r\n    case \">\":\r\n      return _a > _b;\r\n  }\r\n}\r\n\r\n/**\r\n * Helper function for above function to serialize dates, taking only into account\r\n * the date, month and year, not the time.\r\n *\r\n * @param date Date to serialize\r\n */\r\nfunction serializeDate(date: Date) {\r\n  return date.getFullYear() * 341 + date.getMonth() * 31 + date.getDate();\r\n}\r\n","import { computed, Computed } from \"easy-peasy\";\r\nimport { Transaction } from \"../classes/Transaction\";\r\nimport { MoneyAmount } from \"../classes/MoneyAmount\";\r\nimport { groupByDate } from \"../utils/groupByDate/groupByDate\";\r\nimport { StoreModel } from \"../store\";\r\nimport { compareDate } from \"../utils/compareDate/compareDate\";\r\n\r\nexport interface FilteredTransactionsModel {\r\n  /**\r\n   * All user's current transactions after filterign\r\n   */\r\n  items: Computed<FilteredTransactionsModel, Transaction[], StoreModel>;\r\n\r\n  /**\r\n   * Filtered transactions grouped and sorted by dates\r\n   */\r\n  itemsByDates: Computed<\r\n    FilteredTransactionsModel,\r\n    { date: Date; items: Transaction[] }[],\r\n    StoreModel\r\n  >;\r\n\r\n  /**\r\n   * Filtered amount of transactions\r\n   */\r\n  count: Computed<FilteredTransactionsModel, number, StoreModel>;\r\n\r\n  /**\r\n   * Sums of filtered transactions\r\n   */\r\n  sums: Computed<\r\n    FilteredTransactionsModel,\r\n    {\r\n      all: MoneyAmount;\r\n      expenses: MoneyAmount;\r\n      incomes: MoneyAmount;\r\n    },\r\n    StoreModel\r\n  >;\r\n}\r\n\r\nexport const filteredTransactionsModel: FilteredTransactionsModel = {\r\n  items: computed(\r\n    [\r\n      (_, storeState) => storeState.transactions.items,\r\n      (_, storeState) => storeState.interval.startDate,\r\n      (_, storeState) => storeState.interval.endDate,\r\n      (_, storeState) => storeState.filters.searchTerm,\r\n      (_, storeState) => storeState.filters.minAmount,\r\n      (_, storeState) => storeState.filters.maxAmount,\r\n      (_, storeState) => storeState.filters.excludedCategories,\r\n    ],\r\n    (\r\n      items,\r\n      startDate,\r\n      endDate,\r\n      searchTerm,\r\n      minAmount,\r\n      maxAmount,\r\n      excludedCategories\r\n    ) => {\r\n      return items.filter((item) => {\r\n        // Filter by start date\r\n        if (compareDate(item.date, \"<\", startDate)) {\r\n          return false;\r\n        }\r\n\r\n        // Filter by end date\r\n        if (compareDate(item.date, \">\", endDate)) {\r\n          return false;\r\n        }\r\n\r\n        // Filter by minimum amount\r\n        if (item.amount.value < minAmount) {\r\n          return false;\r\n        }\r\n\r\n        // Filter by maximum amount\r\n        if (item.amount.value > maxAmount) {\r\n          return false;\r\n        }\r\n\r\n        // Filter by category\r\n        if (excludedCategories.includes(item.category)) {\r\n          return false;\r\n        }\r\n\r\n        // Filter by search term\r\n        if (\r\n          !(\r\n            item.amount.format().toLowerCase().includes(searchTerm) ||\r\n            item.category.toLowerCase().includes(searchTerm) ||\r\n            item.comment.toLowerCase().includes(searchTerm)\r\n          )\r\n        ) {\r\n          return false;\r\n        }\r\n\r\n        // All filters passed: include\r\n        return true;\r\n      });\r\n    }\r\n  ),\r\n\r\n  itemsByDates: computed(\r\n    [(_, storeState) => storeState.transactions.filtered.items],\r\n    (items) => {\r\n      return groupByDate(items, (_) => _.date, { sort: true });\r\n    }\r\n  ),\r\n\r\n  count: computed(\r\n    [(_, storeState) => storeState.transactions.filtered.items],\r\n    (items) => {\r\n      return items.length;\r\n    }\r\n  ),\r\n\r\n  sums: computed(\r\n    [(_, storeState) => storeState.transactions.filtered.items],\r\n    (items) => {\r\n      const incomes = items\r\n        .filter((_) => _.amount.isPositive)\r\n        .reduce((sum, item) => sum + item.amount.value, 0);\r\n      const expenses = items\r\n        .filter((_) => _.amount.isNegative)\r\n        .reduce((sum, item) => sum + item.amount.value, 0);\r\n      return {\r\n        all: new MoneyAmount(incomes + expenses),\r\n        incomes: new MoneyAmount(incomes),\r\n        expenses: new MoneyAmount(expenses),\r\n      };\r\n    }\r\n  ),\r\n};\r\n","import {\r\n  Action,\r\n  action,\r\n  Computed,\r\n  computed,\r\n  Thunk,\r\n  thunk,\r\n  ThunkOn,\r\n  thunkOn,\r\n} from \"easy-peasy\";\r\nimport { JsonTransaction, Transaction } from \"../classes/Transaction\";\r\nimport { TransactionService } from \"../services/TransactionService\";\r\nimport { StoreModel } from \"../store\";\r\nimport { groupByDate } from \"../utils/groupByDate/groupByDate\";\r\nimport { MoneyAmount } from \"../classes/MoneyAmount\";\r\nimport {\r\n  filteredTransactionsModel,\r\n  FilteredTransactionsModel,\r\n} from \"./transactions.filtered.model\";\r\n\r\nexport interface TransactionsModel {\r\n  /**\r\n   * All user's current transactions\r\n   */\r\n  items: Transaction[];\r\n\r\n  /**\r\n   * Current transactions grouped and sorted by dates\r\n   */\r\n  itemsByDates: Computed<\r\n    TransactionsModel,\r\n    { date: Date; items: Transaction[] }[]\r\n  >;\r\n\r\n  /**\r\n   * Current amount of transactions\r\n   */\r\n  count: Computed<TransactionsModel, number>;\r\n\r\n  /**\r\n   * Sum of transactions\r\n   */\r\n  sums: Computed<\r\n    TransactionsModel,\r\n    {\r\n      all: MoneyAmount;\r\n      expenses: MoneyAmount;\r\n      incomes: MoneyAmount;\r\n    }\r\n  >;\r\n\r\n  /**\r\n   * Filtered properties (copies of the above properties using only\r\n   * filtered items)\r\n   */\r\n  filtered: FilteredTransactionsModel;\r\n\r\n  /**\r\n   * All different categories\r\n   */\r\n  categories: Computed<TransactionsModel, string[]>;\r\n\r\n  /**\r\n   * Minimum possible amount\r\n   */\r\n  minimumAmount: Computed<TransactionsModel, MoneyAmount>;\r\n\r\n  /**\r\n   * Maximum possible amount\r\n   */\r\n  maximumAmount: Computed<TransactionsModel, MoneyAmount>;\r\n\r\n  /**\r\n   * Fetch all transactions for user from server\r\n   */\r\n  getTransactions: Thunk<\r\n    TransactionsModel,\r\n    void,\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof TransactionService[\"getTransactions\"]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by get transaction thunk to update get result to state\r\n   */\r\n  _getTransactions: Action<TransactionsModel, JsonTransaction[]>;\r\n\r\n  /**\r\n   * Post and update transaction to state\r\n   */\r\n  postTransaction: Thunk<\r\n    TransactionsModel,\r\n    Parameters<typeof TransactionService[\"postTransaction\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof TransactionService[\"postTransaction\"]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by post transaction thunk to update post result to state\r\n   */\r\n  _postTransaction: Action<TransactionsModel, JsonTransaction>;\r\n\r\n  /**\r\n   * Delete and remove transaction from state\r\n   */\r\n  deleteTransaction: Thunk<\r\n    TransactionsModel,\r\n    string,\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof TransactionService[\"deleteTransaction\"]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by delete transaction thunk to update delete result to state\r\n   */\r\n  _deleteTransaction: Action<TransactionsModel, string>;\r\n\r\n  /**\r\n   * Put and update transaction to state\r\n   */\r\n  putTransaction: Thunk<\r\n    TransactionsModel,\r\n    Parameters<typeof TransactionService[\"putTransaction\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof TransactionService[\"putTransaction\"]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by put transaction thunk to update put result to state\r\n   */\r\n  _putTransaction: Action<TransactionsModel, JsonTransaction>;\r\n\r\n  /**\r\n   * Patch and update transaction to state\r\n   */\r\n  patchTransaction: Thunk<\r\n    TransactionsModel,\r\n    Parameters<typeof TransactionService[\"patchTransaction\"]>[0],\r\n    any,\r\n    StoreModel,\r\n    ReturnType<typeof TransactionService[\"patchTransaction\"]>\r\n  >;\r\n\r\n  /**\r\n   * Action called by patch transaction thunk to update patch result to state\r\n   */\r\n  _patchTransaction: Action<TransactionsModel, JsonTransaction>;\r\n\r\n  /**\r\n   * Listening to auth changes\r\n   */\r\n  onAuthChanged: ThunkOn<TransactionsModel, any, StoreModel>;\r\n\r\n  _clearTransactions: Action<TransactionsModel, void>;\r\n}\r\n\r\nexport const transactionsModel: TransactionsModel = {\r\n  items: [],\r\n\r\n  itemsByDates: computed((state) => {\r\n    return groupByDate(state.items, (_) => _.date, { sort: true });\r\n  }),\r\n\r\n  count: computed((state) => state.items.length),\r\n\r\n  sums: computed((state) => {\r\n    const incomes = state.items\r\n      .filter((_) => _.amount.isPositive)\r\n      .reduce((sum, item) => sum + item.amount.value, 0);\r\n    const expenses = state.items\r\n      .filter((_) => _.amount.isNegative)\r\n      .reduce((sum, item) => sum + item.amount.value, 0);\r\n    return {\r\n      all: new MoneyAmount(incomes + expenses),\r\n      incomes: new MoneyAmount(incomes),\r\n      expenses: new MoneyAmount(expenses),\r\n    };\r\n  }),\r\n\r\n  filtered: filteredTransactionsModel,\r\n\r\n  categories: computed((state) =>\r\n    state.items.map((_) => _.category).filter((c, i, a) => a.indexOf(c) === i)\r\n  ),\r\n\r\n  minimumAmount: computed((state) => {\r\n    return state.items.reduce((min, next) => {\r\n      return next.amount.value < min.value ? next.amount : min;\r\n    }, new MoneyAmount(0));\r\n  }),\r\n\r\n  maximumAmount: computed((state) => {\r\n    return state.items.reduce((max, next) => {\r\n      return next.amount.value > max.value ? next.amount : max;\r\n    }, new MoneyAmount(0));\r\n  }),\r\n\r\n  getTransactions: thunk(async (actions, payload) => {\r\n    const result = await TransactionService.getTransactions();\r\n    result.onSuccess((json) => actions._getTransactions(json));\r\n    return result;\r\n  }),\r\n\r\n  _getTransactions: action((state, jsons) => {\r\n    state.items = jsons.map((json) => new Transaction(json));\r\n  }),\r\n\r\n  postTransaction: thunk(async (actions, json) => {\r\n    const result = await TransactionService.postTransaction(json);\r\n    result.onSuccess((json) => actions._postTransaction(json));\r\n    return result;\r\n  }),\r\n\r\n  _postTransaction: action((state, json) => {\r\n    state.items.push(new Transaction(json));\r\n  }),\r\n\r\n  deleteTransaction: thunk(async (actions, id) => {\r\n    const result = await TransactionService.deleteTransaction(id);\r\n    result.onSuccess(() => actions.deleteTransaction(id));\r\n    return result;\r\n  }),\r\n\r\n  _deleteTransaction: action((state, id) => {\r\n    state.items = state.items.filter((item) => item.id !== id);\r\n  }),\r\n\r\n  putTransaction: thunk(async (actions, json) => {\r\n    const result = await TransactionService.putTransaction(json);\r\n    result.onSuccess((json) => actions._putTransaction(json));\r\n    return result;\r\n  }),\r\n\r\n  _putTransaction: action((state, json) => {\r\n    state.items = state.items.map((item) =>\r\n      item.id === json.id ? new Transaction(json) : item\r\n    );\r\n  }),\r\n\r\n  patchTransaction: thunk(async (actions, json) => {\r\n    const result = await TransactionService.patchTransaction(json);\r\n    result.onSuccess((json) => actions._patchTransaction(json));\r\n    return result;\r\n  }),\r\n\r\n  _patchTransaction: action((state, json) => {\r\n    state.items = state.items.map((item) =>\r\n      item.id === json.id ? new Transaction(json) : item\r\n    );\r\n  }),\r\n\r\n  onAuthChanged: thunkOn(\r\n    (_, store) => [store.auth.logout, store.auth._login],\r\n    (actions, target) => {\r\n      const [loggedOut, loggedIn] = target.resolvedTargets;\r\n      switch (target.type) {\r\n        case loggedOut:\r\n          actions._clearTransactions();\r\n          break;\r\n        case loggedIn:\r\n          actions.getTransactions();\r\n          break;\r\n      }\r\n    }\r\n  ),\r\n\r\n  _clearTransactions: action((state) => {\r\n    state.items = [];\r\n  }),\r\n};\r\n","/**\r\n * Minimum possible date (`0` or `01/01/1970`)\r\n */\r\nexport const MINIMUM_DATE = new Date(0);\r\n\r\n/**\r\n * Maximum possible date (`253370757600000` or `01/01/9999`)\r\n */\r\nexport const MAXIMUM_DATE = new Date(253370757600000);\r\n","import { createStore, createTypedHooks } from \"easy-peasy\";\r\nimport { AuthModel, authModel } from \"./models/auth.model\";\r\nimport {\r\n  TransactionsModel,\r\n  transactionsModel,\r\n} from \"./models/transactions.model\";\r\nimport { intervalModel, IntervalModel } from \"./models/interval.model\";\r\nimport { FiltersModel, filtersModel } from \"./models/filters.model\";\r\n\r\nexport interface StoreModel {\r\n  transactions: TransactionsModel;\r\n  interval: IntervalModel;\r\n  filters: FiltersModel;\r\n  auth: AuthModel;\r\n}\r\n\r\nconst storeModel: StoreModel = {\r\n  transactions: transactionsModel,\r\n  interval: intervalModel,\r\n  filters: filtersModel,\r\n  auth: authModel,\r\n};\r\n\r\nexport const store = createStore(storeModel);\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).store = store;\r\n}\r\n\r\nexport const typedHooks = createTypedHooks<StoreModel>();\r\n\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;\r\nexport const useStore = typedHooks.useStore;\r\n","import { Action, action, Computed, computed } from \"easy-peasy\";\r\nimport * as datefns from \"date-fns\";\r\nimport { compareDate } from \"../utils/compareDate/compareDate\";\r\nimport { MINIMUM_DATE, MAXIMUM_DATE } from \"../constants\";\r\n\r\nexport type IntervalModel = {\r\n  /**\r\n   * Date filter start limit.\r\n   *\r\n   * All transactions with the same or later date will pass this filter.\r\n   * The time of day is not taken into account while comparing dates.\r\n   *\r\n   * Defaults to start date of current month.\r\n   */\r\n  startDate: Date;\r\n\r\n  /**\r\n   * Date filter end limit.\r\n   *\r\n   * All transactions with the same or earlier date will pass this filter.\r\n   * The time of day is not taken into account while comparing dates.\r\n   *\r\n   * Defaults to end date of current month.\r\n   */\r\n  endDate: Date;\r\n\r\n  /**\r\n   * Action to manually specify the start date filter\r\n   */\r\n  setStartDate: Action<IntervalModel, Date>;\r\n\r\n  /**\r\n   * Action to manually specify the end date filter\r\n   */\r\n  setEndDate: Action<IntervalModel, Date>;\r\n\r\n  /**\r\n   * Action to manually specify start and end dates for interval simultaneously\r\n   */\r\n  setInterval: Action<IntervalModel, { startDate: Date; endDate: Date }>;\r\n\r\n  /**\r\n   * Move interval forward\r\n   *\r\n   * - If interval is year, select next year\r\n   * - If interval is month, select next month\r\n   * - If interval is week, select next week\r\n   * - If interval is other, select next interval of same length\r\n   *   starting from the end date of the current interval.\r\n   */\r\n  nextInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Move interval backwards\r\n   *\r\n   * - If interval is year, select previous year\r\n   * - If interval is month, select previous month\r\n   * - If interval is week, select previous week\r\n   * - If interval is other, select previous interval of same length\r\n   *   ending at the starting date of the current interval.\r\n   */\r\n  previousInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Move interval to nearest day\r\n   */\r\n  dayInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Move interval to nearest week\r\n   */\r\n  weekInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Move interval to nearest month\r\n   */\r\n  monthInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Move interval to nearest year\r\n   */\r\n  yearInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Select all (infinite interval)\r\n   */\r\n  allInterval: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Return the interval to the current day / week / month / year\r\n   * / custom interval depending on which one it currently is\r\n   */\r\n  now: Action<IntervalModel, void>;\r\n\r\n  /**\r\n   * Is the current date interval a signle day\r\n   */\r\n  isDay: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * Is the current date interval a single full week\r\n   */\r\n  isWeek: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * Is the current date interval a single full month\r\n   */\r\n  isMonth: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * Is the current date interval a single full year\r\n   */\r\n  isYear: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * Are all selected (\"infinite interval\")\r\n   */\r\n  isAll: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * Interval length in days\r\n   */\r\n  length: Computed<IntervalModel, number>;\r\n\r\n  /**\r\n   * Does the current period include today\r\n   */\r\n  includesToday: Computed<IntervalModel, boolean>;\r\n\r\n  /**\r\n   * Smarter display string that displays in format...\r\n   *\r\n   * - `MMMM, yyyy` (e.g. `July, 1999`) when `isMonth` is `true`\r\n   * - `MMMM, yyyy` (e.g. `July, 1999`) when `isMonth` is `true`\r\n   *\r\n   * Else falls back to `displayString` property and the\r\n   * `d.M. - d.M.yyyy` or `d.M.yyyy - d.M.yyyy` format.\r\n   */\r\n  smartDisplayString: Computed<IntervalModel, string>;\r\n\r\n  /**\r\n   * Display string of format\r\n   *\r\n   * `d.M. - d.M.yyyy` or `d.M.yyyy - d.M.yyyy` if dates\r\n   * are in different years.\r\n   *\r\n   * For example\r\n   * - `1.12. - 7.12.2020`\r\n   * - `30.12.1999 - 5.1.2000`\r\n   */\r\n  displayString: Computed<IntervalModel, string>;\r\n};\r\n\r\nexport const intervalModel: IntervalModel = {\r\n  startDate: datefns.startOfMonth(new Date()),\r\n\r\n  endDate: datefns.endOfMonth(new Date()),\r\n\r\n  setStartDate: action((state, date) => {\r\n    if (compareDate(date, \">\", state.endDate)) {\r\n      throw new Error(\"Start date cannot be after end date\");\r\n    } else {\r\n      state.startDate = date;\r\n    }\r\n  }),\r\n\r\n  setEndDate: action((state, date) => {\r\n    if (compareDate(date, \"<\", state.startDate)) {\r\n      throw new Error(\"End date cannot be before start date\");\r\n    } else {\r\n      state.endDate = date;\r\n    }\r\n  }),\r\n\r\n  setInterval: action((state, dates) => {\r\n    if (compareDate(dates.startDate, \">\", dates.endDate)) {\r\n      throw new Error(\"End date cannot be before start date\");\r\n    } else {\r\n      state.startDate = dates.startDate;\r\n      state.endDate = dates.endDate;\r\n    }\r\n  }),\r\n\r\n  nextInterval: action((state) => {\r\n    if (state.isAll) return;\r\n    const newStartDate = datefns.addDays(state.endDate, 1);\r\n    if (state.isYear) {\r\n      state.endDate = datefns.endOfYear(newStartDate);\r\n    } else if (state.isMonth) {\r\n      state.endDate = datefns.endOfMonth(newStartDate);\r\n    } else if (state.isWeek) {\r\n      state.endDate = datefns.endOfWeek(newStartDate, { weekStartsOn: 1 });\r\n    } else {\r\n      state.endDate = datefns.addDays(newStartDate, state.length);\r\n    }\r\n    state.startDate = newStartDate;\r\n  }),\r\n\r\n  previousInterval: action((state) => {\r\n    if (state.isAll) return;\r\n    const newEndDate = datefns.subDays(state.startDate, 1);\r\n    if (state.isYear) {\r\n      state.startDate = datefns.startOfYear(newEndDate);\r\n    } else if (state.isMonth) {\r\n      state.startDate = datefns.startOfMonth(newEndDate);\r\n    } else if (state.isWeek) {\r\n      state.startDate = datefns.startOfWeek(newEndDate, { weekStartsOn: 1 });\r\n    } else {\r\n      state.startDate = datefns.subDays(newEndDate, state.length);\r\n    }\r\n    state.endDate = newEndDate;\r\n  }),\r\n\r\n  length: computed((state) => {\r\n    return datefns.differenceInDays(state.startDate, state.endDate);\r\n  }),\r\n\r\n  dayInterval: action((state) => {\r\n    const date = state.isAll ? new Date() : state.startDate;\r\n    state.startDate = datefns.startOfDay(date);\r\n    state.endDate = datefns.endOfDay(date);\r\n  }),\r\n\r\n  weekInterval: action((state) => {\r\n    const date = state.isAll ? new Date() : state.startDate;\r\n    state.startDate = datefns.startOfWeek(date, { weekStartsOn: 1 });\r\n    state.endDate = datefns.endOfWeek(date, { weekStartsOn: 1 });\r\n  }),\r\n\r\n  monthInterval: action((state) => {\r\n    const date = state.isAll ? new Date() : state.startDate;\r\n    state.startDate = datefns.startOfMonth(date);\r\n    state.endDate = datefns.endOfMonth(date);\r\n  }),\r\n\r\n  yearInterval: action((state) => {\r\n    const date = state.isAll ? new Date() : state.startDate;\r\n    state.startDate = datefns.startOfYear(date);\r\n    state.endDate = datefns.endOfYear(date);\r\n  }),\r\n\r\n  allInterval: action((state) => {\r\n    state.startDate = MINIMUM_DATE;\r\n    state.endDate = MAXIMUM_DATE;\r\n  }),\r\n\r\n  now: action((state) => {\r\n    const today = new Date();\r\n    if (state.isYear) {\r\n      state.startDate = datefns.startOfYear(today);\r\n      state.endDate = datefns.endOfYear(today);\r\n    } else if (state.isMonth) {\r\n      state.startDate = datefns.startOfMonth(today);\r\n      state.endDate = datefns.endOfMonth(today);\r\n    } else if (state.isWeek) {\r\n      state.startDate = datefns.startOfWeek(today, { weekStartsOn: 1 });\r\n      state.endDate = datefns.endOfWeek(today, { weekStartsOn: 1 });\r\n    } else if (state.isDay) {\r\n      state.startDate = datefns.startOfDay(today);\r\n      state.endDate = datefns.endOfDay(today);\r\n    } else {\r\n      state.endDate = datefns.endOfDay(datefns.addDays(today, state.length));\r\n      state.startDate = datefns.startOfDay(today);\r\n    }\r\n  }),\r\n\r\n  isAll: computed((state) => {\r\n    return (\r\n      compareDate(state.startDate, \"==\", MINIMUM_DATE) &&\r\n      compareDate(state.endDate, \"==\", MAXIMUM_DATE)\r\n    );\r\n  }),\r\n\r\n  isYear: computed((state) => {\r\n    return (\r\n      datefns.isSameYear(state.startDate, state.endDate) &&\r\n      datefns.getDayOfYear(state.startDate) === 1 &&\r\n      datefns.isSameDay(state.endDate, datefns.lastDayOfYear(state.endDate))\r\n    );\r\n  }),\r\n\r\n  isMonth: computed((state) => {\r\n    return (\r\n      datefns.isSameMonth(state.startDate, state.endDate) &&\r\n      datefns.isFirstDayOfMonth(state.startDate) &&\r\n      datefns.isLastDayOfMonth(state.endDate)\r\n    );\r\n  }),\r\n\r\n  isWeek: computed((state) => {\r\n    return (\r\n      datefns.isSameWeek(state.startDate, state.endDate, { weekStartsOn: 1 }) &&\r\n      datefns.getDay(state.startDate) === 1 &&\r\n      datefns.getDay(state.endDate) === 0\r\n    );\r\n  }),\r\n\r\n  isDay: computed((state) => {\r\n    return datefns.isSameDay(state.startDate, state.endDate);\r\n  }),\r\n\r\n  includesToday: computed((state) => {\r\n    const today = new Date();\r\n    return (\r\n      compareDate(today, \">=\", state.startDate) &&\r\n      compareDate(today, \"<=\", state.endDate)\r\n    );\r\n  }),\r\n\r\n  smartDisplayString: computed((state) => {\r\n    if (state.isAll) {\r\n      return \"All\";\r\n    } else if (state.isYear) {\r\n      return datefns.format(state.startDate, \"yyyy\");\r\n    } else if (state.isMonth) {\r\n      return datefns.format(state.startDate, \"MMMM, yyyy\");\r\n    } else if (state.isDay) {\r\n      return datefns.format(state.startDate, \"d.M.yyyy\");\r\n    } else {\r\n      return state.displayString;\r\n    }\r\n  }),\r\n\r\n  displayString: computed((state) => {\r\n    return (\r\n      (datefns.isSameYear(state.startDate, state.endDate)\r\n        ? datefns.format(state.startDate, \"d.M\")\r\n        : datefns.format(state.startDate, \"d.M.yyyy\")) +\r\n      \" - \" +\r\n      datefns.format(state.endDate, \"d.M.yyyy\")\r\n    );\r\n  }),\r\n};\r\n","import { Action, action } from \"easy-peasy\";\r\n\r\nexport type FiltersModel = {\r\n  /**\r\n   * Current search term for matching transactions. Defaults\r\n   * to empty string when unused.\r\n   */\r\n  searchTerm: string;\r\n\r\n  /**\r\n   * Current minimum amount for matching transactions.\r\n   * Defaults to -Infinity when unused.\r\n   */\r\n  minAmount: number;\r\n\r\n  /**\r\n   * Current maximum amount for matching transactions.\r\n   * Defaults to +Infinity when unused.\r\n   */\r\n  maxAmount: number;\r\n\r\n  /**\r\n   * Categories to exclude while filtering.\r\n   * Defaults to [].\r\n   */\r\n  excludedCategories: string[];\r\n\r\n  /**\r\n   * Reset all filters action\r\n   */\r\n  resetAll: Action<FiltersModel, void>;\r\n\r\n  /**\r\n   * Set search term action\r\n   */\r\n  setSearchTerm: Action<FiltersModel, string>;\r\n\r\n  /**\r\n   * Reset search term action\r\n   */\r\n  resetSearchTerm: Action<FiltersModel, void>;\r\n\r\n  /**\r\n   * Set amount filter action\r\n   *\r\n   * The first argument in the tuple will define a new minimum\r\n   * amount limit if defined, else does not change minimum limit\r\n   *\r\n   * The second argument in the tuple will define a new maximum\r\n   * amount limit if defined, else does not change maximum limit\r\n   */\r\n  setAmount: Action<FiltersModel, [number | undefined, number | undefined]>;\r\n\r\n  /**\r\n   * Reset amount filter action\r\n   */\r\n  resetAmount: Action<FiltersModel, void>;\r\n\r\n  /**\r\n   * Exclude a category\r\n   */\r\n  excludeCategory: Action<FiltersModel, string | string[]>;\r\n\r\n  /**\r\n   * Include a category\r\n   */\r\n  includeCategory: Action<FiltersModel, string>;\r\n\r\n  /**\r\n   * Reset excluded categories action\r\n   */\r\n  resetExcludedCategories: Action<FiltersModel, void>;\r\n};\r\n\r\nexport const filtersModel: FiltersModel = {\r\n  searchTerm: \"\",\r\n  minAmount: Number.NEGATIVE_INFINITY,\r\n  maxAmount: Number.POSITIVE_INFINITY,\r\n  excludedCategories: [],\r\n\r\n  resetAll: action((state) => {\r\n    state.searchTerm = \"\";\r\n    state.minAmount = Number.NEGATIVE_INFINITY;\r\n    state.maxAmount = Number.POSITIVE_INFINITY;\r\n    state.excludedCategories = [];\r\n  }),\r\n\r\n  setSearchTerm: action((state, value) => {\r\n    state.searchTerm = value;\r\n  }),\r\n\r\n  resetSearchTerm: action((state) => {\r\n    state.searchTerm = \"\";\r\n  }),\r\n\r\n  setAmount: action((state, [min, max]) => {\r\n    if (typeof min === \"number\") {\r\n      state.minAmount = min;\r\n    }\r\n    if (typeof max === \"number\") {\r\n      state.maxAmount = max;\r\n    }\r\n  }),\r\n\r\n  resetAmount: action((state) => {\r\n    state.minAmount = Number.NEGATIVE_INFINITY;\r\n    state.maxAmount = Number.POSITIVE_INFINITY;\r\n  }),\r\n\r\n  excludeCategory: action((state, category) => {\r\n    state.excludedCategories.push(\r\n      ...(Array.isArray(category) ? category : [category])\r\n    );\r\n  }),\r\n\r\n  includeCategory: action((state, category) => {\r\n    state.excludedCategories = state.excludedCategories.filter(\r\n      (_) => _ !== category\r\n    );\r\n  }),\r\n\r\n  resetExcludedCategories: action((state) => {\r\n    state.excludedCategories = [];\r\n  }),\r\n};\r\n","import { routes } from \"../Routes\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type RouteSelector = (r: typeof routes) => string;\r\n\r\nexport function useRedirect() {\r\n  const history = useHistory();\r\n  return (path: string | RouteSelector) =>\r\n    history.push(typeof path === \"string\" ? path : path(routes));\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { LoginView } from './LoginView';\r\nimport * as yup from \"yup\"\r\nimport { useStoreActions, useStoreState } from '../../store';\r\nimport { useRedirect } from '../../hooks/useRedirect';\r\n\r\nexport const loginValidationSchema = yup.object({\r\n\temail: yup.string().defined().email(),\r\n\tpassword: yup.string().defined(),\r\n}).defined()\r\n\r\nexport type LoginFormType = yup.InferType<typeof loginValidationSchema>\r\n\r\nexport const Login: React.FC<{}> = () => {\r\n\r\n\tconst [error, setError] = useState<string>()\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\r\n\tconst loginWithGoogle = useStoreActions(_ => _.auth.loginWithGoogle)\r\n\tconst loginWithEmailPassword = useStoreActions(_ => _.auth.loginWithEmailPassword)\r\n\tconst requestConfirmationEmail = useStoreActions(_ => _.auth.requestConfirmationEmail)\r\n\r\n\t/**\r\n\t * Check initial login\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tif (user) {\r\n\t\t\tredirect(routes => routes.dashboard)\r\n\t\t}\r\n\t}, [user, redirect])\r\n\r\n\tasync function handleSubmit(values: LoginFormType) {\r\n\t\tsetError(undefined)\r\n\r\n\t\tconst result = await loginWithEmailPassword(values)\r\n\t\tresult.onSuccess(() => redirect(routes => routes.dashboard))\r\n\r\n\t\tresult.onFailure(failure => {\r\n\t\t\tswitch (failure.code) {\r\n\t\t\t\tcase \"data/invalid-request-data\":\r\n\t\t\t\t\tsetError(\"Invalid email or password.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/invalid-credentials\":\r\n\t\t\t\t\tsetError(\"Wrong password or the user does not have a password.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/user-not-found\":\r\n\t\t\t\t\tsetError(\"No user exists with that email.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/email-not-confirmed\":\r\n\t\t\t\t\tsetError(\"Confirm your email before logging in. We have sent you a new email confirmation link.\")\r\n\t\t\t\t\tif (user?.email) {\r\n\t\t\t\t\t\trequestConfirmationEmail({ email: user.email })\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"server/unavailable\":\r\n\t\t\t\t\tsetError(\"Could not contact server. Try again later.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn(\"Uncaught error code in login:\", failure)\r\n\t\t\t\t\tsetError(\"An error occured while logging in. Try again.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tasync function handleGoogleSubmit() {\r\n\t\tloginWithGoogle()\r\n\t}\r\n\r\n\tasync function handleForgotPassword() {\r\n\t\tredirect(_ => _.forgotPassword)\r\n\t}\r\n\r\n\tasync function handleCreateAccount() {\r\n\t\tredirect(_ => _.register)\r\n\t}\r\n\r\n\treturn <LoginView {...{\r\n\t\thandleGoogleSubmit,\r\n\t\thandleSubmit,\r\n\t\thandleForgotPassword,\r\n\t\thandleCreateAccount,\r\n\t\terror,\r\n\t}} />\r\n}","import \"./Register.scss\"\r\nimport React, { useState } from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { registerValidationSchema, RegisterFormType } from './RegisterController';\r\nimport { yupResolver } from '@hookform/resolvers';\r\nimport { TextField, Button, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport {\r\n\tEmail as EmailIcon,\r\n\tVisibility as PasswordVisibleIcon,\r\n\tVisibilityOff as PasswordInvisibleIcon,\r\n} from \"@material-ui/icons\";\r\nimport { AuthFrame } from \"../../components/AuthFrame/AuthFrame\";\r\nimport { Type } from \"../../components/Type/Type\";\r\n\r\n\r\nexport type RegisterViewProps = {\r\n\thandleSubmit(values: RegisterFormType): Promise<void>;\r\n\thandleLogin(): Promise<void>;\r\n\terror?: string;\r\n\tregistered: boolean;\r\n}\r\n\r\nexport const RegisterView: React.FC<RegisterViewProps> = (props) => {\r\n\r\n\tconst [passwordVisible, setPasswordVisible] = useState(false)\r\n\r\n\tconst form = useForm<RegisterFormType>({\r\n\t\tresolver: yupResolver(registerValidationSchema),\r\n\t})\r\n\r\n\tconst emailError = form.formState.touched.email && form.errors.email?.message\r\n\tconst passwordError = form.formState.touched.password && form.errors.password?.message\r\n\r\n\treturn <div className=\"Register\">\r\n\r\n\t\t<AuthFrame\r\n\r\n\t\t\theader=\"Create account\"\r\n\r\n\t\t\tbody={\r\n\t\t\t\tprops.registered\r\n\t\t\t\t\t? <>\r\n\t\t\t\t\t\t<Type variant=\"h6\">\r\n\t\t\t\t\t\t\t{\"Succesfully registered.\"}\r\n\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t{\"Check your email in order to confirm your email address. \"}\r\n\t\t\t\t\t\t\t{\"You can login after having confirmation.\"}\r\n\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t: <form onSubmit={form.handleSubmit(props.handleSubmit)}>\r\n\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"register-email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tinputRef={form.register}\r\n\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\terror={!!emailError}\r\n\t\t\t\t\t\t\thelperText={emailError}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<EmailIcon />\r\n\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"register-password\"\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\ttype={passwordVisible ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\tinputRef={form.register}\r\n\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\terror={!!passwordError}\r\n\t\t\t\t\t\t\thelperText={passwordError}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<IconButton onClick={() => setPasswordVisible(_ => !_)} size=\"small\">\r\n\t\t\t\t\t\t\t\t\t\t{passwordVisible ? <PasswordVisibleIcon /> : <PasswordInvisibleIcon />}\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Create account\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprops.error\r\n\t\t\t\t\t\t\t\t? <Type color=\"error\">\r\n\t\t\t\t\t\t\t\t\t{props.error}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</form >\r\n\t\t\t}\r\n\r\n\t\t\tfooter={\r\n\t\t\t\t<Button onClick={() => props.handleLogin()}>\r\n\t\t\t\t\t{\"Already have an account? Login\"}\r\n\t\t\t\t</Button>\r\n\t\t\t}\r\n\r\n\t\t/>\r\n\r\n\t</div>\r\n}","import React, { useState } from 'react';\r\nimport { RegisterView } from './RegisterView';\r\nimport { InferType, object, string } from \"yup\"\r\nimport { useStoreActions } from '../../store';\r\nimport { useRedirect } from '../../hooks/useRedirect';\r\n\r\nexport const registerValidationSchema = object({\r\n\temail: string().defined().max(255).email(),\r\n\tpassword: string().defined().min(6).max(255),\r\n}).defined()\r\n\r\nexport type RegisterFormType = InferType<typeof registerValidationSchema>\r\n\r\nexport const Register: React.FC<{}> = () => {\r\n\r\n\tconst [error, setError] = useState<string>()\r\n\r\n\tconst [registered, setRegistered] = useState(false)\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst register = useStoreActions(_ => _.auth.registerWithEmailPassword)\r\n\r\n\tasync function handleSubmit(values: RegisterFormType) {\r\n\t\tsetError(undefined)\r\n\t\tconst result = await register({ email: values.email, password: values.password })\r\n\t\tresult.onSuccess(() => setRegistered(true))\r\n\t\tresult.onFailure(failure => {\r\n\t\t\tswitch (failure.code) {\r\n\t\t\t\tcase \"data/invalid-request-data\":\r\n\t\t\t\t\tsetError(\"Invalid email or password.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/user-already-exists\":\r\n\t\t\t\t\tsetError(\"An user already exists with that email.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"server/unavailable\":\r\n\t\t\t\t\tsetError(\"Could not contact server. Try again later.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn(\"Uncaught error code in login:\", failure)\r\n\t\t\t\t\tsetError(\"An error occured while logging in. Try again.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tasync function handleLogin() {\r\n\t\tredirect(_ => _.login)\r\n\t}\r\n\r\n\treturn <RegisterView\r\n\t\thandleSubmit={handleSubmit}\r\n\t\thandleLogin={handleLogin}\r\n\t\terror={error}\r\n\t\tregistered={registered}\r\n\t/>\r\n}","import React from \"react\";\r\nimport { Route, RouteProps, Redirect } from \"react-router-dom\";\r\nimport { useStoreState } from \"../../store\";\r\nimport { routes } from \"../../Routes\";\r\n\r\nexport type ProtectedRouteProps = {\r\n\tfallbackRoute?: string;\r\n} & RouteProps\r\n\r\nexport default function ProtectedRoute(props: ProtectedRouteProps) {\r\n\r\n\tconst { fallbackRoute, ...routeProps } = props\r\n\r\n\t/**\r\n\t * Default fallback to login on redirect\r\n\t */\r\n\tconst defaultFallbackRoute = routes.login\r\n\r\n\t/**\r\n\t * Get current user details\r\n\t */\r\n\tconst initialized = useStoreState(_ => _.auth.initialized)\r\n\tconst isLoggedIn = useStoreState(_ => _.auth.isLoggedIn)\r\n\r\n\t/**\r\n\t * If the user is being loaded, show nothing\r\n\t */\r\n\tif (!initialized) return null\r\n\r\n\t/**\r\n\t * Else if user is not logged in redirect to fallback route or default fallback route\r\n\t * if none specified in props\r\n\t */\r\n\telse if (!isLoggedIn) return <Redirect to={fallbackRoute || defaultFallbackRoute} />\r\n\r\n\t/**\r\n\t * Else return route as is\r\n\t */\r\n\telse return <Route {...routeProps} />\r\n}","import \"./TransactionListing.scss\";\r\nimport React from \"react\"\r\nimport cx from \"classnames\"\r\nimport { Transaction } from \"../../classes/Transaction\";\r\nimport { Plus as PlusIcon, Minus as MinusIcon } from \"react-feather\"\r\n\r\nexport type TransactionListingViewProps = {\r\n\ttransaction: Transaction;\r\n\thandleDelete: Function;\r\n}\r\n\r\nexport function TransactionListingView(props: TransactionListingViewProps) {\r\n\r\n\tconst signClass = props.transaction.amount.isPositive ? \"positive\" : \"negative\"\r\n\r\n\treturn <div className=\"TransactionListing\">\r\n\t\t<div className={cx(\"icon\", signClass)}>\r\n\t\t\t<div className=\"iconContainer\">\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.transaction.amount.isPositive\r\n\t\t\t\t\t\t? <PlusIcon />\r\n\t\t\t\t\t\t: <MinusIcon />\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"category\">\r\n\t\t\t<span>\r\n\t\t\t\t{props.transaction.category}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div className=\"comment\">\r\n\t\t\t<span>\r\n\t\t\t\t{props.transaction.comment}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div className={cx(\"amount\", signClass)}>\r\n\t\t\t<span>\r\n\t\t\t\t{props.transaction.amount.format()}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t</div>\r\n}","import React, { useCallback } from \"react\"\r\nimport { TransactionListingView } from \"./TransactionListingView\"\r\nimport { Transaction } from \"../../classes/Transaction\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport type TransactionListingProps = {\r\n\ttransaction: Transaction;\r\n}\r\n\r\nexport function TransactionListing(props: TransactionListingProps) {\r\n\r\n\tconst deleteTransaction = useStoreActions(_ => _.transactions.deleteTransaction)\r\n\r\n\tconst handleDelete = useCallback(() => {\r\n\t\tdeleteTransaction(props.transaction.id)\r\n\t}, [props.transaction, deleteTransaction])\r\n\r\n\treturn <TransactionListingView\r\n\t\ttransaction={props.transaction}\r\n\t\thandleDelete={handleDelete}\r\n\t/>\r\n}","import \"./TransactionList.scss\";\r\nimport React, { createRef, useEffect } from \"react\"\r\nimport { TransactionListing } from \"../TransactionListing/TransactionListing\";\r\nimport { Transaction } from \"../../classes/Transaction\";\r\nimport { format } from \"date-fns\"\r\nimport { AutoSizer, List } from \"react-virtualized\"\r\nimport { Type } from \"../Type/Type\";\r\n\r\nexport type TransactionListViewProps = {\r\n\titemsByDates: {\r\n\t\tdate: Date;\r\n\t\titems: Transaction[];\r\n\t}[]\r\n}\r\n\r\nexport function TransactionListView(props: TransactionListViewProps) {\r\n\r\n\t/**\r\n\t * Reference to virtualized list component for public methods\r\n\t */\r\n\tconst virtualizedListRef = createRef<List>()\r\n\r\n\t/**\r\n\t * Force virtualized list to recompute row heights each time\r\n\t * the props change\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tvirtualizedListRef.current?.recomputeRowHeights()\r\n\t}, [props, virtualizedListRef])\r\n\r\n\treturn <div className=\"TransactionList\">\r\n\r\n\t\t<AutoSizer className=\"autoSizer\">\r\n\t\t\t{\r\n\t\t\t\t(autoSizer) => <List\r\n\t\t\t\t\tref={virtualizedListRef}\r\n\t\t\t\t\tclassName=\"virtualizedList\"\r\n\t\t\t\t\theight={autoSizer.height}\r\n\t\t\t\t\twidth={autoSizer.width}\r\n\t\t\t\t\trowCount={props.itemsByDates.length}\r\n\t\t\t\t\trowHeight={({ index }) => {\r\n\t\t\t\t\t\treturn props.itemsByDates[index].items.length * 68 + 48\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tnoRowsRenderer={() => {\r\n\t\t\t\t\t\treturn <Type>\r\n\t\t\t\t\t\t\t{\"No transactions\"}\r\n\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t}}\r\n\t\t\t\t\trowRenderer={(rowProps) => {\r\n\t\t\t\t\t\tconst entry = props.itemsByDates[rowProps.index]\r\n\t\t\t\t\t\treturn <div className=\"dateGroup\" key={rowProps.key} style={rowProps.style}>\r\n\t\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t\t{toDatestring(entry.date)}\r\n\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tentry.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\treturn <li key={item.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<TransactionListing transaction={item} />\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t</AutoSizer>\r\n\r\n\t</div >\r\n}\r\n\r\nfunction toDatestring(date: Date) {\r\n\treturn date.getFullYear() === currentYear\r\n\t\t? format(date, \"dd.MM.\")\r\n\t\t: format(date, \"dd.MM.yyyy\")\r\n}\r\n\r\nconst currentYear = new Date().getFullYear()","import React from \"react\"\r\nimport { TransactionListView } from \"./TransactionListView\"\r\nimport { useStoreState } from \"../../store\"\r\n\r\nexport type TransactionListProps = {\r\n\tbypassFilters?: boolean;\r\n}\r\n\r\nexport function TransactionList(props: TransactionListProps) {\r\n\r\n\tconst itemsByDates = useStoreState(_ => _.transactions.itemsByDates)\r\n\r\n\tconst filteredItemsByDates = useStoreState(_ => _.transactions.filtered.itemsByDates)\r\n\r\n\treturn <TransactionListView\r\n\t\titemsByDates={props.bypassFilters ? itemsByDates : filteredItemsByDates}\r\n\t/>\r\n}","import \"./PageHeader.scss\";\r\nimport React from \"react\"\r\nimport textureImg from \"../../images/pexels-johannes-plenio-1103970.jpg\"\r\n\r\nexport type PageHeaderProps = {\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nexport function PageHeader(props: PageHeaderProps) {\r\n\treturn <header className=\"PageHeader\">\r\n\t\t<img src={textureImg} alt=\"\" className=\"texture\" />\r\n\t\t{props.children}\r\n\t</header>\r\n}","import \"./MoneyType.scss\";\r\nimport React from \"react\"\r\nimport { MoneyAmount } from \"../../classes/MoneyAmount\";\r\nimport { Type, TypeProps } from \"../Type/Type\";\r\n\r\nexport type MoneyTypeProps = {\r\n\tamount: MoneyAmount;\r\n} & TypeProps\r\n\r\nexport function MoneyType(props: MoneyTypeProps) {\r\n\r\n\tconst { amount, ...typeProps } = props\r\n\r\n\treturn <span className=\"MoneyType\">\r\n\t\t<Type condensed {...typeProps} component=\"span\">\r\n\t\t\t{amount.format()}\r\n\t\t</Type>\r\n\t</span >\r\n}","import { useEffect, useState, useCallback, useMemo } from \"react\";\r\n\r\nexport function useMedia(query: string) {\r\n  /**\r\n   * Media query list from query\r\n   */\r\n  const mediaQueryList = useMemo(() => {\r\n    return window.matchMedia(query);\r\n  }, [query]);\r\n\r\n  /**\r\n   * Current value\r\n   */\r\n  const [value, setValue] = useState<boolean>(false);\r\n\r\n  /**\r\n   * Changehandler: sets the current value\r\n   */\r\n  const changeHandler = useCallback(() => {\r\n    setValue(mediaQueryList.matches);\r\n  }, [mediaQueryList]);\r\n\r\n  /**\r\n   * Listening to changes and cleanup\r\n   */\r\n  useEffect(() => {\r\n    changeHandler();\r\n    mediaQueryList.addEventListener(\"change\", changeHandler);\r\n    return () => {\r\n      mediaQueryList.removeEventListener(\"change\", changeHandler);\r\n    };\r\n  }, [mediaQueryList, changeHandler]);\r\n\r\n  /**\r\n   * Returning value\r\n   */\r\n  return value;\r\n}\r\n\r\n/**\r\n * (min-width: $px) media query hook wrapper\r\n */\r\nexport function useMinWidthMedia(minWidth: number) {\r\n  const query = `(min-width: ${minWidth}px)`;\r\n  return useMedia(query);\r\n}\r\n\r\n/**\r\n * (max-width: $px) media query hook wrapper\r\n */\r\nexport function useMaxWidthMedia(maxWidth: number) {\r\n  const query = `(max-width: ${maxWidth}px)`;\r\n  return useMedia(query);\r\n}\r\n\r\n/**\r\n * Responsive media queries for app breakpoints\r\n *\r\n * SM breakpoint at 600px\r\n */\r\nexport function useSmMedia() {\r\n  const query = `(min-width: 600px)`;\r\n  return useMedia(query);\r\n}\r\n\r\n/**\r\n * Responsive media queries for app breakpoints\r\n *\r\n * MD breakpoint at 900px\r\n */\r\nexport function useMdMedia() {\r\n  const query = `(min-width: 900px)`;\r\n  return useMedia(query);\r\n}\r\n\r\n/**\r\n * Responsive media queries for app breakpoints\r\n *\r\n * LG breakpoint at 1200px\r\n */\r\nexport function useLgMedia() {\r\n  const query = `(min-width: 1200px)`;\r\n  return useMedia(query);\r\n}\r\n","import \"./FiltersForm.scss\";\r\nimport React from \"react\"\r\nimport { Sort as FiltersIcon, Clear as ClearIcon } from \"@material-ui/icons\";\r\nimport { Button, TextField, InputAdornment, IconButton, Slider, Chip } from \"@material-ui/core\";\r\nimport { Type } from \"../Type/Type\";\r\n\r\nexport type FiltersFormViewProps = {\r\n\r\n\tonConfirm?(): void;\r\n\r\n\tonResetAll(): void;\r\n\r\n\tonResetSearchTerm(): void;\r\n\tonResetAmount(): void;\r\n\tonResetExcludedCategories(): void;\r\n\r\n\tcategories: string[];\r\n\r\n\tsearchTerm: string;\r\n\tminAmount: number;\r\n\tmaxAmount: number;\r\n\texcludedCategories: string[];\r\n\r\n\tsetSearchTerm(value: string): void;\r\n\tsetAmount(values: [number | undefined, number | undefined]): void;\r\n\texcludeCategory(value: string | string[]): void;\r\n\tincludeCategory(value: string): void;\r\n\r\n\tminPossibleAmount: number;\r\n\tmaxPossibleAmount: number;\r\n\r\n}\r\n\r\nexport function FiltersFormView(props: FiltersFormViewProps) {\r\n\treturn <div className=\"FiltersForm\">\r\n\r\n\t\t<header>\r\n\r\n\t\t\t<div className=\"title\">\r\n\t\t\t\t<Type variant=\"button\">\r\n\t\t\t\t\t{\"Filters\"}\r\n\t\t\t\t</Type>\r\n\t\t\t\t<FiltersIcon />\r\n\t\t\t</div>\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"text\"\r\n\t\t\t\tonClick={props.onResetAll}\r\n\t\t\t>\r\n\t\t\t\t{\"Reset all\"}\r\n\t\t\t</Button>\r\n\r\n\t\t</header>\r\n\r\n\t\t<section className=\"searchTerm\">\r\n\r\n\t\t\t<div className=\"sectionLabel\">\r\n\r\n\t\t\t\t<Type className=\"label\">\r\n\t\t\t\t\t{\"Search term\"}\r\n\t\t\t\t</Type>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<TextField\r\n\t\t\t\tvalue={props.searchTerm}\r\n\t\t\t\tonChange={e => props.setSearchTerm(e.target.value)}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tfullWidth\r\n\t\t\t\tInputProps={{\r\n\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t<IconButton size=\"small\" onClick={props.onResetSearchTerm}>\r\n\t\t\t\t\t\t\t<ClearIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\r\n\t\t</section>\r\n\r\n\t\t<section className=\"amount\">\r\n\r\n\t\t\t<div className=\"sectionLabel\">\r\n\r\n\t\t\t\t<Type className=\"label\">\r\n\t\t\t\t\t{\"Amount\"}\r\n\t\t\t\t</Type>\r\n\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\tonClick={props.onResetAmount}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\"Reset\"}\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"sliderLabel\">\r\n\t\t\t\t<Type>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops.minAmount <= props.minPossibleAmount\r\n\t\t\t\t\t\t\t? \"N/A\"\r\n\t\t\t\t\t\t\t: Math.floor(props.minAmount / 100) + \" €\"\r\n\t\t\t\t\t}\r\n\t\t\t\t</Type>\r\n\t\t\t\t<Type>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops.maxAmount >= props.maxPossibleAmount\r\n\t\t\t\t\t\t\t? \"N/A\"\r\n\t\t\t\t\t\t\t: Math.ceil(props.maxAmount / 100) + \" €\"\r\n\t\t\t\t\t}\r\n\t\t\t\t</Type>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"sliderContainer\">\r\n\r\n\t\t\t\t<Slider\r\n\t\t\t\t\tvalue={[Math.floor(props.minAmount / 100), Math.ceil(props.maxAmount / 100)]}\r\n\t\t\t\t\tonChange={(e, value) => Array.isArray(value) && value.length === 2\r\n\t\t\t\t\t\t? props.setAmount(value.map(_ => _ * 100) as [number, number])\r\n\t\t\t\t\t\t: console.error(\"Slider returned value which is not a numeric tuple:\", value)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstep={1}\r\n\t\t\t\t\tmin={Math.floor(props.minPossibleAmount / 100)}\r\n\t\t\t\t\tmax={Math.ceil(props.maxPossibleAmount / 100)}\r\n\t\t\t\t\tmarks={[{ value: 0, label: \"0\" }]}\r\n\t\t\t\t\tvalueLabelDisplay=\"off\"\r\n\t\t\t\t/>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</section>\r\n\r\n\t\t<section className=\"category\">\r\n\r\n\t\t\t<div className=\"sectionLabel\">\r\n\r\n\t\t\t\t<Type className=\"label\">\r\n\t\t\t\t\t{\"Categories\"}\r\n\t\t\t\t</Type>\r\n\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\tonClick={props.onResetExcludedCategories}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\"Reset\"}\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"categoryChips\">\r\n\r\n\t\t\t\t{props.categories.map(category => {\r\n\t\t\t\t\tconst excluded = props.excludedCategories.includes(category)\r\n\t\t\t\t\treturn <Chip\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tif (excluded) { props.includeCategory(category) }\r\n\t\t\t\t\t\t\telse { props.excludeCategory(category) }\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tcolor={excluded ? \"default\" : \"primary\"}\r\n\t\t\t\t\t\tlabel={category}\r\n\t\t\t\t\t/>\r\n\t\t\t\t})}\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"categoryActions\">\r\n\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\tonClick={props.onResetExcludedCategories}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\"Select all\"}\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\tonClick={() => props.excludeCategory(props.categories)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\"Deselect all\"}\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\r\n\t\t</section>\r\n\r\n\t\t{\r\n\t\t\tprops.onConfirm === undefined ? null :\r\n\t\t\t\t<section className=\"ok\">\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tonClick={props.onConfirm}\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\"Ok\"}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</section>\r\n\t\t}\r\n\r\n\r\n\t</div>\r\n}","import React from \"react\"\r\nimport { FiltersFormView } from \"./FiltersFormView\"\r\nimport { useStoreActions, useStoreState } from \"../../store\"\r\n\r\nexport type FiltersFormProps = {\r\n\r\n\tonConfirm?(): void;\r\n\r\n}\r\n\r\nexport function FiltersForm(props: FiltersFormProps) {\r\n\r\n\tconst resetAll = useStoreActions(_ => _.filters.resetAll)\r\n\r\n\tconst resetSearchTerm = useStoreActions(_ => _.filters.resetSearchTerm)\r\n\tconst resetAmount = useStoreActions(_ => _.filters.resetAmount)\r\n\tconst resetExcludedCategories = useStoreActions(_ => _.filters.resetExcludedCategories)\r\n\r\n\tconst categories = useStoreState(_ => _.transactions.categories)\r\n\r\n\tconst searchTerm = useStoreState(_ => _.filters.searchTerm)\r\n\tconst minAmount = useStoreState(_ => _.filters.minAmount)\r\n\tconst maxAmount = useStoreState(_ => _.filters.maxAmount)\r\n\tconst excludedCategories = useStoreState(_ => _.filters.excludedCategories)\r\n\r\n\tconst setSearchTerm = useStoreActions(_ => _.filters.setSearchTerm)\r\n\tconst setAmount = useStoreActions(_ => _.filters.setAmount)\r\n\tconst excludeCategory = useStoreActions(_ => _.filters.excludeCategory)\r\n\tconst includeCategory = useStoreActions(_ => _.filters.includeCategory)\r\n\r\n\tconst minPossibleAmount = useStoreState(_ => _.transactions.minimumAmount).value\r\n\tconst maxPossibleAmount = useStoreState(_ => _.transactions.maximumAmount).value\r\n\r\n\treturn <FiltersFormView\r\n\r\n\t\tonConfirm={props.onConfirm}\r\n\r\n\t\tonResetAll={() => {\r\n\t\t\tresetAll()\r\n\t\t\tif (props.onConfirm) props.onConfirm()\r\n\t\t}}\r\n\r\n\t\tonResetSearchTerm={() => resetSearchTerm()}\r\n\t\tonResetAmount={() => resetAmount()}\r\n\t\tonResetExcludedCategories={() => resetExcludedCategories()}\r\n\r\n\t\tcategories={categories}\r\n\r\n\t\tsearchTerm={searchTerm}\r\n\t\tminAmount={minAmount}\r\n\t\tmaxAmount={maxAmount}\r\n\t\texcludedCategories={excludedCategories}\r\n\r\n\t\tsetSearchTerm={value => setSearchTerm(value)}\r\n\t\tsetAmount={value => setAmount(value)}\r\n\t\texcludeCategory={value => excludeCategory(value)}\r\n\t\tincludeCategory={value => includeCategory(value)}\r\n\r\n\t\tminPossibleAmount={minPossibleAmount}\r\n\t\tmaxPossibleAmount={maxPossibleAmount}\r\n\r\n\t/>\r\n}","import \"./IntervalPickerForm.scss\";\r\nimport React from \"react\"\r\nimport { IconButton, Button, Divider } from \"@material-ui/core\";\r\nimport { ChevronLeft, ChevronRight, Today as CalendarIcon } from \"@material-ui/icons\";\r\nimport { DatePicker } from \"@material-ui/pickers\";\r\nimport { Type } from \"../Type/Type\";\r\nimport { MAXIMUM_DATE, MINIMUM_DATE } from \"../../constants\";\r\nimport { compareDate } from \"../../utils/compareDate/compareDate\";\r\n\r\nexport type IntervalPickerFormViewProps = {\r\n\tonConfirm?(): void;\r\n\r\n\tintervalString: string;\r\n\r\n\tisDay: boolean;\r\n\tisWeek: boolean;\r\n\tisMonth: boolean;\r\n\tisYear: boolean;\r\n\tisAll: boolean;\r\n\r\n\tonDay(): void;\r\n\tonWeek(): void;\r\n\tonMonth(): void;\r\n\tonYear(): void;\r\n\tonAll(): void;\r\n\r\n\tonPrevious(): void;\r\n\tonNext(): void;\r\n\r\n\tincludesToday: boolean;\r\n\r\n\tonNow(): void;\r\n\r\n\tstartDate: Date;\r\n\tendDate: Date;\r\n\r\n\tsetStartDate(value: Date): void;\r\n\tsetEndDate(value: Date): void;\r\n}\r\n\r\nexport function IntervalPickerFormView(props: IntervalPickerFormViewProps) {\r\n\treturn <div className=\"IntervalPickerForm\">\r\n\r\n\t\t<section className=\"title\">\r\n\r\n\t\t\t<div className=\"currentInterval\">\r\n\r\n\t\t\t\t<CalendarIcon />\r\n\r\n\t\t\t\t<Type>\r\n\t\t\t\t\t{props.intervalString}\r\n\t\t\t\t</Type>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"nextOrPreviousInterval\">\r\n\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tdisabled={props.isAll}\r\n\t\t\t\t\tonClick={props.onPrevious}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ChevronLeft />\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\tcolor={props.includesToday ? \"primary\" : \"default\"}\r\n\t\t\t\t\tonClick={props.onNow}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\"Now\"}\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<IconButton\r\n\t\t\t\t\tdisabled={props.isAll}\r\n\t\t\t\t\tonClick={props.onNext}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ChevronRight />\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</section>\r\n\r\n\t\t<Divider />\r\n\r\n\t\t<section className=\"intervalLength\">\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"text\"\r\n\t\t\t\tcolor={props.isDay ? \"primary\" : \"default\"}\r\n\t\t\t\tonClick={props.onDay}\r\n\t\t\t>\r\n\t\t\t\t{\"Day\"}\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"text\"\r\n\t\t\t\tcolor={props.isWeek ? \"primary\" : \"default\"}\r\n\t\t\t\tonClick={props.onWeek}\r\n\t\t\t>\r\n\t\t\t\t{\"Week\"}\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"text\"\r\n\t\t\t\tcolor={props.isMonth ? \"primary\" : \"default\"}\r\n\t\t\t\tonClick={props.onMonth}\r\n\t\t\t>\r\n\t\t\t\t{\"Month\"}\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"text\"\r\n\t\t\t\tcolor={props.isYear ? \"primary\" : \"default\"}\r\n\t\t\t\tonClick={props.onYear}\r\n\t\t\t>\r\n\t\t\t\t{\"Year\"}\r\n\t\t\t</Button>\r\n\r\n\t\t\t<Button\r\n\t\t\t\tvariant=\"text\"\r\n\t\t\t\tcolor={props.isAll ? \"primary\" : \"default\"}\r\n\t\t\t\tonClick={props.onAll}\r\n\t\t\t>\r\n\t\t\t\t{\"All\"}\r\n\t\t\t</Button>\r\n\r\n\t\t</section>\r\n\r\n\t\t<section className=\"dateSection\">\r\n\r\n\t\t\t<DatePicker\r\n\t\t\t\tvalue={compareDate(props.startDate, \"==\", MINIMUM_DATE) ? null : props.startDate}\r\n\t\t\t\tonChange={d => props.setStartDate(d as Date)}\r\n\t\t\t\tformat=\"dd/MM/yyyy\"\r\n\t\t\t\tinputVariant=\"outlined\"\r\n\t\t\t\tvariant=\"inline\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tlabel=\"From\"\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n\r\n\t\t</section>\r\n\r\n\t\t<section className=\"dateSection\">\r\n\r\n\t\t\t<DatePicker\r\n\t\t\t\tvalue={compareDate(props.endDate, \"==\", MAXIMUM_DATE) ? null : props.endDate}\r\n\t\t\t\tonChange={d => props.setEndDate(d as Date)}\r\n\t\t\t\tformat=\"dd/MM/yyyy\"\r\n\t\t\t\tinputVariant=\"outlined\"\r\n\t\t\t\tvariant=\"inline\"\r\n\t\t\t\tsize=\"small\"\r\n\t\t\t\tlabel=\"To\"\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n\r\n\t\t</section>\r\n\r\n\t\t{\r\n\t\t\tprops.onConfirm && <Button\r\n\t\t\t\tcolor=\"primary\"\r\n\t\t\t\tvariant=\"contained\"\r\n\t\t\t\tfullWidth\r\n\t\t\t\tonClick={props.onConfirm}\r\n\t\t\t>\r\n\t\t\t\t{\"Ok\"}\r\n\t\t\t</Button>\r\n\t\t}\r\n\r\n\t</div>\r\n}","import React from \"react\"\r\nimport { IntervalPickerFormView } from \"./IntervalPickerFormView\"\r\nimport { useStoreState, useStoreActions } from \"../../store\"\r\n\r\nexport type IntervalPickerFormProps = {\r\n\tonConfirm?(): void;\r\n}\r\n\r\nexport function IntervalPickerForm(props: IntervalPickerFormProps) {\r\n\r\n\tconst intervalString = useStoreState(_ => _.interval.smartDisplayString)\r\n\r\n\tconst isDay = useStoreState(_ => _.interval.isDay)\r\n\tconst isWeek = useStoreState(_ => _.interval.isWeek)\r\n\tconst isMonth = useStoreState(_ => _.interval.isMonth)\r\n\tconst isYear = useStoreState(_ => _.interval.isYear)\r\n\tconst isAll = useStoreState(_ => _.interval.isAll)\r\n\r\n\tconst toDay = useStoreActions(_ => _.interval.dayInterval)\r\n\tconst toWeek = useStoreActions(_ => _.interval.weekInterval)\r\n\tconst toMonth = useStoreActions(_ => _.interval.monthInterval)\r\n\tconst toYear = useStoreActions(_ => _.interval.yearInterval)\r\n\tconst toAll = useStoreActions(_ => _.interval.allInterval)\r\n\r\n\tconst previous = useStoreActions(_ => _.interval.previousInterval)\r\n\tconst next = useStoreActions(_ => _.interval.nextInterval)\r\n\r\n\tconst now = useStoreActions(_ => _.interval.now)\r\n\r\n\tconst includesToday = useStoreState(_ => _.interval.includesToday)\r\n\r\n\tconst startDate = useStoreState(_ => _.interval.startDate)\r\n\tconst endDate = useStoreState(_ => _.interval.endDate)\r\n\r\n\tconst setStartDate = useStoreActions(_ => _.interval.setStartDate)\r\n\tconst setEndDate = useStoreActions(_ => _.interval.setEndDate)\r\n\r\n\treturn <IntervalPickerFormView\r\n\r\n\t\tonConfirm={props.onConfirm}\r\n\r\n\t\tintervalString={intervalString}\r\n\r\n\t\tisDay={isDay}\r\n\t\tisWeek={isWeek}\r\n\t\tisMonth={isMonth}\r\n\t\tisYear={isYear}\r\n\t\tisAll={isAll}\r\n\r\n\t\tonDay={() => toDay()}\r\n\t\tonWeek={() => toWeek()}\r\n\t\tonMonth={() => toMonth()}\r\n\t\tonYear={() => toYear()}\r\n\t\tonAll={() => toAll()}\r\n\r\n\t\tonPrevious={() => previous()}\r\n\t\tonNext={() => next()}\r\n\r\n\t\tonNow={() => now()}\r\n\r\n\t\tincludesToday={includesToday}\r\n\r\n\t\tstartDate={startDate}\r\n\t\tendDate={endDate}\r\n\t\tsetStartDate={setStartDate}\r\n\t\tsetEndDate={setEndDate}\r\n\r\n\t/>\r\n}","import \"./FiltersPanel.scss\";\r\nimport React, { useState } from \"react\"\r\nimport { Today as CalendarIcon, Sort as FilterIcon, ChevronLeft, ChevronRight } from \"@material-ui/icons\"\r\nimport { Button, Drawer, IconButton, Menu, } from \"@material-ui/core\";\r\nimport { useLgMedia, useMdMedia } from \"../../hooks/useMedia\";\r\nimport { FiltersForm } from \"../FiltersForm/FiltersFormController\";\r\nimport { IntervalPickerForm } from \"../IntervalPickerForm/IntervalPickerFormController\";\r\n\r\nexport type FiltersPanelViewProps = {\r\n\tintervalString: string;\r\n\r\n\tisDay: boolean;\r\n\tisWeek: boolean;\r\n\tisMonth: boolean;\r\n\tisYear: boolean;\r\n\tisAll: boolean;\r\n\r\n\tonDay(): void;\r\n\tonWeek(): void;\r\n\tonMonth(): void;\r\n\tonYear(): void;\r\n\tonAll(): void;\r\n\r\n\tonPrevious(): void;\r\n\tonNext(): void;\r\n\r\n\tincludesToday: boolean;\r\n\tonNow(): void;\r\n}\r\n\r\nexport function FiltersPanelView(props: FiltersPanelViewProps) {\r\n\r\n\tconst [filtersFormDrawerOpen, setFiltersFormDrawerOpen] = useState(false)\r\n\r\n\tconst [intervalPickerMenuAnchor, setIntervalPickerMenuAnchor] = useState<HTMLElement>()\r\n\r\n\tconst mediumScreen = useMdMedia()\r\n\r\n\tconst largeScreen = useLgMedia()\r\n\r\n\treturn <>\r\n\r\n\t\t<Drawer\r\n\t\t\topen={filtersFormDrawerOpen}\r\n\t\t\tonClose={() => setFiltersFormDrawerOpen(false)}\r\n\t\t\tanchor={largeScreen ? \"right\" : \"bottom\"}\r\n\t\t>\r\n\t\t\t<div className=\"FiltersPanel_filtersFormDrawer\">\r\n\t\t\t\t<FiltersForm\r\n\t\t\t\t\tonConfirm={() => setFiltersFormDrawerOpen(false)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</Drawer>\r\n\r\n\t\t{\r\n\t\t\t/**\r\n\t\t\t * Render interval picker menu inside menu component\r\n\t\t\t * on larger screens and bottom drawer on smaller screens.\r\n\t\t\t */\r\n\t\t\tmediumScreen\r\n\t\t\t\t? <Menu\r\n\t\t\t\t\topen={!!intervalPickerMenuAnchor}\r\n\t\t\t\t\tonClose={() => setIntervalPickerMenuAnchor(undefined)}\r\n\t\t\t\t\tanchorEl={intervalPickerMenuAnchor}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"FiltersPanel_intervalPickerMenu\">\r\n\t\t\t\t\t\t<IntervalPickerForm\r\n\t\t\t\t\t\t\tonConfirm={() => setIntervalPickerMenuAnchor(undefined)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Menu>\r\n\t\t\t\t: <Drawer\r\n\t\t\t\t\topen={!!intervalPickerMenuAnchor}\r\n\t\t\t\t\tonClose={() => setIntervalPickerMenuAnchor(undefined)}\r\n\t\t\t\t\tanchor=\"bottom\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"FiltersPanel_intervalPickerDrawer\">\r\n\t\t\t\t\t\t<IntervalPickerForm\r\n\t\t\t\t\t\t\tonConfirm={() => setIntervalPickerMenuAnchor(undefined)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Drawer>\r\n\t\t}\r\n\r\n\r\n\r\n\t\t<div className=\"FiltersPanel\">\r\n\r\n\t\t\t<div className=\"floatLeft\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\tstartIcon={<CalendarIcon />}\r\n\t\t\t\t\tonClick={e => setIntervalPickerMenuAnchor(e.currentTarget)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{props.intervalString}\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"floatRight\">\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\tlargeScreen &&\r\n\t\t\t\t\t<div className=\"intervalLength\">\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tdisabled={props.isAll}\r\n\t\t\t\t\t\t\tonClick={props.onPrevious}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ChevronLeft />\r\n\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\tcolor={props.includesToday ? \"primary\" : \"default\"}\r\n\t\t\t\t\t\t\tonClick={props.onNow}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Now\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\tdisabled={props.isAll}\r\n\t\t\t\t\t\t\tonClick={props.onNext}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ChevronRight />\r\n\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\tcolor={props.isDay ? \"primary\" : \"default\"}\r\n\t\t\t\t\t\t\tonClick={props.onDay}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Day\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\tcolor={props.isWeek ? \"primary\" : \"default\"}\r\n\t\t\t\t\t\t\tonClick={props.onWeek}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Week\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\tcolor={props.isMonth ? \"primary\" : \"default\"}\r\n\t\t\t\t\t\t\tonClick={props.onMonth}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Month\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\tcolor={props.isYear ? \"primary\" : \"default\"}\r\n\t\t\t\t\t\t\tonClick={props.onYear}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Year\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\tcolor={props.isAll ? \"primary\" : \"default\"}\r\n\t\t\t\t\t\t\tonClick={props.onAll}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"All\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<div className=\"filtersButton\">\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant={largeScreen ? \"outlined\" : \"text\"}\r\n\t\t\t\t\t\tendIcon={<FilterIcon />}\r\n\t\t\t\t\t\tonClick={() => setFiltersFormDrawerOpen(true)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{\"Filters\"}\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\r\n\t</>\r\n}","import React from \"react\"\r\nimport { FiltersPanelView } from \"./FiltersPanelView\"\r\nimport { useStoreState, useStoreActions } from \"../../store\"\r\n\r\nexport type FiltersPanelProps = {\r\n}\r\n\r\nexport function FiltersPanel(props: FiltersPanelProps) {\r\n\r\n\tconst intervalString = useStoreState(_ => _.interval.smartDisplayString)\r\n\r\n\tconst isDay = useStoreState(_ => _.interval.isDay)\r\n\tconst isWeek = useStoreState(_ => _.interval.isWeek)\r\n\tconst isMonth = useStoreState(_ => _.interval.isMonth)\r\n\tconst isYear = useStoreState(_ => _.interval.isYear)\r\n\tconst isAll = useStoreState(_ => _.interval.isAll)\r\n\r\n\tconst toDay = useStoreActions(_ => _.interval.dayInterval)\r\n\tconst toWeek = useStoreActions(_ => _.interval.weekInterval)\r\n\tconst toMonth = useStoreActions(_ => _.interval.monthInterval)\r\n\tconst toYear = useStoreActions(_ => _.interval.yearInterval)\r\n\tconst toAll = useStoreActions(_ => _.interval.allInterval)\r\n\r\n\tconst previous = useStoreActions(_ => _.interval.previousInterval)\r\n\tconst next = useStoreActions(_ => _.interval.nextInterval)\r\n\r\n\tconst now = useStoreActions(_ => _.interval.now)\r\n\r\n\tconst includesToday = useStoreState(_ => _.interval.includesToday)\r\n\r\n\treturn <FiltersPanelView\r\n\r\n\t\tintervalString={intervalString}\r\n\r\n\t\tisDay={isDay}\r\n\t\tisWeek={isWeek}\r\n\t\tisMonth={isMonth}\r\n\t\tisYear={isYear}\r\n\t\tisAll={isAll}\r\n\r\n\t\tonDay={() => toDay()}\r\n\t\tonWeek={() => toWeek()}\r\n\t\tonMonth={() => toMonth()}\r\n\t\tonYear={() => toYear()}\r\n\t\tonAll={() => toAll()}\r\n\r\n\t\tonPrevious={() => previous()}\r\n\t\tonNext={() => next()}\r\n\r\n\t\tonNow={() => now()}\r\n\r\n\t\tincludesToday={includesToday}\r\n\r\n\t/>\r\n}","import \"./Dashboard.scss\"\r\nimport React from \"react\";\r\nimport { TransactionList } from \"../../components/TransactionList/TransactionListController\";\r\nimport { Auth } from \"../../classes/Auth\";\r\nimport { MoneyAmount } from \"../../classes/MoneyAmount\";\r\nimport { PageHeader } from \"../../components/PageHeader/PageHeader\";\r\nimport { MoneyType } from \"../../components/MoneyType/MoneyType\";\r\nimport { FiltersPanel } from \"../../components/FiltersPanel/FiltersPanelController\";\r\n\r\nexport type DashboardViewProps = {\r\n\tuser: Auth;\r\n\tintervalString: string;\r\n\r\n\tfilteredSum: MoneyAmount;\r\n\tfilteredIncomesSum: MoneyAmount;\r\n\tfilteredExpensesSum: MoneyAmount;\r\n}\r\n\r\nexport function DashboardView(props: DashboardViewProps) {\r\n\r\n\treturn <div className=\"Dashboard\">\r\n\r\n\t\t<PageHeader>\r\n\r\n\t\t\t<div className=\"totals\">\r\n\r\n\t\t\t\t<MoneyType\r\n\t\t\t\t\tamount={props.filteredSum}\r\n\t\t\t\t\tvariant=\"h4\"\r\n\t\t\t\t/>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</PageHeader>\r\n\r\n\t\t<section className=\"filtersPanel\">\r\n\r\n\t\t\t<FiltersPanel />\r\n\r\n\t\t</section>\r\n\r\n\t\t<section className=\"transactionsList\">\r\n\r\n\t\t\t<TransactionList />\r\n\r\n\t\t</section>\r\n\r\n\t</div>\r\n\r\n}","import React from \"react\"\r\nimport { DashboardView } from \"./DashboardView\"\r\nimport { useStoreState } from \"../../store\";\r\n\r\nexport function Dashboard() {\r\n\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\r\n\tconst smartDisplayString = useStoreState(_ => _.interval.smartDisplayString)\r\n\r\n\tconst filteredSums = useStoreState(_ => _.transactions.filtered.sums)\r\n\r\n\tif (!user) return null\r\n\r\n\treturn <DashboardView\r\n\r\n\t\tintervalString={smartDisplayString}\r\n\r\n\t\tfilteredSum={filteredSums.all}\r\n\t\tfilteredIncomesSum={filteredSums.incomes}\r\n\t\tfilteredExpensesSum={filteredSums.expenses}\r\n\r\n\t\tuser={user}\r\n\r\n\t/>\r\n}","import { Failure, Result, Success } from \"../Result/Result\";\r\n\r\nexport type FileIOFailure =\r\n  | null\r\n  | string\r\n  | ArrayBuffer\r\n  | ProgressEvent<FileReader>;\r\n\r\nexport type ReadFileAsArrayBufferResult = Result<ArrayBuffer, FileIOFailure>;\r\n\r\nexport type ReadFileAsTextResult = Result<string, FileIOFailure>;\r\n\r\nexport class FileIO {\r\n  static FileReaderFailure<T>(error: ProgressEvent<FileReader>) {\r\n    return new Failure<T, FileIOFailure>(error, {\r\n      code: \"file-io/file-reader-error\",\r\n      message: \"Error reading file\",\r\n      status: 10,\r\n    });\r\n  }\r\n\r\n  static FileReaderAbortedFailure<T>() {\r\n    return new Failure<T, FileIOFailure>(null, {\r\n      code: \"file-io/aborted\",\r\n      message: \"File read aborted\",\r\n      status: 10,\r\n    });\r\n  }\r\n\r\n  static FileReaderMissingTargetFailure<T>() {\r\n    return new Failure<T, FileIOFailure>(null, {\r\n      code: \"file-io/no-reader-event-target\",\r\n      message: \"Reader did not provide a target\",\r\n      status: 10,\r\n    });\r\n  }\r\n\r\n  static FileReaderInvalidTypeFailure<T>(value: string | ArrayBuffer | null) {\r\n    return new Failure<T, FileIOFailure>(value, {\r\n      code: \"file-io/invalid-type\",\r\n      message: \"Reader target result of invalid type\",\r\n      status: 10,\r\n    });\r\n  }\r\n\r\n  static MissingFileFailure<T>() {\r\n    return new Failure<T, FileIOFailure>(null, {\r\n      code: \"file-io/missing-file\",\r\n      message: \"File not found\",\r\n      status: 10,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a reader with error and abortion handling, given a\r\n   * onload callback and resolver function.\r\n   */\r\n  static createReader<T>(\r\n    resolve: (value: Result<T, FileIOFailure>) => void,\r\n    onload: (event: ProgressEvent<FileReader>) => void\r\n  ) {\r\n    const reader = new FileReader();\r\n\r\n    reader.onerror = (error) => {\r\n      resolve(FileIO.FileReaderFailure(error));\r\n    };\r\n\r\n    reader.onabort = () => {\r\n      resolve(FileIO.FileReaderAbortedFailure());\r\n    };\r\n\r\n    reader.onload = onload;\r\n\r\n    return reader;\r\n  }\r\n\r\n  /**\r\n   * Read file from HTML input element as ArrayBuffer\r\n   */\r\n  static async readFileAsArrayBuffer(input: HTMLInputElement) {\r\n    return new Promise<ReadFileAsArrayBufferResult>((resolve) => {\r\n      const file = input.files ? input.files[0] : undefined;\r\n\r\n      if (!file) {\r\n        return FileIO.MissingFileFailure();\r\n      }\r\n\r\n      const reader = FileIO.createReader(resolve, (event) => {\r\n        if (!event.target || event.target.result === null) {\r\n          resolve(FileIO.FileReaderMissingTargetFailure());\r\n        } else if (typeof event.target.result === \"string\") {\r\n          resolve(FileIO.FileReaderInvalidTypeFailure(event.target.result));\r\n        } else {\r\n          resolve(new Success(event.target.result));\r\n        }\r\n      });\r\n\r\n      reader.readAsArrayBuffer(file);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Read file from HTML input element as text\r\n   */\r\n  static async readFileAsText(input: HTMLInputElement) {\r\n    return new Promise<ReadFileAsTextResult>((resolve) => {\r\n      const file = input.files ? input.files[0] : undefined;\r\n\r\n      if (!file) {\r\n        return FileIO.MissingFileFailure();\r\n      }\r\n\r\n      const reader = FileIO.createReader(resolve, (event) => {\r\n        if (typeof event.target?.result === \"string\") {\r\n          resolve(new Success(event.target.result));\r\n        } else if (!event.target) {\r\n          resolve(FileIO.FileReaderMissingTargetFailure());\r\n        } else {\r\n          resolve(FileIO.FileReaderInvalidTypeFailure(event.target.result));\r\n        }\r\n      });\r\n\r\n      reader.readAsText(file);\r\n    });\r\n  }\r\n}\r\n","import * as yup from \"yup\";\r\nimport { JsonTransaction } from \"../../classes/Transaction\";\r\nimport { Spreadsheet } from \"./Spreadsheet\";\r\n\r\n/* eslint-disable no-useless-escape */\r\n\r\nexport type IOJsonTransaction = Pick<\r\n  JsonTransaction,\r\n  \"category\" | \"comment\" | \"integerAmount\" | \"time\"\r\n>;\r\n\r\nexport class TransactionSpreadsheet extends Spreadsheet<IOJsonTransaction> {\r\n  public schema = yup\r\n    .object<IOJsonTransaction>({\r\n      comment: yup.string(),\r\n      category: yup.string().defined().min(1),\r\n      integerAmount: yup.number().defined().integer(),\r\n      time: yup.number().defined().positive().integer(),\r\n    })\r\n    .defined();\r\n\r\n  public options = {\r\n    category: {\r\n      names: [\"Kategoria\", \"Category\", \"Class\", \"Luokka\"],\r\n    },\r\n    integerAmount: {\r\n      names: [\"Summa\", \"Sum\", \"Määrä\", \"Amount\"],\r\n      transformBeforeValidation: (value: any) => {\r\n        const string = String(value).replace(/[^\\d\\-\\.]/g, \"\");\r\n        const number = Number(string);\r\n        return Math.floor(number * 100);\r\n      },\r\n    },\r\n    time: {\r\n      names: [\"Aika\", \"Time\", \"Päiväys\", \"Päivä\", \"Päivämäärä\", \"Pvm\", \"Date\"],\r\n      transformBeforeValidation: (value: any) => {\r\n        const [day, month, year] = String(value).split(\".\");\r\n        const dd = day.padStart(0, \"2\");\r\n        const mm = month.padStart(0, \"2\");\r\n        const yyyy = year.padStart(0, \"4\");\r\n        const iso = [yyyy, mm, dd].join(\"-\");\r\n        return new Date(iso).getTime();\r\n      },\r\n    },\r\n    comment: {\r\n      names: [\r\n        \"Kommentti\",\r\n        \"Selite\",\r\n        \"Seloste\",\r\n        \"Lisätieto\",\r\n        \"Details\",\r\n        \"Comment\",\r\n        \"Explanation\",\r\n        \"Description\",\r\n      ],\r\n    },\r\n  };\r\n}\r\n","import XLSX from \"xlsx\";\r\nimport * as yup from \"yup\";\r\nimport { Failure, Result, Success } from \"../Result/Result\";\r\nimport { Try } from \"../Result/Try\";\r\nimport { FileIO } from \"./FileIO\";\r\n\r\nexport abstract class Spreadsheet<T extends object> {\r\n  public abstract schema: yup.ObjectSchema<T>;\r\n  public abstract options: {\r\n    [C in keyof T]: {\r\n      names: string[];\r\n      transformBeforeValidation?: (value: any) => any;\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Parses and validates a single row\r\n   */\r\n  private async parseRow(row: any) {\r\n    return Try(async () => {\r\n      if (typeof row !== \"object\" || !row) {\r\n        return new Failure(null, {\r\n          status: 10,\r\n          code: \"spreadsheet/invalid-row\",\r\n          message: \"Invalid row\",\r\n        });\r\n      }\r\n      try {\r\n        const transformed: { [C in keyof T]?: any } = {};\r\n        Object.keys(this.options).forEach((key) => {\r\n          const options = this.options[key as keyof T];\r\n          const columnKey = Object.keys(row).find((_) => {\r\n            return options.names\r\n              .map((_) => _.toLowerCase())\r\n              .includes(_.toLowerCase());\r\n          });\r\n          if (columnKey) {\r\n            const columnValue = row[columnKey];\r\n            transformed[key as keyof T] = options.transformBeforeValidation\r\n              ? options.transformBeforeValidation(columnValue)\r\n              : columnValue;\r\n          }\r\n        });\r\n        const validation = await this.schema.validate(transformed);\r\n        return Success.From(validation);\r\n      } catch (e) {\r\n        return new Failure(null, {\r\n          status: 10,\r\n          code: \"spreadsheet/error-parsing-row\",\r\n          message: \"Error parsing row\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Takes a HTML input (input) and reads a file from it. On file upload,\r\n   * parses the file to an arraybuffer, then an XLSX workbook, from which\r\n   * it parses all the rows to objects and returns all the succesfully\r\n   * parsed rows.\r\n   *\r\n   * @param input HTMLInputElement (with type of file)\r\n   */\r\n  readFile(\r\n    input: HTMLInputElement\r\n  ): Promise<Result<{ success: T[]; failed: number }, any>> {\r\n    return Try(async () => {\r\n      try {\r\n        /**\r\n         * Parse to array buffer\r\n         */\r\n        const arrayBuffer = await FileIO.readFileAsArrayBuffer(input);\r\n        if (arrayBuffer.isFailure()) {\r\n          return new Failure<{ success: T[]; failed: number }, any>(\r\n            arrayBuffer.value,\r\n            arrayBuffer.details\r\n          );\r\n        }\r\n\r\n        /**\r\n         * Read to JSON\r\n         */\r\n        const workbook = XLSX.read(arrayBuffer.value, { type: \"buffer\" });\r\n        const sheet = workbook.Sheets[workbook.SheetNames[0]];\r\n        const json = XLSX.utils.sheet_to_json(sheet, { raw: false });\r\n\r\n        /**\r\n         * Parse rows\r\n         */\r\n        const rowParsers = json.map((row) => this.parseRow(row));\r\n        const parsedRows = await Promise.all(rowParsers);\r\n        const succeededRows = Success.All(parsedRows);\r\n        const failedRows = Failure.All(parsedRows);\r\n\r\n        /**\r\n         * Warn on failed rows\r\n         */\r\n        if (failedRows.length > 0) {\r\n          console.warn(`Failed parsing ${failedRows.length} rows`);\r\n        }\r\n\r\n        /**\r\n         * Return succeeded rows and count of failed rows\r\n         */\r\n        return Success.From({\r\n          success: succeededRows.map((_) => _.value),\r\n          failed: failedRows.length,\r\n        });\r\n\r\n        /**\r\n         * Catch errors and return errors as failures\r\n         */\r\n      } catch (error) {\r\n        console.error(error);\r\n        return new Failure<{ success: T[]; failed: number }, any>(error, {\r\n          code: \"transaction-io/error\",\r\n          status: 10,\r\n          message: `An error occured while reading JSON transactions from file (${\r\n            error?.message ?? \"\"\r\n          })`,\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","import \"./FileUploader.scss\";\r\nimport React from \"react\"\r\nimport { Type } from \"../Type/Type\";\r\nimport { IOJsonTransaction } from \"../../utils/FileIO/TransactionSpreadsheet\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\n\r\nexport type FileUploaderViewProps = {\r\n\thandleFileUpload(e: React.ChangeEvent<HTMLInputElement>): Promise<void>;\r\n\thandleUpload(): Promise<void>;\r\n\tparsing: boolean;\r\n\tuploading: boolean;\r\n\tresult: undefined | null | { success: IOJsonTransaction[], failed: number };\r\n}\r\n\r\nexport function FileUploaderView(props: FileUploaderViewProps) {\r\n\r\n\treturn <div className=\"FileUploader\">\r\n\r\n\t\t<Type>\r\n\t\t\t{\"Tuo tiedostosta\"}\r\n\t\t</Type>\r\n\r\n\t\t<input type=\"file\" onChange={props.handleFileUpload} />\r\n\r\n\t\t{\r\n\t\t\tprops.parsing ? <>\r\n\t\t\t\t<Type>\r\n\t\t\t\t\t{\"Tiedostoa luetaan...\"}\r\n\t\t\t\t</Type>\r\n\t\t\t\t<CircularProgress />\r\n\t\t\t</> : null\r\n\t\t}\r\n\r\n\t\t{\r\n\t\t\tprops.result === null ? <>\r\n\t\t\t\t<Type>{\"Tiedostoa ei pystytty lukemaan\"}</Type>\r\n\t\t\t</> : props.result ? <>\r\n\t\t\t\t<Type>{\"Tiedosto luettu\"}</Type>\r\n\t\t\t\t<Type>{`Löytyi ${props.result.success.length + props.result.failed} tapahtumaa`}</Type>\r\n\t\t\t\t<Type color=\"error\">{`${props.result.failed} tapahtumaa epäonnistui`}</Type>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tdisabled={props.uploading}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tonClick={props.handleUpload}\r\n\t\t\t\t>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops.uploading ? <>\r\n\t\t\t\t\t\t\t{\"Tiedostoa ladataan...\"}\r\n\t\t\t\t\t\t\t<CircularProgress />\r\n\t\t\t\t\t\t</> : <>\r\n\t\t\t\t\t\t\t\t{\"Lataa tiedostot\"}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Button>\r\n\t\t\t</> : null\r\n\t\t}\r\n\r\n\r\n\t</div>\r\n}","import React, { useState } from \"react\"\r\nimport { IOJsonTransaction, TransactionSpreadsheet } from \"../../utils/FileIO/TransactionSpreadsheet\"\r\nimport { FileUploaderView } from \"./FileUploaderView\"\r\n\r\nexport type FileUploaderProps = {\r\n\r\n}\r\n\r\nexport function FileUploader(props: FileUploaderProps) {\r\n\r\n\tconst [result, setResult] = useState<undefined | null | { success: IOJsonTransaction[], failed: number }>()\r\n\tconst [parsing, setParsing] = useState(false)\r\n\tconst [uploading, setUploading] = useState(false)\r\n\r\n\tasync function handleFileUpload(e: React.ChangeEvent<HTMLInputElement>) {\r\n\t\tsetParsing(true)\r\n\t\tconst transactionSpreadsheet = new TransactionSpreadsheet()\r\n\t\tconst readResult = await transactionSpreadsheet.readFile(e.target)\r\n\t\tif (readResult.isSuccess()) {\r\n\t\t\tsetResult(readResult.value)\r\n\t\t} else {\r\n\t\t\tsetResult(null)\r\n\t\t}\r\n\t\tsetParsing(false)\r\n\t}\r\n\r\n\tasync function handleUpload() {\r\n\t\tsetUploading(true)\r\n\t\tsetUploading(false)\r\n\t}\r\n\r\n\treturn <FileUploaderView\r\n\t\thandleFileUpload={handleFileUpload}\r\n\t\thandleUpload={handleUpload}\r\n\t\tparsing={parsing}\r\n\t\tuploading={uploading}\r\n\t\tresult={result}\r\n\t/>\r\n}","import \"./Settings.scss\";\r\nimport React from \"react\"\r\nimport { Auth } from \"../../classes/Auth\";\r\nimport { Button, Drawer } from \"@material-ui/core\";\r\nimport { useSmMedia } from \"../../hooks/useMedia\";\r\nimport { FileUploader } from \"../../components/FileUploader/FileUploader\";\r\n\r\nexport type SettingsViewProps = {\r\n\tuser: Auth;\r\n\thandleLogout(): void;\r\n\tuploaderOpen: boolean;\r\n\tonUploaderClose(): void;\r\n\tonUploaderOpen(): void;\r\n}\r\n\r\nexport function SettingsView(props: SettingsViewProps) {\r\n\r\n\tconst desktopLayout = useSmMedia()\r\n\r\n\treturn <div className=\"Settings\">\r\n\r\n\t\t<Drawer\r\n\t\t\topen={props.uploaderOpen}\r\n\t\t\tonClose={props.onUploaderClose}\r\n\t\t\tanchor={desktopLayout ? \"left\" : \"bottom\"}\r\n\t\t>\r\n\t\t\t<FileUploader />\r\n\t\t</Drawer>\r\n\r\n\t\t{\r\n\t\t\tprops.user.photoUrl ? <img style={{ width: 64, height: 64 }} alt=\"profile\" src={props.user.photoUrl} /> : null\r\n\t\t}\r\n\r\n\t\t<table>\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Display name</td>\r\n\t\t\t\t\t<td>{props.user.displayName}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Email</td>\r\n\t\t\t\t\t<td>{props.user.email}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>ID</td>\r\n\t\t\t\t\t<td>{props.user.id}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Google ID</td>\r\n\t\t\t\t\t<td>{props.user.googleId}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\r\n\t\t<div>\r\n\t\t\t<button onClick={props.handleLogout}>Log out</button>\r\n\t\t</div>\r\n\r\n\t\t<div>\r\n\t\t\t<Button onClick={props.onUploaderOpen}>\r\n\t\t\t\t{\"Tuo tiedostosta\"}\r\n\t\t\t</Button>\r\n\t\t</div>\r\n\r\n\t</div>\r\n}","import React, { useState } from \"react\"\r\nimport { SettingsView } from \"./SettingsView\"\r\nimport { useStoreState, useStoreActions } from \"../../store\"\r\nimport { useRedirect } from \"../../hooks/useRedirect\"\r\n\r\nexport type SettingsProps = {\r\n\r\n}\r\n\r\nexport function Settings(props: SettingsProps) {\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\tconst logout = useStoreActions(_ => _.auth.logout)\r\n\r\n\tconst [uploaderOpen, setUploaderOpen] = useState(false)\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tasync function handleLogout() {\r\n\t\tconst result = await logout()\r\n\t\tresult.onSuccess(() => {\r\n\t\t\tredirect(_ => _.login)\r\n\t\t})\r\n\t}\r\n\r\n\tif (!user) return null\r\n\r\n\treturn <SettingsView\r\n\t\tuploaderOpen={uploaderOpen}\r\n\t\tonUploaderClose={() => setUploaderOpen(false)}\r\n\t\tonUploaderOpen={() => setUploaderOpen(true)}\r\n\t\tuser={user}\r\n\t\thandleLogout={handleLogout}\r\n\t/>\r\n}","import \"./Analytics.scss\";\r\nimport React from \"react\"\r\nimport { useStoreActions } from \"../../store\";\r\n\r\nexport type AnalyticsViewProps = {\r\n\r\n}\r\n\r\nexport function AnalyticsView(props: AnalyticsViewProps) {\r\n\r\n\tconst postTransaction = useStoreActions(_ => _.transactions.postTransaction)\r\n\r\n\tfunction handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n\r\n\t\tconsole.log(\"Handling change\")\r\n\r\n\t\tif (!e.target.files) throw new Error(\"No files array\")\r\n\r\n\t\tconst file = e.target.files[0]\r\n\r\n\t\tif (!file) throw new Error(\"No file\")\r\n\r\n\t\tconst reader = new FileReader();\r\n\r\n\t\treader.addEventListener('load', function (e) {\r\n\r\n\t\t\tif (!e.target) throw new Error(\"No load event target\")\r\n\r\n\t\t\tif (!e.target.result) throw new Error(\"Load event target result is null\")\r\n\r\n\t\t\tconst csvData = e.target.result.toString()\r\n\r\n\t\t\t// const result: Transaction[] = []\r\n\r\n\t\t\tconst rows = csvData.split(\"\\n\")\r\n\r\n\t\t\tfor (const row of rows) {\r\n\r\n\t\t\t\tif (row) {\r\n\r\n\t\t\t\t\tconst values = row.split(\";\")\r\n\r\n\t\t\t\t\tpostTransaction({\r\n\t\t\t\t\t\tcategory: values[1],\r\n\t\t\t\t\t\tcomment: values[3],\r\n\t\t\t\t\t\tintegerAmount: Number(values[2].replace(/[^\\d-]/g, '')),\r\n\t\t\t\t\t\ttime: new Date(values[0].split(\".\").reverse().map(_ => _.padStart(2, \"0\")).join(\"-\")).getTime(),\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t})\r\n\r\n\t\treader.readAsText(file)\r\n\r\n\t}\r\n\r\n\treturn <div className=\"Analytics\">\r\n\r\n\t\t<input type=\"file\" accept=\".csv\" onChange={handleChange} />\r\n\r\n\t</div>\r\n}","import React from \"react\"\r\nimport { AnalyticsView } from \"./AnalyticsView\"\r\n\r\nexport type AnalyticsProps = {\r\n\r\n}\r\n\r\nexport function Analytics(props: AnalyticsProps) {\r\n\treturn <AnalyticsView />\r\n}","import \"./ForgotPassword.scss\";\r\nimport React from \"react\"\r\nimport { ForgotPasswordFormType, forgotPasswordValidationSchema } from \"./ForgotPasswordController\";\r\nimport { TextField, Button, InputAdornment } from \"@material-ui/core\";\r\nimport { Email as EmailIcon } from \"@material-ui/icons\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { AuthFrame } from \"../../components/AuthFrame/AuthFrame\";\r\nimport { Type } from \"../../components/Type/Type\";\r\n\r\nexport type ForgotPasswordViewProps = {\r\n\thandleSubmit(values: ForgotPasswordFormType): Promise<void>;\r\n\thandleGoogleSubmit(): Promise<void>;\r\n\thandleLogin(): Promise<void>;\r\n\thandleCreateAccount(): Promise<void>;\r\n\tsuccess: boolean;\r\n\terror?: string;\r\n}\r\n\r\nexport function ForgotPasswordView(props: ForgotPasswordViewProps) {\r\n\r\n\t/**\r\n\t * React hook form\r\n\t */\r\n\tconst { register, handleSubmit, errors, formState, ...form } = useForm<ForgotPasswordFormType>({\r\n\t\tresolver: yupResolver(forgotPasswordValidationSchema),\r\n\t})\r\n\r\n\t/**\r\n\t * Email and password error shorthands for react hook form\r\n\t */\r\n\tconst emailError = formState.touched.email && errors.email?.message\r\n\r\n\treturn <div className=\"ForgotPassword\">\r\n\r\n\t\t<AuthFrame\r\n\r\n\t\t\theader=\"Forgot password\"\r\n\r\n\t\t\tbody={\r\n\t\t\t\tprops.success\r\n\t\t\t\t\t? <Type>\r\n\t\t\t\t\t\t{\"Recovery email sent. Check your email.\"}\r\n\t\t\t\t\t</Type>\r\n\t\t\t\t\t: <form noValidate onSubmit={handleSubmit(props.handleSubmit)}>\r\n\r\n\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t{\"Enter your email below and we will send you an email containing a link, which you can use to change your password.\"}\r\n\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"login-email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tinputRef={register}\r\n\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\terror={!!emailError}\r\n\t\t\t\t\t\t\thelperText={emailError}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<EmailIcon />\r\n\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Send recovery email\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprops.error\r\n\t\t\t\t\t\t\t\t? <Type color=\"error\">\r\n\t\t\t\t\t\t\t\t\t{props.error}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</form >\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfooter={\r\n\t\t\t\t<Button onClick={() => props.handleLogin()}>\r\n\t\t\t\t\t{\"Back\"}\r\n\t\t\t\t</Button>}\r\n\r\n\t\t/>\r\n\r\n\t</div >\r\n}","import React, { useState } from \"react\"\r\nimport { ForgotPasswordView } from \"./ForgotPasswordView\"\r\nimport * as yup from \"yup\";\r\nimport { useStoreActions } from \"../../store\";\r\nimport { useRedirect } from \"../../hooks/useRedirect\";\r\n\r\nexport const forgotPasswordValidationSchema = yup.object({\r\n\temail: yup.string().defined().min(3).max(255).email(),\r\n}).defined()\r\n\r\nexport type ForgotPasswordFormType = yup.InferType<typeof forgotPasswordValidationSchema>\r\n\r\nexport type ForgotPasswordProps = {\r\n\r\n}\r\n\r\nexport function ForgotPassword(props: ForgotPasswordProps) {\r\n\r\n\tconst [error, setError] = useState<string>()\r\n\r\n\tconst [success, setSuccess] = useState<boolean>(false)\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst forgotPassword = useStoreActions(_ => _.auth.forgotPassword)\r\n\tconst loginWithGoogle = useStoreActions(_ => _.auth.loginWithGoogle)\r\n\r\n\tasync function handleSubmit(values: ForgotPasswordFormType) {\r\n\t\tsetError(undefined)\r\n\t\tconst result = await forgotPassword(values)\r\n\t\tresult.onSuccess(() => setSuccess(true))\r\n\t\tresult.onFailure(failure => {\r\n\t\t\tswitch (failure.code) {\r\n\t\t\t\tcase \"data/invalid-request-data\":\r\n\t\t\t\t\tsetError(\"Invalid email or password.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/invalid-credentials\":\r\n\t\t\t\t\tsetError(\"Wrong password or the user does not have a password.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"auth/user-not-found\":\r\n\t\t\t\t\tsetError(\"No user exists with that email.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"server/unavailable\":\r\n\t\t\t\t\tsetError(\"Could not contact server. Try again later.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.warn(\"Uncaught error code in login:\", failure)\r\n\t\t\t\t\tsetError(\"An error occured while logging in. Try again.\")\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tasync function handleLogin() {\r\n\t\tredirect(_ => _.login)\r\n\t}\r\n\r\n\tasync function handleCreateAccount() {\r\n\t\tredirect(_ => _.register)\r\n\t}\r\n\r\n\tasync function handleGoogleSubmit() {\r\n\t\tloginWithGoogle()\r\n\t}\r\n\r\n\treturn <ForgotPasswordView {...{\r\n\t\thandleSubmit,\r\n\t\thandleCreateAccount,\r\n\t\thandleGoogleSubmit,\r\n\t\thandleLogin,\r\n\t\tsuccess,\r\n\t\terror\r\n\t}} />\r\n}","import \"./TransactionForm.scss\";\r\nimport React from \"react\"\r\nimport { TextField, InputAdornment, Button } from \"@material-ui/core\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { Type } from \"../Type/Type\";\r\n\r\nexport type TransactionFormViewProps = {\r\n\r\n\tonSubmit(): Promise<void>;\r\n\r\n\t/**\r\n\t * Form state\r\n\t */\r\n\tamount: string;\r\n\tcategory: string;\r\n\ttime: Date;\r\n\tcomment: string;\r\n\r\n\t/**\r\n\t * Form change handlers\r\n\t */\r\n\tonAmountChange(value: string): void;\r\n\tonCategoryChange(value: string): void;\r\n\tonTimeChange(value: Date): void;\r\n\tonCommentChange(value: string): void;\r\n\r\n\t/**\r\n\t * Form errors\r\n\t */\r\n\terrors: {\r\n\t\tmain?: string;\r\n\t\tamount?: string;\r\n\t\tcategory?: string;\r\n\t\ttime?: string;\r\n\t\tcomment?: string;\r\n\t};\r\n\r\n\tcategories: string[];\r\n\r\n}\r\n\r\nexport function TransactionFormView(props: TransactionFormViewProps) {\r\n\r\n\tfunction handleSubmit(e: React.FormEvent) {\r\n\t\te.preventDefault()\r\n\t\tprops.onSubmit()\r\n\t}\r\n\r\n\treturn <form className=\"TransactionForm\" onSubmit={handleSubmit}>\r\n\r\n\t\t<Type variant=\"button\">\r\n\t\t\t{\"New transaction\"}\r\n\t\t</Type>\r\n\r\n\t\t<TextField\r\n\t\t\tvalue={props.amount}\r\n\t\t\tonChange={e => props.onAmountChange(e.target.value)}\r\n\t\t\tid=\"transaction-amount\"\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tname=\"amount\"\r\n\t\t\ttype=\"numeric\"\r\n\t\t\tlabel=\"Amount\"\r\n\t\t\terror={!!props.errors.amount}\r\n\t\t\thelperText={props.errors.amount}\r\n\t\t\tfullWidth\r\n\t\t\trequired\r\n\t\t\tsize=\"small\"\r\n\t\t\tInputProps={{\r\n\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t{\"EUR\"}\r\n\t\t\t\t\t</Type>\r\n\t\t\t\t</InputAdornment>\r\n\t\t\t}}\r\n\t\t/>\r\n\r\n\t\t<Autocomplete\r\n\t\t\tvalue={props.category}\r\n\t\t\tonChange={(e, v) => props.onCategoryChange(v)}\r\n\t\t\tid=\"transaction-category\"\r\n\t\t\tfreeSolo\r\n\t\t\topenOnFocus\r\n\t\t\tautoHighlight\r\n\t\t\tselectOnFocus\r\n\t\t\tdisableClearable\r\n\t\t\tfullWidth\r\n\t\t\tsize=\"small\"\r\n\t\t\toptions={props.categories}\r\n\t\t\trenderInput={(params) => (\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tname=\"category\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tlabel=\"Category\"\r\n\t\t\t\t\terror={!!props.errors.category}\r\n\t\t\t\t\thelperText={props.errors.category}\r\n\t\t\t\t\trequired\r\n\t\t\t\t\t{...params}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t/>\r\n\r\n\t\t<KeyboardDatePicker\r\n\t\t\tvalue={props.time}\r\n\t\t\tonChange={d => props.onTimeChange(d as Date)}\r\n\t\t\tformat=\"dd/MM/yyyy\"\r\n\t\t\tid=\"transaction-time\"\r\n\t\t\tvariant=\"inline\"\r\n\t\t\tinputVariant=\"outlined\"\r\n\t\t\tlabel=\"Date\"\r\n\t\t\terror={!!props.errors.time}\r\n\t\t\thelperText={props.errors.time}\r\n\t\t\tfullWidth\r\n\t\t\trequired\r\n\t\t\tsize=\"small\"\r\n\t\t/>\r\n\r\n\t\t<TextField\r\n\t\t\tvalue={props.comment}\r\n\t\t\tonChange={e => props.onCommentChange(e.target.value)}\r\n\t\t\tid=\"transaction-comment\"\r\n\t\t\tvariant=\"outlined\"\r\n\t\t\tname=\"comment\"\r\n\t\t\ttype=\"text\"\r\n\t\t\tlabel=\"Comment\"\r\n\t\t\terror={!!props.errors.comment}\r\n\t\t\thelperText={props.errors.comment}\r\n\t\t\tfullWidth\r\n\t\t\tsize=\"small\"\r\n\t\t/>\r\n\r\n\t\t<Button\r\n\t\t\ttype=\"submit\"\r\n\t\t\tcolor=\"primary\"\r\n\t\t\tvariant=\"contained\"\r\n\t\t\tsize=\"small\"\r\n\t\t>\r\n\t\t\t{\"Create\"}\r\n\t\t</Button>\r\n\r\n\t</form>\r\n}","import React, { useState } from \"react\"\r\nimport { TransactionFormView } from \"./TransactionFormView\"\r\nimport { useStoreActions, useStoreState } from \"../../store\"\r\n\r\nexport type TransactionFormProps = {\r\n\r\n}\r\n\r\nexport function TransactionForm(props: TransactionFormProps) {\r\n\r\n\tconst categories = useStoreState(_ => _.transactions.categories)\r\n\r\n\tconst postTransaction = useStoreActions(_ => _.transactions.postTransaction)\r\n\r\n\t/**\r\n\t * Input state\r\n\t */\r\n\tconst [amount, setAmount] = useState<string>(\"\")\r\n\tconst [category, setCategory] = useState<string>(\"\")\r\n\tconst [time, setTime] = useState<Date>(new Date())\r\n\tconst [comment, setComment] = useState<string>(\"\")\r\n\r\n\t/**\r\n\t * Error state\r\n\t */\r\n\tconst [error, setError] = useState<string>()\r\n\tconst [amountError, setAmountError] = useState<string>()\r\n\tconst [categoryError, setCategoryError] = useState<string>()\r\n\tconst [timeError, setTimeError] = useState<string>()\r\n\tconst [commentError, setCommentError] = useState<string>()\r\n\r\n\t/**\r\n\t * Validators\r\n\t */\r\n\tfunction validateAmount(): string | undefined {\r\n\t\t/* eslint-disable-next-line no-useless-escape */\r\n\t\tconst valid = /^-?\\d*[\\.,]?\\d{0,2}$/.test(amount.trim())\r\n\t\tif (!valid) return \"Invalid number\"\r\n\t\treturn undefined\r\n\t}\r\n\r\n\tfunction validateCategory(): string | undefined {\r\n\t\tconst valid = /[A-Za-z\\d\\-_\\s]+/.test(category.trim())\r\n\t\tconst empty = category.trim() === \"\"\r\n\t\tif (!valid) return \"Invalid category, do not use any special characters\"\r\n\t\tif (empty) return \"Please enter a cetegory\"\r\n\t\treturn undefined\r\n\t}\r\n\r\n\tfunction validateTime(): string | undefined {\r\n\t\tconst valid = time.getTime() > 0 && !isNaN(time.getTime())\r\n\t\tif (!valid) return \"Invalid date\"\r\n\t\treturn undefined\r\n\t}\r\n\r\n\tfunction validateComment(): string | undefined {\r\n\t\treturn undefined\r\n\t}\r\n\r\n\t/**\r\n\t * Full validation\r\n\t */\r\n\tfunction validateForm(): boolean {\r\n\t\tconst amountValidationError = validateAmount()\r\n\t\tconst categoryValidationError = validateCategory()\r\n\t\tconst timeValidationError = validateTime()\r\n\t\tconst commentValidationError = validateComment()\r\n\r\n\t\tsetAmountError(amountValidationError)\r\n\t\tsetCategoryError(categoryValidationError)\r\n\t\tsetTimeError(timeValidationError)\r\n\t\tsetCommentError(commentValidationError)\r\n\r\n\t\tif (\r\n\t\t\t!amountValidationError &&\r\n\t\t\t!categoryValidationError &&\r\n\t\t\t!timeValidationError &&\r\n\t\t\t!commentValidationError\r\n\t\t) {\r\n\t\t\treturn true\r\n\t\t}\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\t/**\r\n\t * Handle form submission\r\n\t */\r\n\tasync function handleSubmit() {\r\n\t\tconst formValid = validateForm()\r\n\t\tif (formValid) {\r\n\t\t\tconst result = await postTransaction({\r\n\t\t\t\tintegerAmount: Math.trunc(Number(amount.trim().replace(/,/g, '.')) * 100),\r\n\t\t\t\tcategory: category.trim(),\r\n\t\t\t\ttime: time.getTime(),\r\n\t\t\t\tcomment: comment.trim(),\r\n\t\t\t})\r\n\t\t\tresult.onSuccess(() => {\r\n\t\t\t\tsetAmount(\"\")\r\n\t\t\t\tsetCategory(\"\")\r\n\t\t\t\tsetTime(new Date())\r\n\t\t\t\tsetComment(\"\")\r\n\t\t\t})\r\n\t\t\tresult.onFailure((failure: any) => {\r\n\t\t\t\tswitch (failure.code) {\r\n\t\t\t\t\tcase \"data/invalid-request-data\":\r\n\t\t\t\t\t\tif (failure.data?.errors?.integerAmount) {\r\n\t\t\t\t\t\t\tsetAmountError(String(failure.data.errors.integerAmount))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (failure.data?.errors?.category) {\r\n\t\t\t\t\t\t\tsetCategoryError(String(failure.data.errors.category))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (failure.data?.errors?.comment) {\r\n\t\t\t\t\t\t\tsetCommentError(String(failure.data.errors.comment))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (failure.data?.errors?.time) {\r\n\t\t\t\t\t\t\tsetTimeError(String(failure.data.errors.time))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (failure.data?.errors?._root) {\r\n\t\t\t\t\t\t\tsetError(failure.data.errors._root)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (failure.data?.errors?.id) {\r\n\t\t\t\t\t\t\tsetError(failure.data.errors.id)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (failure.data?.errors?.uid) {\r\n\t\t\t\t\t\t\tsetError(failure.data.errors.uid)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"transaction/already-exists\":\r\n\t\t\t\t\t\tsetError(\"Could not post transaction due to overlapping IDs\")\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"server/unavailable\":\r\n\t\t\t\t\t\tsetError(\"Could not react server. Try again later.\")\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.warn(\"Uncaught failure\", failure)\r\n\t\t\t\t\t\tsetError(\"Error posting transaction.\")\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn <TransactionFormView\r\n\t\tonSubmit={handleSubmit}\r\n\t\tamount={amount}\r\n\t\tcategory={category}\r\n\t\ttime={time}\r\n\t\tcomment={comment}\r\n\t\tonAmountChange={value => setAmount(value)}\r\n\t\tonCategoryChange={value => setCategory(value)}\r\n\t\tonTimeChange={value => setTime(value)}\r\n\t\tonCommentChange={value => setComment(value)}\r\n\t\terrors={{\r\n\t\t\tmain: error,\r\n\t\t\tamount: amountError,\r\n\t\t\tcategory: categoryError,\r\n\t\t\ttime: timeError,\r\n\t\t\tcomment: commentError,\r\n\t\t}}\r\n\t\tcategories={categories}\r\n\t/>\r\n}","import \"./Sidebar.scss\";\r\nimport React from \"react\"\r\nimport { Auth } from \"../../classes/Auth\";\r\nimport { IconButton, Button, Drawer } from \"@material-ui/core\";\r\nimport {\r\n\tHome as DashboardIcon,\r\n\tBarChart2 as AnalyticsIcon,\r\n\tUser as UserIcon,\r\n\tSettings as SettingsIcon,\r\n\tBriefcase as BudgetIcon,\r\n\tLogOut as LogoutIcon,\r\n\tPlus as PlusIcon\r\n} from \"react-feather\"\r\nimport cx from \"classnames\"\r\nimport { TransactionForm } from \"../../components/TransactionForm/TransactionFormController\";\r\nimport { useSmMedia } from \"../../hooks/useMedia\";\r\nimport { Type } from \"../../components/Type/Type\";\r\n\r\nexport type SidebarViewProps = {\r\n\tisDashboard: boolean;\r\n\tonDashboard(): void;\r\n\r\n\tisAnalytics: boolean;\r\n\tonAnalytics(): void;\r\n\r\n\tisBudget: boolean;\r\n\tonBudget(): void;\r\n\r\n\tisSettings: boolean;\r\n\tonSettings(): void;\r\n\r\n\tuser: Auth;\r\n\tlogout(): void;\r\n\r\n\ttransactionFormOpen: boolean;\r\n\tonTransactionFormOpen(): void;\r\n\tonTransactionFormClose(): void;\r\n}\r\n\r\nexport function SidebarView(props: SidebarViewProps) {\r\n\r\n\tconst sidebarView = useSmMedia()\r\n\r\n\treturn <>\r\n\r\n\t\t<Drawer\r\n\t\t\topen={props.transactionFormOpen}\r\n\t\t\tonClose={props.onTransactionFormClose}\r\n\t\t\tanchor={sidebarView ? \"left\" : \"bottom\"}\r\n\t\t>\r\n\t\t\t<TransactionForm />\r\n\t\t</Drawer>\r\n\r\n\t\t<div className=\"Sidebar\">\r\n\r\n\t\t\t{\r\n\r\n\t\t\t\tsidebarView\r\n\r\n\t\t\t\t\t? <div className=\"sidebar\">\r\n\r\n\t\t\t\t\t\t<div className=\"header\">\r\n\r\n\t\t\t\t\t\t\t<div className=\"top-row\">\r\n\r\n\t\t\t\t\t\t\t\t<Type variant=\"h4\" component=\"h6\">\r\n\t\t\t\t\t\t\t\t\t{\"Expence\"}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t\t\t<IconButton onClick={props.logout}>\r\n\t\t\t\t\t\t\t\t\t<LogoutIcon />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"bottom-row\">\r\n\r\n\t\t\t\t\t\t\t\t<UserIcon />\r\n\r\n\t\t\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t\t\t{props.user.displayName}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"body\">\r\n\r\n\t\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isDashboard })}\r\n\t\t\t\t\t\t\t\t\tonClick={props.onDashboard}\r\n\t\t\t\t\t\t\t\t\tstartIcon={<DashboardIcon />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\"Dashboard\"}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isAnalytics })}\r\n\t\t\t\t\t\t\t\t\tonClick={props.onAnalytics}\r\n\t\t\t\t\t\t\t\t\tstartIcon={<AnalyticsIcon />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\"Analytics\"}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isBudget })}\r\n\t\t\t\t\t\t\t\t\tonClick={props.onBudget}\r\n\t\t\t\t\t\t\t\t\tstartIcon={<BudgetIcon />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\"Budget\"}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isSettings })}\r\n\t\t\t\t\t\t\t\t\tonClick={props.onSettings}\r\n\t\t\t\t\t\t\t\t\tstartIcon={<SettingsIcon />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\"Settings\"}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className=\"tabContainer addButton\">\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"text\"\r\n\t\t\t\t\t\t\t\t\tclassName={cx(\"tab\")}\r\n\t\t\t\t\t\t\t\t\tonClick={props.onTransactionFormOpen}\r\n\t\t\t\t\t\t\t\t\tstartIcon={<PlusIcon />}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{\"New transaction\"}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t: <div className=\"tabs\">\r\n\r\n\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isDashboard })}\r\n\t\t\t\t\t\t\t\tonClick={props.onDashboard}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<DashboardIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isAnalytics })}\r\n\t\t\t\t\t\t\t\tonClick={props.onAnalytics}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<AnalyticsIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={cx(\"tab\")}\r\n\t\t\t\t\t\t\t\tonClick={props.onTransactionFormOpen}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<PlusIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isBudget })}\r\n\t\t\t\t\t\t\t\tonClick={props.onBudget}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<BudgetIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"tabContainer\">\r\n\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tclassName={cx(\"tab\", { active: props.isSettings })}\r\n\t\t\t\t\t\t\t\tonClick={props.onSettings}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<SettingsIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n\r\n\t</>\r\n}","import React, { useState } from \"react\"\r\nimport { SidebarView } from \"./SidebarView\"\r\nimport { useRouteMatch } from \"react-router-dom\"\r\nimport { routes } from \"../../Routes\"\r\nimport { useRedirect } from \"../../hooks/useRedirect\"\r\nimport { useStoreState, useStoreActions } from \"../../store\"\r\n\r\nexport type SidebarProps = {\r\n\r\n}\r\n\r\nexport function Sidebar(props: SidebarProps) {\r\n\r\n\tconst dashboardMatch = useRouteMatch(routes.dashboard)\r\n\tconst analyticsMatch = useRouteMatch(routes.analytics)\r\n\tconst budgetMatch = useRouteMatch(routes.budget)\r\n\tconst settingsMatch = useRouteMatch(routes.settings)\r\n\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\r\n\tconst logout = useStoreActions(_ => _.auth.logout)\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst [transactionFormOpen, setTransactionFormOpen] = useState(false)\r\n\r\n\tif (!user) return null\r\n\r\n\treturn <SidebarView\r\n\r\n\t\tisDashboard={!!dashboardMatch}\r\n\t\tonDashboard={() => redirect(routes.dashboard)}\r\n\r\n\t\tisAnalytics={!!analyticsMatch}\r\n\t\tonAnalytics={() => redirect(routes.analytics)}\r\n\r\n\t\tisBudget={!!budgetMatch}\r\n\t\tonBudget={() => redirect(routes.budget)}\r\n\r\n\t\tisSettings={!!settingsMatch}\r\n\t\tonSettings={() => redirect(routes.settings)}\r\n\r\n\t\tuser={user}\r\n\t\tlogout={() => logout()}\r\n\r\n\t\ttransactionFormOpen={transactionFormOpen}\r\n\t\tonTransactionFormOpen={() => setTransactionFormOpen(true)}\r\n\t\tonTransactionFormClose={() => setTransactionFormOpen(false)}\r\n\r\n\t/>\r\n}","import \"./AppFrame.scss\";\r\nimport React from \"react\"\r\nimport { Sidebar } from \"../Sidebar/SidebarController\";\r\n\r\nexport type AppFrameViewProps = {\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nexport function AppFrameView(props: AppFrameViewProps) {\r\n\treturn <div className=\"AppFrame\">\r\n\t\t<div className=\"sidebar\">\r\n\t\t\t<Sidebar />\r\n\t\t</div>\r\n\t\t<div className=\"content\">\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t</div>\r\n}","import React from \"react\"\r\nimport { AppFrameView } from \"./AppFrameView\"\r\n\r\nexport type AppFrameProps = {\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nexport function AppFrame(props: AppFrameProps) {\r\n\treturn <AppFrameView children={props.children} />\r\n}","import \"./ChangePassword.scss\";\r\nimport React, { useState } from \"react\"\r\nimport { AuthFrame } from \"../../components/AuthFrame/AuthFrame\";\r\nimport { ChangePasswordFormType, changePasswordValidationSchema } from \"./ChangePasswordController\";\r\nimport { Type } from \"../../components/Type/Type\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { TextField, InputAdornment, IconButton, Button, CircularProgress } from \"@material-ui/core\";\r\nimport {\r\n\tVisibility as PasswordVisibleIcon,\r\n\tVisibilityOff as PasswordInvisibleIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nexport type ChangePasswordViewProps = {\r\n\r\n\tvalidTokenEmail: string | undefined | null;\r\n\r\n\tloading: boolean;\r\n\r\n\tpasswordChangeSuccessful: boolean;\r\n\r\n\terror?: string;\r\n\r\n\tonSubmit(values: ChangePasswordFormType): void;\r\n\r\n\tonLogin(): void;\r\n\r\n}\r\n\r\nexport function ChangePasswordView(props: ChangePasswordViewProps) {\r\n\r\n\t/**\r\n\t * Password visible state\r\n\t */\r\n\tconst [passwordVisible, setPasswordVisible] = useState(false)\r\n\r\n\t/**\r\n\t * React hook form\r\n\t */\r\n\tconst form = useForm<ChangePasswordFormType>({\r\n\t\tresolver: yupResolver(changePasswordValidationSchema),\r\n\t})\r\n\r\n\t/**\r\n\t * Email and password error shorthands for react hook form\r\n\t */\r\n\tconst passwordError = form.formState.touched.password && form.errors.password?.message\r\n\r\n\treturn <div className=\"ChangePassword\">\r\n\r\n\t\t<AuthFrame\r\n\r\n\t\t\theader=\"Change password\"\r\n\r\n\t\t\tbody={(() => {\r\n\r\n\t\t\t\tif (props.loading) {\r\n\r\n\t\t\t\t\treturn <CircularProgress />\r\n\r\n\t\t\t\t} else if (!props.validTokenEmail) {\r\n\r\n\t\t\t\t\treturn <>\r\n\r\n\t\t\t\t\t\t<Type color=\"error\">\r\n\t\t\t\t\t\t\t{\"Invalid password change link\"}\r\n\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={props.onLogin}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Back to login\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t</>\r\n\r\n\t\t\t\t} else if (props.passwordChangeSuccessful) {\r\n\r\n\t\t\t\t\treturn <>\r\n\r\n\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t{\"Password changed for \" + props.validTokenEmail}\r\n\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tonClick={props.onLogin}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Login\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t</>\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn <form onSubmit={form.handleSubmit(props.onSubmit)}>\r\n\r\n\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t{\"Enter a new password for \" + props.validTokenEmail}\r\n\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tid=\"change-password\"\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\ttype={passwordVisible ? \"text\" : \"password\"}\r\n\t\t\t\t\t\t\tinputRef={form.register}\r\n\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\terror={!!passwordError}\r\n\t\t\t\t\t\t\thelperText={passwordError}\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t<IconButton onClick={() => setPasswordVisible(_ => !_)} size=\"small\">\r\n\t\t\t\t\t\t\t\t\t\t{passwordVisible ? <PasswordVisibleIcon /> : <PasswordInvisibleIcon />}\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</InputAdornment>,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\"Change password\"}\r\n\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprops.error ?\r\n\t\t\t\t\t\t\t\t<Type color=\"error\">\r\n\t\t\t\t\t\t\t\t\t{props.error}\r\n\t\t\t\t\t\t\t\t</Type>\r\n\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</form>\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t})()}\r\n\r\n\t\t/>\r\n\r\n\t</div>\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { ChangePasswordView } from \"./ChangePasswordView\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useRedirect } from \"../../hooks/useRedirect\"\r\nimport * as yup from \"yup\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport const changePasswordValidationSchema = yup.object({\r\n\tpassword: yup.string().defined().min(6).max(255),\r\n}).defined()\r\n\r\nexport type ChangePasswordFormType = yup.InferType<typeof changePasswordValidationSchema>\r\n\r\nexport type ChangePasswordProps = {\r\n\r\n}\r\n\r\nexport function ChangePassword(props: ChangePasswordProps) {\r\n\r\n\tconst { token } = useParams<{ token?: string }>()\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst validateChangePasswordToken = useStoreActions(_ => _.auth.validateChangePasswordToken)\r\n\tconst changePassword = useStoreActions(_ => _.auth.changePassword)\r\n\r\n\t/**\r\n\t * Result from server whether the token is valid: for a valid\r\n\t * token the server will return the user's email, which is stored\r\n\t * here as a string to signal a valid token.\r\n\t * \r\n\t * We use null to signal an invalid token, when the server responds\r\n\t * with an error and undefined to signal a loading state.\r\n\t */\r\n\tconst [validTokenEmail, setValidTokenEmail] = useState<string | null | undefined>()\r\n\r\n\tconst [passwordChangeSuccessful, setPasswordChangeSuccessful] = useState(false)\r\n\r\n\tconst [error, setError] = useState<string>()\r\n\r\n\t/**\r\n\t * Initially loading the token validity state from the server\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tif (token) {\r\n\t\t\tvalidateChangePasswordToken({ token }).then(result => {\r\n\t\t\t\tresult.onSuccess((value) => {\r\n\t\t\t\t\tsetValidTokenEmail(value)\r\n\t\t\t\t})\r\n\t\t\t\tresult.onFailure(() => {\r\n\t\t\t\t\tsetValidTokenEmail(null)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}, []) // eslint-disable-line\r\n\r\n\t/**\r\n\t * If no token is present, automatically redirect the user\r\n\t */\r\n\tif (!token) {\r\n\t\tredirect(_ => _.login)\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Handle submitting\r\n\t */\r\n\tfunction handleSubmit(values: ChangePasswordFormType) {\r\n\t\tif (token) {\r\n\t\t\tchangePassword({ ...values, token }).then(result => {\r\n\t\t\t\tresult.onSuccess(() => {\r\n\t\t\t\t\tsetPasswordChangeSuccessful(true)\r\n\t\t\t\t})\r\n\t\t\t\tresult.onFailure(() => {\r\n\t\t\t\t\tsetError(\"Could not change password\")\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn <ChangePasswordView\r\n\r\n\t\tvalidTokenEmail={validTokenEmail}\r\n\r\n\t\tloading={validTokenEmail === undefined}\r\n\r\n\t\tpasswordChangeSuccessful={passwordChangeSuccessful}\r\n\r\n\t\tonSubmit={handleSubmit}\r\n\r\n\t\tonLogin={() => redirect(_ => _.login)}\r\n\r\n\t\terror={error}\r\n\r\n\t/>\r\n}","import \"./ConfirmEmail.scss\";\r\nimport React from \"react\"\r\nimport { AuthFrame } from \"../../components/AuthFrame/AuthFrame\";\r\nimport { Type } from \"../../components/Type/Type\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\n\r\nexport type ConfirmEmailViewProps = {\r\n\tsuccess: undefined | boolean;\r\n\tonLogin(): void;\r\n}\r\n\r\nexport function ConfirmEmailView(props: ConfirmEmailViewProps) {\r\n\r\n\treturn <div className=\"ConfirmEmail\">\r\n\r\n\t\t<AuthFrame\r\n\r\n\t\t\theader=\"Change password\"\r\n\r\n\t\t\tbody={(() => {\r\n\r\n\t\t\t\tswitch (props.success) {\r\n\r\n\t\t\t\t\tcase undefined:\r\n\r\n\t\t\t\t\t\treturn <CircularProgress />\r\n\r\n\t\t\t\t\tcase false:\r\n\r\n\t\t\t\t\t\treturn <>\r\n\r\n\t\t\t\t\t\t\t<Type color=\"error\">\r\n\t\t\t\t\t\t\t\t{\"Invalid password change link\"}\r\n\t\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={props.onLogin}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{\"Back to login\"}\r\n\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t\tcase true:\r\n\r\n\t\t\t\t\t\treturn <>\r\n\r\n\t\t\t\t\t\t\t<Type>\r\n\t\t\t\t\t\t\t\t{\"Email succesfully confirmed\"}\r\n\t\t\t\t\t\t\t</Type>\r\n\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\tonClick={props.onLogin}\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{\"Login\"}\r\n\t\t\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t\t</>\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t})()}\r\n\r\n\t\t/>\r\n\r\n\t</div>\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { ConfirmEmailView } from \"./ConfirmEmailView\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useRedirect } from \"../../hooks/useRedirect\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport type ConfirmEmailProps = {\r\n\r\n}\r\n\r\nexport function ConfirmEmail(props: ConfirmEmailProps) {\r\n\r\n\tconst { token } = useParams<{ token?: string }>()\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst confirmEmail = useStoreActions(_ => _.auth.confirmEmail)\r\n\r\n\t/**\r\n\t * Boolean for whether confirmation was successful or not: undefined\r\n\t * signals a loading value\r\n\t */\r\n\tconst [success, setSuccess] = useState<boolean>()\r\n\r\n\t/**\r\n\t * Initially loading the token validity state from the server\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tif (token) {\r\n\t\t\tconfirmEmail({ token }).then(result => {\r\n\t\t\t\tsetSuccess(result.isSuccess())\r\n\t\t\t})\r\n\t\t}\r\n\t}, []) // eslint-disable-line\r\n\r\n\t/**\r\n\t * If no token is present, automatically redirect the user\r\n\t */\r\n\tif (!token) {\r\n\t\tredirect(_ => _.login)\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn <ConfirmEmailView\r\n\r\n\t\tsuccess={success}\r\n\r\n\t\tonLogin={() => redirect(_ => _.login)}\r\n\r\n\t/>\r\n}","import React from \"react\"\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { Login } from './views/Login/LoginController';\r\nimport { Register } from './views/Register/RegisterController';\r\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute';\r\nimport { Dashboard } from './views/Dashboard/DashboardController';\r\nimport { Settings } from \"./views/Settings/SettingsController\";\r\nimport { Analytics } from \"./views/Analytics/AnalyticsController\";\r\nimport { ForgotPassword } from \"./views/ForgotPassword/ForgotPasswordController\";\r\nimport { AppFrame } from \"./views/AppFrame/AppFrameController\";\r\nimport { ChangePassword } from \"./views/ChangePassword/ChangePasswordController\";\r\nimport { ConfirmEmail } from \"./views/ConfirmEmail/ConfirmEmailController\";\r\n\r\nexport const routes = {\r\n\tapproot: \"/app\",\r\n\tdashboard: \"/app/dashboard\",\r\n\tanalytics: \"/app/analytics\",\r\n\tbudget: \"/app/budget\",\r\n\tsettings: \"/app/settings\",\r\n\tlogin: \"/\",\r\n\tforgotPassword: \"/forgotPassword\",\r\n\tregister: \"/register\",\r\n\tchangePassword(token: string) {\r\n\t\treturn `/changePassword/${token}`\r\n\t},\r\n\tconfirmEmail(token: string) {\r\n\t\treturn `/confirmEmail/${token}`\r\n\t}\r\n} as const;\r\n\r\nexport function Routes() {\r\n\r\n\treturn <Switch>\r\n\r\n\t\t<Route exact path={routes.login}>\r\n\t\t\t<Login />\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.register}>\r\n\t\t\t<Register />\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.forgotPassword}>\r\n\t\t\t<ForgotPassword />\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.changePassword(\":token\")}>\r\n\t\t\t<ChangePassword />\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.confirmEmail(\":token\")}>\r\n\t\t\t<ConfirmEmail />\r\n\t\t</Route>\r\n\r\n\t\t<ProtectedRoute exact path={routes.dashboard}>\r\n\t\t\t<AppFrame>\r\n\t\t\t\t<Dashboard />\r\n\t\t\t</AppFrame>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.analytics}>\r\n\t\t\t<AppFrame>\r\n\t\t\t\t<Analytics />\r\n\t\t\t</AppFrame>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.budget}>\r\n\t\t\t<AppFrame>\r\n\t\t\t\t<p>Budget placeholder</p>\r\n\t\t\t</AppFrame>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.settings}>\r\n\t\t\t<AppFrame>\r\n\t\t\t\t<Settings />\r\n\t\t\t</AppFrame>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<Route exact path=\"/v\">\r\n\t\t\tVersion number 0.0.1\r\n\t\t</Route>\r\n\r\n\t\t<Route path=\"/\">\r\n\t\t\t<Redirect to={routes.dashboard} />\r\n\t\t</Route>\r\n\t</Switch>\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport { Routes } from './Routes';\r\nimport { useStoreActions } from './store';\r\n\r\nfunction App() {\r\n\r\n\t/**\r\n\t * Initialize by fetching the user's profile if any\r\n\t */\r\n\tconst getProfile = useStoreActions(_ => _.auth.getProfile)\r\n\r\n\tuseEffect(() => {\r\n\t\tgetProfile()\r\n\t}, [getProfile])\r\n\r\n\treturn <Routes />\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { createMuiTheme, colors } from \"@material-ui/core\";\r\n\r\n// Access any CSS var in :root by name\r\nfunction cssvar(\r\n  name: string,\r\n  options?: {\r\n    color?: boolean;\r\n  }\r\n) {\r\n  let value = getComputedStyle(document.documentElement).getPropertyValue(\r\n    \"--\" + name\r\n  );\r\n  if (options) {\r\n    if (options.color) {\r\n      if (process.env.NODE_ENV === \"development\") {\r\n        value = value.substring(1);\r\n      }\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      ...colors.deepPurple,\r\n      main: cssvar(\"color-primary-main\", { color: true }),\r\n      dark: cssvar(\"color-primary-dark\", { color: true }),\r\n      light: cssvar(\"color-primary-light\", { color: true }),\r\n      50: cssvar(\"color-primary-50\", { color: true }),\r\n      100: cssvar(\"color-primary-100\", { color: true }),\r\n      200: cssvar(\"color-primary-200\", { color: true }),\r\n      300: cssvar(\"color-primary-300\", { color: true }),\r\n      400: cssvar(\"color-primary-400\", { color: true }),\r\n      500: cssvar(\"color-primary-500\", { color: true }),\r\n      600: cssvar(\"color-primary-600\", { color: true }),\r\n      700: cssvar(\"color-primary-900\", { color: true }),\r\n      800: cssvar(\"color-primary-800\", { color: true }),\r\n      900: cssvar(\"color-primary-700\", { color: true }),\r\n      contrastText: \"#fff\",\r\n    },\r\n  },\r\n});\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).theme = theme;\r\n}\r\n","import \"./styles/index.scss\"\r\nimport \"./styles/main.scss\"\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from './store';\r\nimport { StoreProvider } from 'easy-peasy';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport { theme } from \"./styles/theme\";\r\nimport DateFnsUtils from \"@date-io/date-fns\"\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<StoreProvider store={store}>\r\n\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\t\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t\t<App />\r\n\t\t\t\t\t</BrowserRouter>\r\n\t\t\t\t</MuiPickersUtilsProvider>\r\n\t\t\t</ThemeProvider>\r\n\t\t</StoreProvider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}