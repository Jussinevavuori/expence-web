{"version":3,"sources":["components/AppTabs/AppTabs.module.css","components/TransactionFormModal/TransactionFormModalView.module.css","views/SettingsTab/SettingsTabView.module.css","components/TransactionListing/TransactionListingView.module.css","views/Login/LoginView.tsx","models/transactions/transactions.class.ts","models/transactions/transactions.json.ts","config.ts","utils/ServerError.ts","services/BaseService.ts","models/transactions/transactions.model.ts","services/TransactionService.ts","models/authentication/auth.class.ts","models/authentication/auth.json.ts","services/AuthService.ts","models/authentication/auth.model.ts","store.ts","models/transactionForm/transactionForm.model.ts","hooks/useRedirect.ts","views/Login/LoginController.tsx","views/Register/RegisterView.tsx","views/Register/RegisterController.tsx","hooks/useMedia.ts","components/AppTabs/AppTabs.tsx","hooks/useOnKeyPress.ts","components/Modal/Modal.tsx","components/TransactionFormModal/TransactionFormModalView.tsx","components/TransactionFormModal/TransactionFormModalController.tsx","components/AppLayout/AppLayout.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/TransactionListing/TransactionListingView.tsx","components/TransactionListing/TransactionListing.tsx","components/TransactionList/TransactionListView.tsx","components/TransactionList/TransactionList.tsx","views/DashboardTab/DashboardTabView.tsx","views/DashboardTab/DashboardTabController.tsx","views/SettingsTab/SettingsTabView.tsx","views/SettingsTab/SettingsTabController.tsx","Routes.tsx","App.tsx","serviceWorker.ts","index.tsx","components/TransactionList/TransactionListView.module.css","components/Modal/Modal.module.css","components/AppLayout/AppLayout.module.css"],"names":["module","exports","LoginView","props","useForm","resolver","yupResolver","loginValidationSchema","register","handleSubmit","errors","formState","emailError","touched","email","message","passwordError","password","className","onSubmit","id","name","type","ref","style","color","e","preventDefault","handleGoogleSubmit","Transaction","json","date","category","comment","integerAmount","this","Date","time","Math","floor","uuid","abs","amount","ceil","euros","toFixed","cents","padStart","formatSign","formatEuros","formatCents","sign","jsonTransactionSchema","object","string","required","uid","number","positive","integer","min","isJsonTransaction","arg","validateSync","error","isJsonTransactionArray","Array","isArray","every","Config","isServerError","code","status","BaseService","baseURL","axios","API_URL","Axios","create","withCredentials","path","token","store","getState","auth","accessToken","payload","jwt","decode","expiresAt","Number","exp","now","console","warn","force","isAccessTokenValid","url","endpoint","get","result","data","getActions","_setAccessToken","logout","attemptRefreshAccessToken","override","headers","Authorization","String","transformResponse","transformers","defaultTransformers","defaults","overrideTransformers","push","reduce","_data","nextTransformer","_error","isAxiosError","response","config","statusText","onBeforeRequest","options","getConfig","catch","handleAxiosError","post","delete","put","patch","transactionService","_","transactionsModel","items","itemsByDates","computed","state","Object","entries","transaction","_datestring","toDateString","_transactions","map","entry","sort","a","b","getTime","count","length","categories","filter","c","i","indexOf","getTransactions","thunk","actions","_getTransactions","action","jsons","postTransaction","_postTransaction","deleteTransaction","_deleteTransaction","item","putTransaction","_putTransaction","patchTransaction","_patchTransaction","onAuthChanged","thunkOn","_login","target","resolvedTargets","loggedOut","loggedIn","_clearTransactions","Auth","displayName","photoUrl","googleId","undefined","jsonAuthSchema","isJsonAuth","isValidSync","authService","values","window","location","href","authModel","initialized","_setInitialized","boolean","user","isLoggedIn","Boolean","newAccessToken","getProfile","loginWithGoogle","loginWithEmailPassword","form","loginWithEmailAndPassword","profileData","registerWithEmailPassword","registerWithEmailAndPassword","storeModel","transactions","transactionForm","isOpen","setOpen","open","close","createStore","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","useStore","useRedirect","history","useHistory","routes","yup","defined","max","LoginController","redirect","dashboard","RegisterView","registerValidationSchema","repeatPasswordError","repeatPassword","oneOf","RegisterController","useMedia","query","mediaQueryList","useMemo","matchMedia","useState","value","setValue","changeHandler","useCallback","matches","useEffect","addEventListener","removeEventListener","AppTabs","openTransactionsForm","sidebarView","dashboardMatch","useRouteMatch","analyticsMatch","analytics","budgetMatch","budget","settingsMatch","settings","styles","root","tabContainer","onClick","cx","tab","tab_active","addTab","plusButtonContainer","version","x","y","width","height","viewBox","d","svgPath","plusButton","useOnKeyPress","key","callback","eventHandler","ev","matchTarget","keyCode","shift","shiftKey","alt","altKey","ctrl","ctrlKey","ifPassed","if","ifNotPassed","ifNot","onKeyUp","portalElement","document","getElementById","Modal","onClose","disableBackgroundClick","disableEsc","handleBackgroundClick","Error","createPortal","background","modal","modalContent","children","TransactionFormModalView","transactionFormSchema","integerAmountError","categoryError","commentError","handleClose","TransactionFormModal","openForm","closeForm","AppLayout","childrenContainer","ProtectedRoute","fallbackRoute","routeProps","defaultFallbackRoute","login","to","TransactionListingView","icon","isPositive","icon_positive","icon_negative","iconContainer","amount_positive","amount_negative","formatFull","TransactionListing","handleDelete","TransactionListView","datesList","datestring","getFullYear","currentYear","format","dateListing","transactionsList","transactionListing","TransactionList","DashboardTabView","DashboardTab","SettingsTabView","src","handleLogout","SettingsTab","approot","Routes","exact","App","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.502f1c79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AppTabs_root__2ruW7\",\"tabContainer\":\"AppTabs_tabContainer__1emjK\",\"tab\":\"AppTabs_tab__1xOM5\",\"tab_active\":\"AppTabs_tab_active__1W3bc\",\"addTab\":\"AppTabs_addTab__GjiBt\",\"plusButtonContainer\":\"AppTabs_plusButtonContainer__3CpjB\",\"plusButton\":\"AppTabs_plusButton__J_-zi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TransactionFormModalView_root__3o145\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"SettingsTabView_root__SHPba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TransactionListingView_root__1wvB4\",\"icon\":\"TransactionListingView_icon__zxUyt\",\"icon_positive\":\"TransactionListingView_icon_positive__wgmQ2\",\"iconContainer\":\"TransactionListingView_iconContainer__3klj5\",\"icon_negative\":\"TransactionListingView_icon_negative__1HK0f\",\"category\":\"TransactionListingView_category__3zAcE\",\"comment\":\"TransactionListingView_comment__H3lIp\",\"amount\":\"TransactionListingView_amount__KcZ2Z\",\"amount_positive\":\"TransactionListingView_amount_positive__3al1H\",\"amount_negative\":\"TransactionListingView_amount_negative__QvZ_b\"};","import React from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { loginValidationSchema, LoginFormType } from './LoginController';\r\nimport { yupResolver } from '@hookform/resolvers';\r\n\r\nexport type LoginViewProps = {\r\n\thandleSubmit(values: LoginFormType): Promise<void>;\r\n\thandleGoogleSubmit(): Promise<void>;\r\n}\r\n\r\nexport const LoginView: React.FC<LoginViewProps> = (props) => {\r\n\r\n\tconst { register, handleSubmit, errors, formState } = useForm<LoginFormType>({\r\n\t\tresolver: yupResolver(loginValidationSchema),\r\n\t})\r\n\r\n\tconst emailError = formState.touched.email && errors.email?.message\r\n\tconst passwordError = formState.touched.password && errors.password?.message\r\n\r\n\treturn <div className=\"LoginView\">\r\n\t\t<form onSubmit={handleSubmit(props.handleSubmit)}>\r\n\r\n\t\t\t<input id=\"login-email\" name=\"email\" type=\"text\" ref={register} />\r\n\t\t\t<p style={{ color: \"#FF6622\" }}>{emailError}</p>\r\n\r\n\t\t\t<input id=\"login-password\" name=\"password\" type=\"password\" ref={register} />\r\n\t\t\t<p style={{ color: \"#FF6622\" }}>{passwordError}</p>\r\n\r\n\t\t\t<button type=\"submit\">{\"Log in\"}</button>\r\n\r\n\t\t</form >\r\n\r\n\t\t<p>{\"or\"}</p>\r\n\r\n\t\t<form onSubmit={e => { e.preventDefault(); props.handleGoogleSubmit() }}>\r\n\t\t\t<button type=\"submit\">{\"Log in with Google\"}</button>\r\n\t\t</form>\r\n\t</div>\r\n}\r\n","import { JsonTransaction } from \"./transactions.json\";\r\nimport * as uuid from \"uuid\";\r\n\r\nexport class Transaction {\r\n  date: Date;\r\n  category: string;\r\n  comment: string;\r\n  integerAmount: number;\r\n  id: string;\r\n\r\n  constructor(json: JsonTransaction) {\r\n    this.date = new Date(json.time);\r\n    this.comment = json.comment || \"\";\r\n    this.category = json.category;\r\n    this.integerAmount = Math.floor(json.integerAmount);\r\n    this.id = json.id || uuid.v4();\r\n  }\r\n\r\n  get amount() {\r\n    return this.integerAmount / 100;\r\n  }\r\n\r\n  get unsignedIntegerAmount() {\r\n    return Math.abs(this.integerAmount);\r\n  }\r\n\r\n  get unsignedAmount() {\r\n    return Math.abs(this.amount);\r\n  }\r\n\r\n  get euros() {\r\n    if (this.integerAmount > 0) {\r\n      return Math.floor(this.integerAmount / 100);\r\n    } else {\r\n      return Math.ceil(this.integerAmount / 100);\r\n    }\r\n  }\r\n\r\n  get formatEuros() {\r\n    return Math.abs(this.euros).toFixed(0);\r\n  }\r\n\r\n  get cents() {\r\n    return Math.floor(this.integerAmount % 100);\r\n  }\r\n\r\n  get formatCents() {\r\n    return Math.abs(this.cents).toFixed(0).padStart(2, \"0\");\r\n  }\r\n\r\n  get sign(): -1 | 0 | 1 {\r\n    return this.integerAmount === 0 ? 0 : this.integerAmount > 0 ? 1 : -1;\r\n  }\r\n\r\n  get formatSign() {\r\n    return this.integerAmount === 0 ? \"±\" : this.integerAmount > 0 ? \"+\" : \"-\";\r\n  }\r\n\r\n  get formatFull() {\r\n    return this.formatSign + this.formatEuros + \".\" + this.formatCents;\r\n  }\r\n\r\n  get isPositive() {\r\n    return this.sign >= 0;\r\n  }\r\n\r\n  get isNegative() {\r\n    return this.sign < 0;\r\n  }\r\n}\r\n","import { object, string, number, ObjectSchema } from \"yup\";\r\n\r\nconst id = () => string();\r\nconst uid = () => string();\r\nconst integerAmount = () => number().integer();\r\nconst time = () => number().positive().integer();\r\nconst category = () => string().min(1);\r\nconst comment = () => string();\r\n\r\nexport type JsonTransaction = {\r\n  id: string;\r\n  uid: string;\r\n  time: number;\r\n  category: string;\r\n  integerAmount: number;\r\n  comment?: string | undefined;\r\n};\r\n\r\nexport const jsonTransactionSchema: ObjectSchema<JsonTransaction> = object({\r\n  id: id().required(),\r\n  uid: uid().required(),\r\n  time: time().required(),\r\n  category: category().required(),\r\n  integerAmount: integerAmount().required(),\r\n  comment: comment(),\r\n}).required();\r\n\r\nexport function isJsonTransaction(arg: any): arg is JsonTransaction {\r\n  try {\r\n    jsonTransactionSchema.validateSync(arg);\r\n    return true;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function isJsonTransactionArray(arg: any): arg is JsonTransaction[] {\r\n  return Array.isArray(arg) && arg.every(isJsonTransaction);\r\n}\r\n","export class Config {\r\n  static get API_URL() {\r\n    switch (process.env.NODE_ENV) {\r\n      case \"production\":\r\n        return \"https://expenceapp.herokuapp.com\";\r\n      default:\r\n        return \"http://localhost:4000\";\r\n    }\r\n  }\r\n}\r\n","export type ServerError = {\r\n  code: string;\r\n  status: number;\r\n  message: string;\r\n};\r\n\r\nexport function toServerError(arg: any): ServerError {\r\n  return {\r\n    code: String(arg?.code),\r\n    status: Number(arg?.status),\r\n    message: String(arg?.message),\r\n  };\r\n}\r\n\r\nexport function isServerError(arg: any): arg is ServerError {\r\n  return (\r\n    arg &&\r\n    typeof arg === \"object\" &&\r\n    typeof arg.code === \"string\" &&\r\n    typeof arg.status === \"number\" &&\r\n    typeof arg.message === \"string\"\r\n  );\r\n}\r\n","import Axios, {\r\n  AxiosInstance,\r\n  AxiosRequestConfig,\r\n  AxiosError,\r\n  AxiosTransformer,\r\n} from \"axios\";\r\nimport { Config } from \"../config\";\r\nimport { store } from \"../store\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport { toServerError, ServerError } from \"../utils/ServerError\";\r\n\r\nexport class BaseService {\r\n  protected baseURL: string;\r\n  protected axios: AxiosInstance;\r\n\r\n  /**\r\n   * Set up base URL and axios instance for service\r\n   */\r\n  constructor() {\r\n    this.baseURL = `${Config.API_URL}/api`;\r\n    this.axios = Axios.create({ baseURL: this.baseURL, withCredentials: true });\r\n  }\r\n\r\n  /**\r\n   * Construct endpoint from path, base URL already handled\r\n   */\r\n  protected endpoint(path: string) {\r\n    return `${this.baseURL}${path}`;\r\n  }\r\n\r\n  /**\r\n   * Ensure access token is valid\r\n   */\r\n  protected isAccessTokenValid() {\r\n    const token = store.getState().auth.accessToken;\r\n    if (!token) return false;\r\n    try {\r\n      const payload = jwt.decode(token) as any;\r\n      const expiresAt = Number(payload?.exp || 0) * 1000;\r\n      const expirationBuffer = 5000; // Fetch new access token 30 seconds before expiration\r\n      const tokenIsValid = Date.now() < expiresAt - expirationBuffer;\r\n      return tokenIsValid;\r\n    } catch (error) {\r\n      console.warn(\"Error occured while checking access token\", error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempt refresh access token function\r\n   */\r\n  protected async attemptRefreshAccessToken(force: boolean = false) {\r\n    const accessTokenIsValid = this.isAccessTokenValid();\r\n    if (!accessTokenIsValid || force) {\r\n      const url = this.endpoint(\"/auth/refresh_token\");\r\n      try {\r\n        const result = await this.axios.get<string>(url);\r\n        const accessToken = result.data;\r\n        store.getActions().auth._setAccessToken(accessToken);\r\n      } catch (e) {\r\n        if (store.getState().auth.accessToken) {\r\n          store.getActions().auth.logout();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Before request hook\r\n   */\r\n  protected async onBeforeRequest() {\r\n    await this.attemptRefreshAccessToken();\r\n  }\r\n\r\n  /**\r\n   * Gets basic axios config\r\n   */\r\n  protected getConfig(\r\n    override?: AxiosRequestConfig | undefined\r\n  ): AxiosRequestConfig {\r\n    const accessToken = store.getState().auth.accessToken;\r\n    return {\r\n      headers: {\r\n        Authorization: `bearer ${String(accessToken)}`,\r\n      },\r\n      ...override,\r\n      transformResponse: (data, headers) => {\r\n        let transformers: AxiosTransformer[] = [];\r\n        const defaultTransformers = this.axios.defaults.transformResponse;\r\n        const overrideTransformers = override?.transformResponse;\r\n        if (defaultTransformers) {\r\n          if (Array.isArray(defaultTransformers)) {\r\n            transformers.push(...defaultTransformers);\r\n          } else {\r\n            transformers.push(defaultTransformers);\r\n          }\r\n        }\r\n        if (overrideTransformers) {\r\n          if (Array.isArray(overrideTransformers)) {\r\n            transformers.push(...overrideTransformers);\r\n          } else {\r\n            transformers.push(overrideTransformers);\r\n          }\r\n        }\r\n        return transformers.reduce(\r\n          (_data, nextTransformer) => nextTransformer(_data, headers),\r\n          data\r\n        );\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Axios error handler function\r\n   */\r\n  protected handleAxiosError(_error: any) {\r\n    if (_error.isAxiosError) {\r\n      const error = _error as AxiosError<ServerError>;\r\n      if (error.response) {\r\n        error.response.data = toServerError(error.response.data);\r\n      } else {\r\n        error.response = {\r\n          config: {},\r\n          data: {\r\n            code: \"error/unknown-axios-error\",\r\n            status: -1,\r\n            message: \"Unknown axios error\",\r\n          },\r\n          headers: {},\r\n          status: -1,\r\n          statusText: \"\",\r\n        };\r\n      }\r\n      return error.response;\r\n    } else {\r\n      throw _error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Axios typed GET request wrapper with hooks\r\n   */\r\n  protected async get<ResponseData = any>(\r\n    path: string,\r\n    config?: AxiosRequestConfig | undefined\r\n  ) {\r\n    const url = this.endpoint(path);\r\n    await this.onBeforeRequest();\r\n    const options = { ...this.getConfig(config) };\r\n    return this.axios\r\n      .get<ResponseData>(url, options)\r\n      .catch(this.handleAxiosError);\r\n  }\r\n\r\n  /**\r\n   * Axios typed POST request wrapper with hooks\r\n   */\r\n  protected async post<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    const url = this.endpoint(path);\r\n    await this.onBeforeRequest();\r\n    const options = { ...this.getConfig(config) };\r\n    return this.axios\r\n      .post<ResponseData>(url, data, options)\r\n      .catch(this.handleAxiosError);\r\n  }\r\n\r\n  /**\r\n   * Axios typed DELETE request wrapper with hooks\r\n   */\r\n  protected async delete<ResponseData = any>(\r\n    path: string,\r\n    config?: AxiosRequestConfig | undefined\r\n  ) {\r\n    const url = this.endpoint(path);\r\n    await this.onBeforeRequest();\r\n    const options = { ...this.getConfig(config) };\r\n    return this.axios\r\n      .delete<ResponseData>(url, options)\r\n      .catch(this.handleAxiosError);\r\n  }\r\n\r\n  /**\r\n   * Axios typed PUT request wrapper with hooks\r\n   */\r\n  protected async put<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    const url = this.endpoint(path);\r\n    await this.onBeforeRequest();\r\n    const options = { ...this.getConfig(config) };\r\n    return this.axios\r\n      .put<ResponseData>(url, data, options)\r\n      .catch(this.handleAxiosError);\r\n  }\r\n\r\n  /**\r\n   * Axios typed PATCH request wrapper with hooks\r\n   */\r\n  protected async patch<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    const url = this.endpoint(path);\r\n    await this.onBeforeRequest();\r\n    const options = { ...this.getConfig(config) };\r\n    return this.axios\r\n      .patch<ResponseData>(url, data, options)\r\n      .catch(this.handleAxiosError);\r\n  }\r\n}\r\n","import {\r\n  Action,\r\n  action,\r\n  Computed,\r\n  computed,\r\n  Thunk,\r\n  thunk,\r\n  ThunkOn,\r\n  thunkOn,\r\n} from \"easy-peasy\";\r\nimport { Transaction } from \"./transactions.class\";\r\nimport { JsonTransaction, isJsonTransactionArray } from \"./transactions.json\";\r\nimport { TransactionService } from \"../../services/TransactionService\";\r\nimport { isServerError, ServerError } from \"../../utils/ServerError\";\r\nimport { StoreModel } from \"../../store\";\r\n\r\nconst transactionService = new TransactionService();\r\n\r\nexport interface TransactionsModel {\r\n  /**\r\n   * Current transactions\r\n   */\r\n  items: Transaction[];\r\n\r\n  /**\r\n   * Current transactions sorted by dates\r\n   */\r\n  itemsByDates: Computed<\r\n    TransactionsModel,\r\n    { date: Date; items: Transaction[] }[]\r\n  >;\r\n\r\n  /**\r\n   * Current amount of transactions\r\n   */\r\n  count: Computed<TransactionsModel, number>;\r\n\r\n  /**\r\n   * All different categories\r\n   */\r\n  categories: Computed<TransactionsModel, string[]>;\r\n\r\n  /**\r\n   * Fetch all transactions for user from server\r\n   */\r\n  getTransactions: Thunk<\r\n    TransactionsModel,\r\n    void,\r\n    any,\r\n    any,\r\n    Promise<void | ServerError>\r\n  >;\r\n  _getTransactions: Action<TransactionsModel, JsonTransaction[]>;\r\n\r\n  /**\r\n   * Post and update transaction to state\r\n   */\r\n  postTransaction: Thunk<\r\n    TransactionsModel,\r\n    Omit<JsonTransaction, \"id\" | \"uid\">,\r\n    any,\r\n    any,\r\n    Promise<void | ServerError>\r\n  >;\r\n  _postTransaction: Action<TransactionsModel, JsonTransaction>;\r\n\r\n  /**\r\n   * Delete and remove transaction from state\r\n   */\r\n  deleteTransaction: Thunk<\r\n    TransactionsModel,\r\n    string,\r\n    any,\r\n    any,\r\n    Promise<void | ServerError>\r\n  >;\r\n  _deleteTransaction: Action<TransactionsModel, string>;\r\n\r\n  /**\r\n   * Put and update transaction to state\r\n   */\r\n  putTransaction: Thunk<\r\n    TransactionsModel,\r\n    JsonTransaction,\r\n    any,\r\n    any,\r\n    Promise<void | ServerError>\r\n  >;\r\n  _putTransaction: Action<TransactionsModel, JsonTransaction>;\r\n\r\n  /**\r\n   * Patch and update transaction to state\r\n   */\r\n  patchTransaction: Thunk<\r\n    TransactionsModel,\r\n    JsonTransaction,\r\n    any,\r\n    any,\r\n    Promise<void | ServerError>\r\n  >;\r\n  _patchTransaction: Action<TransactionsModel, JsonTransaction>;\r\n\r\n  /**\r\n   * Listening to auth changes\r\n   */\r\n\r\n  onAuthChanged: ThunkOn<TransactionsModel, any, StoreModel>;\r\n  _clearTransactions: Action<TransactionsModel, void>;\r\n}\r\n\r\nexport const transactionsModel: TransactionsModel = {\r\n  items: [],\r\n\r\n  itemsByDates: computed((state) => {\r\n    return Object.entries(\r\n      state.items.reduce((result, transaction) => {\r\n        const _datestring = transaction.date.toDateString();\r\n        const _transactions = result[_datestring] ?? [];\r\n        return { ...result, [_datestring]: [..._transactions, transaction] };\r\n      }, {} as { [datestring: string]: Transaction[] })\r\n    )\r\n      .map((entry) => {\r\n        return {\r\n          date: new Date(entry[0]),\r\n          items: entry[1].sort((a, b) => b.date.getTime() - a.date.getTime()),\r\n        };\r\n      })\r\n      .sort((a, b) => b.date.getTime() - a.date.getTime());\r\n  }),\r\n\r\n  count: computed((state) => state.items.length),\r\n\r\n  categories: computed((state) =>\r\n    state.items.map((_) => _.category).filter((c, i, a) => a.indexOf(c) === i)\r\n  ),\r\n\r\n  /**\r\n   * GET transactions Thunk and Action\r\n   */\r\n  getTransactions: thunk(async (actions) => {\r\n    const { data } = await transactionService.getTransactions();\r\n    if (isServerError(data)) {\r\n      return data;\r\n    } else if (isJsonTransactionArray(data)) {\r\n      actions._getTransactions(data);\r\n    }\r\n  }),\r\n  _getTransactions: action((state, jsons) => {\r\n    state.items = jsons.map((json) => new Transaction(json));\r\n  }),\r\n\r\n  /**\r\n   * POST transactions Thunk and Action\r\n   */\r\n  postTransaction: thunk(async (actions, json) => {\r\n    const { data } = await transactionService.postTransaction(json);\r\n    if (isServerError(data)) {\r\n      return data;\r\n    } else if (data) {\r\n      actions._postTransaction(data);\r\n    }\r\n  }),\r\n\r\n  _postTransaction: action((state, json) => {\r\n    state.items.push(new Transaction(json));\r\n  }),\r\n\r\n  /**\r\n   * DELETE transactions Thunk and Action\r\n   */\r\n  deleteTransaction: thunk(async (actions, id) => {\r\n    const { data } = await transactionService.deleteTransaction(id);\r\n    if (isServerError(data)) {\r\n      return data;\r\n    } else if (data) {\r\n      actions._deleteTransaction(id);\r\n    }\r\n  }),\r\n\r\n  _deleteTransaction: action((state, id) => {\r\n    state.items = state.items.filter((item) => item.id !== id);\r\n  }),\r\n\r\n  /**\r\n   * PUT transactions Thunk and Action\r\n   */\r\n  putTransaction: thunk(async (actions, json) => {\r\n    const { data } = await transactionService.putTransaction(json);\r\n    if (isServerError(data)) {\r\n      return data;\r\n    } else if (data) {\r\n      actions._putTransaction(data);\r\n    }\r\n  }),\r\n  _putTransaction: action((state, json) => {\r\n    state.items = state.items.map((item) =>\r\n      item.id === json.id ? new Transaction(json) : item\r\n    );\r\n  }),\r\n\r\n  /**\r\n   * PATCH transactions Thunk and Action\r\n   */\r\n  patchTransaction: thunk(async (actions, json) => {\r\n    const { data } = await transactionService.putTransaction(json);\r\n    if (isServerError(data)) {\r\n      return data;\r\n    } else if (data) {\r\n      actions._patchTransaction(data);\r\n    }\r\n  }),\r\n  _patchTransaction: action((state, json) => {\r\n    state.items = state.items.map((item) =>\r\n      item.id === json.id ? new Transaction(json) : item\r\n    );\r\n  }),\r\n\r\n  onAuthChanged: thunkOn(\r\n    (_, store) => [store.auth.logout, store.auth._login],\r\n    (actions, target) => {\r\n      const [loggedOut, loggedIn] = target.resolvedTargets;\r\n      switch (target.type) {\r\n        case loggedOut:\r\n          actions._clearTransactions();\r\n          break;\r\n        case loggedIn:\r\n          actions.getTransactions();\r\n          break;\r\n      }\r\n    }\r\n  ),\r\n  _clearTransactions: action((state) => {\r\n    state.items = [];\r\n  }),\r\n};\r\n","import { BaseService } from \"./BaseService\";\r\nimport {\r\n  JsonTransaction,\r\n  isJsonTransactionArray,\r\n  isJsonTransaction,\r\n} from \"../models/transactions/transactions.json\";\r\n\r\nexport class TransactionService extends BaseService {\r\n  getTransactions() {\r\n    return this.get<JsonTransaction[] | null>(\"/transactions\", {\r\n      transformResponse: (data) => (isJsonTransactionArray(data) ? data : null),\r\n    });\r\n  }\r\n\r\n  async postTransaction(json: Omit<JsonTransaction, \"id\" | \"uid\">) {\r\n    return this.post<\r\n      Omit<JsonTransaction, \"id\" | \"uid\">,\r\n      JsonTransaction | null\r\n    >(\"/transactions\", json, {\r\n      transformResponse: (data) => (isJsonTransaction(data) ? data : null),\r\n    });\r\n  }\r\n\r\n  async deleteTransaction(id: string) {\r\n    return this.delete<boolean>(`/transactions/${id}`, {\r\n      transformResponse: (_, headers) => headers.status === 204,\r\n    });\r\n  }\r\n\r\n  async putTransaction(json: JsonTransaction) {\r\n    return this.put<JsonTransaction, JsonTransaction | null>(\r\n      `/transactions/${json.id}`,\r\n      json,\r\n      {\r\n        transformResponse: (data) => (isJsonTransaction(data) ? data : null),\r\n      }\r\n    );\r\n  }\r\n\r\n  async patchTransaction(json: JsonTransaction) {\r\n    return this.patch<JsonTransaction, JsonTransaction | null>(\r\n      `/transactions/${json.id}`,\r\n      json,\r\n      {\r\n        transformResponse: (data) => (isJsonTransaction(data) ? data : null),\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { JsonAuth } from \"./auth.json\";\r\n\r\nexport class Auth {\r\n  id: string;\r\n  displayName?: string;\r\n  email?: string;\r\n  photoUrl?: string;\r\n  googleId?: string;\r\n\r\n  constructor(json: JsonAuth) {\r\n    this.id = json.id;\r\n    this.displayName = json.displayName ?? undefined;\r\n    this.email = json.email ?? undefined;\r\n    this.photoUrl = json.photoUrl ?? undefined;\r\n    this.googleId = json.googleId ?? undefined;\r\n  }\r\n}\r\n","import { object, string, ObjectSchema } from \"yup\";\r\n\r\nexport type JsonAuth = {\r\n  id: string;\r\n  displayName: string | undefined;\r\n  photoUrl: string | undefined;\r\n  email: string | undefined;\r\n  googleId: string | undefined;\r\n};\r\n\r\nexport const jsonAuthSchema: ObjectSchema<JsonAuth> = object({\r\n  id: string().required().min(1),\r\n  displayName: string(),\r\n  photoUrl: string(),\r\n  email: string(),\r\n  googleId: string(),\r\n}).required();\r\n\r\nexport function isJsonAuth(arg: any): arg is JsonAuth {\r\n  try {\r\n    jsonAuthSchema.isValidSync(arg);\r\n    return true;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n","import { BaseService } from \"./BaseService\";\r\nimport { isJsonAuth, JsonAuth } from \"../models/authentication/auth.json\";\r\n\r\ntype EmailAndPassword = { email: string; password: string };\r\n\r\nexport class AuthService extends BaseService {\r\n  getProfile() {\r\n    return this.get<JsonAuth | null>(\"/auth/profile\", {\r\n      transformResponse: [(data) => (isJsonAuth(data) ? data : null)],\r\n    });\r\n  }\r\n\r\n  registerWithEmailAndPassword(values: EmailAndPassword) {\r\n    return this.post<EmailAndPassword, boolean>(\"/auth/register\", values, {\r\n      transformResponse: [\r\n        (_, headers) => {\r\n          return headers.status === 200;\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  async loginWithEmailAndPassword(values: { email: string; password: string }) {\r\n    return this.post<EmailAndPassword, boolean>(\"/auth/login\", values, {\r\n      transformResponse: [\r\n        (_, headers) => {\r\n          return headers.status === 200;\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  loginWithGoogle() {\r\n    window.location.href = this.endpoint(\"/auth/google\");\r\n  }\r\n\r\n  logout() {\r\n    window.location.href = this.endpoint(\"/auth/logout\");\r\n  }\r\n}\r\n","import { Action, action, Computed, computed, Thunk, thunk } from \"easy-peasy\";\r\nimport { Auth } from \"./auth.class\";\r\nimport { AuthService } from \"../../services/AuthService\";\r\nimport { JsonAuth, isJsonAuth } from \"./auth.json\";\r\nimport { isServerError, ServerError } from \"../../utils/ServerError\";\r\n\r\n/**\r\n * An instance of the auth service for the authentication model to use\r\n */\r\nexport const authService = new AuthService();\r\n\r\nexport interface AuthModel {\r\n  /**\r\n   * Initialized state: has the profile been fetched at the least once\r\n   */\r\n  initialized: boolean;\r\n  _setInitialized: Action<AuthModel, boolean>;\r\n\r\n  /**\r\n   * Currently logged in user or null if none logged in\r\n   */\r\n  user: Auth | null;\r\n\r\n  /**\r\n   * Computed property for whether the user is currently logged in\r\n   */\r\n  isLoggedIn: Computed<AuthModel, boolean>;\r\n\r\n  /**\r\n   * Current access token for authentication in memory for security purposes.\r\n   * This is automatically refreshed when making a request with a service and\r\n   * should not be manually set.\r\n   */\r\n  accessToken: string | null;\r\n\r\n  /**\r\n   * Function to set the access token\r\n   */\r\n  _setAccessToken: Action<AuthModel, string>;\r\n\r\n  /**\r\n   * Function to get the currently logged in user's profile data and apply it\r\n   * to the user property. The logged in property is defined by the current\r\n   * refresh token.\r\n   */\r\n  getProfile: Thunk<AuthModel, void, any, any, Promise<void | ServerError>>;\r\n\r\n  /**\r\n   * Log in the current user with a Google account\r\n   */\r\n  loginWithGoogle: Thunk<AuthModel, void>;\r\n\r\n  /**\r\n   * Register the current user with email and password\r\n   */\r\n  registerWithEmailPassword: Thunk<\r\n    AuthModel,\r\n    { email: string; password: string },\r\n    any,\r\n    any,\r\n    Promise<void | ServerError>\r\n  >;\r\n\r\n  /**\r\n   * Log in the current user with email and password\r\n   */\r\n  loginWithEmailPassword: Thunk<\r\n    AuthModel,\r\n    { email: string; password: string },\r\n    any,\r\n    any,\r\n    Promise<void | ServerError>\r\n  >;\r\n\r\n  /**\r\n   * Action to set the current user with partial user data (a constructable)\r\n   */\r\n  _login: Action<AuthModel, JsonAuth>;\r\n\r\n  /**\r\n   * Log out the current user\r\n   */\r\n  logout: Thunk<AuthModel, void>;\r\n}\r\n\r\n/**\r\n * Implementation of the authentication model\r\n */\r\nexport const authModel: AuthModel = {\r\n  initialized: false,\r\n  _setInitialized: action((state, boolean) => {\r\n    state.initialized = boolean;\r\n  }),\r\n\r\n  user: null,\r\n\r\n  isLoggedIn: computed((state) => Boolean(state.user)),\r\n\r\n  accessToken: null,\r\n\r\n  _setAccessToken: action((state, newAccessToken) => {\r\n    state.accessToken = newAccessToken;\r\n  }),\r\n\r\n  getProfile: thunk(async (actions) => {\r\n    const { data } = await authService.getProfile();\r\n    if (isServerError(data)) {\r\n      actions._setInitialized(true);\r\n      return data;\r\n    } else if (data) {\r\n      actions._login(data);\r\n    }\r\n    actions._setInitialized(true);\r\n  }),\r\n\r\n  loginWithGoogle: thunk(() => {\r\n    authService.loginWithGoogle();\r\n  }),\r\n\r\n  loginWithEmailPassword: thunk(async (actions, form) => {\r\n    const { data } = await authService.loginWithEmailAndPassword(form);\r\n    if (isServerError(data)) {\r\n      return data;\r\n    } else if (data) {\r\n      const { data: profileData } = await authService.getProfile();\r\n      if (!profileData || isServerError(profileData)) return;\r\n\t\t\tactions._login(profileData);\r\n    }\r\n  }),\r\n\r\n  registerWithEmailPassword: thunk(async (actions, form) => {\r\n    const { data } = await authService.registerWithEmailAndPassword(form);\r\n    if (isServerError(data)) {\r\n      return data;\r\n    } else if (data) {\r\n      const { data: profileData } = await authService.getProfile();\r\n      if (!profileData || isServerError(profileData)) return;\r\n      actions._login(profileData);\r\n    }\r\n  }),\r\n\r\n  _login: action((state, json) => {\r\n    if (isJsonAuth(json)) {\r\n      state.user = new Auth(json);\r\n    }\r\n  }),\r\n\r\n  logout: thunk(() => {\r\n    authService.logout();\r\n  }),\r\n};\r\n","import { createStore, createTypedHooks } from \"easy-peasy\";\r\nimport {\r\n  TransactionsModel,\r\n  transactionsModel,\r\n} from \"./models/transactions/transactions.model\";\r\nimport { AuthModel, authModel } from \"./models/authentication/auth.model\";\r\nimport {\r\n  TransactionFormModel,\r\n  transactionFormModel,\r\n} from \"./models/transactionForm/transactionForm.model\";\r\n\r\nexport interface StoreModel {\r\n  transactions: TransactionsModel;\r\n  transactionForm: TransactionFormModel;\r\n  auth: AuthModel;\r\n}\r\n\r\nconst storeModel: StoreModel = {\r\n  transactions: transactionsModel,\r\n  transactionForm: transactionFormModel,\r\n  auth: authModel,\r\n};\r\n\r\nexport const store = createStore(storeModel);\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).store = store;\r\n}\r\n\r\nexport const typedHooks = createTypedHooks<StoreModel>();\r\n\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;\r\nexport const useStore = typedHooks.useStore;\r\n","import { Action, action } from \"easy-peasy\";\r\n\r\nexport type TransactionFormModel = {\r\n  isOpen: boolean;\r\n\r\n  setOpen: Action<TransactionFormModel, boolean>;\r\n\r\n  open: Action<TransactionFormModel, void>;\r\n\r\n  close: Action<TransactionFormModel, void>;\r\n};\r\n\r\nexport const transactionFormModel: TransactionFormModel = {\r\n  isOpen: false,\r\n\r\n  setOpen: action((state, boolean) => {\r\n    state.isOpen = boolean;\r\n  }),\r\n\r\n  open: action((state) => {\r\n    state.isOpen = true;\r\n  }),\r\n\r\n  close: action((state) => {\r\n    state.isOpen = false;\r\n  }),\r\n};\r\n","import { routes } from \"../Routes\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport type RouteSelector = (r: typeof routes) => string;\r\n\r\nexport function useRedirect() {\r\n  const history = useHistory();\r\n  return (path: string | RouteSelector) =>\r\n    history.push(typeof path === \"string\" ? path : path(routes));\r\n}\r\n","import React from 'react';\r\nimport { LoginView } from './LoginView';\r\nimport * as yup from \"yup\"\r\nimport { useStoreActions } from '../../store';\r\nimport { useRedirect } from '../../hooks/useRedirect';\r\n\r\nexport const loginValidationSchema = yup.object({\r\n\temail: yup.string().defined().min(3).max(255).email(),\r\n\tpassword: yup.string().defined().min(3).max(255),\r\n}).defined()\r\n\r\nexport type LoginFormType = yup.InferType<typeof loginValidationSchema>\r\n\r\nexport const LoginController: React.FC<{}> = () => {\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst loginWithGoogle = useStoreActions(_ => _.auth.loginWithGoogle)\r\n\tconst loginWithEmailPassword = useStoreActions(_ => _.auth.loginWithEmailPassword)\r\n\r\n\tasync function handleSubmit(values: LoginFormType) {\r\n\t\tconst error = await loginWithEmailPassword(values)\r\n\t\tif (error) {\r\n\t\t\tconsole.error(error)\r\n\t\t} else {\r\n\t\t\tredirect(routes => routes.dashboard)\r\n\t\t}\r\n\t}\r\n\r\n\tasync function handleGoogleSubmit() {\r\n\t\tloginWithGoogle()\r\n\t}\r\n\r\n\treturn <LoginView {...{ handleGoogleSubmit, handleSubmit }} />\r\n}","import React from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { registerValidationSchema, RegisterFormType } from './RegisterController';\r\nimport { yupResolver } from '@hookform/resolvers';\r\n\r\nexport type RegisterViewProps = {\r\n\thandleSubmit(values: RegisterFormType): Promise<void>;\r\n}\r\n\r\nexport const RegisterView: React.FC<RegisterViewProps> = (props) => {\r\n\r\n\tconst { register, handleSubmit, errors, formState } = useForm<RegisterFormType>({\r\n\t\tresolver: yupResolver(registerValidationSchema),\r\n\r\n\t})\r\n\r\n\tconst emailError = formState.touched.email && errors.email?.message\r\n\tconst passwordError = formState.touched.password && errors.password?.message\r\n\tconst repeatPasswordError = formState.touched.repeatPassword && errors.repeatPassword?.message\r\n\r\n\treturn <form onSubmit={handleSubmit(props.handleSubmit)}>\r\n\r\n\t\t<input id=\"register-email\" name=\"email\" type=\"text\" ref={register} />\r\n\t\t<p style={{ color: \"#FF6622\" }}>{emailError}</p>\r\n\r\n\t\t<input id=\"register-password\" name=\"password\" type=\"password\" ref={register} />\r\n\t\t<p style={{ color: \"#FF6622\" }}>{passwordError}</p>\r\n\r\n\t\t<input id=\"register-repeat-password\" name=\"repeatPassword\" type=\"password\" ref={register} />\r\n\t\t<p style={{ color: \"#FF6622\" }}>{repeatPasswordError}</p>\r\n\r\n\t\t<button type=\"submit\">{\"Register\"}</button>\r\n\r\n\t</form >\r\n}","import React from 'react';\r\nimport { RegisterView } from './RegisterView';\r\nimport { InferType, object, string, ref } from \"yup\"\r\nimport { useStoreActions } from '../../store';\r\n\r\nexport const registerValidationSchema = object({\r\n\temail: string().defined().max(255).email(),\r\n\tpassword: string().defined().min(5).max(255),\r\n\trepeatPassword: string().defined().oneOf([ref(\"password\")], \"passwords must match\")\r\n}).defined()\r\n\r\nexport type RegisterFormType = InferType<typeof registerValidationSchema>\r\n\r\nexport const RegisterController: React.FC<{}> = () => {\r\n\r\n\tconst register = useStoreActions(_ => _.auth.registerWithEmailPassword)\r\n\r\n\tasync function handleSubmit(values: RegisterFormType) {\r\n\t\tawait register({ email: values.email, password: values.password })\r\n\t}\r\n\r\n\treturn <RegisterView handleSubmit={handleSubmit} />\r\n}","import { useEffect, useState, useCallback, useMemo } from \"react\";\r\n\r\nexport function useMedia(query: string) {\r\n  /**\r\n   * Media query list from query\r\n   */\r\n  const mediaQueryList = useMemo(() => {\r\n    return window.matchMedia(query);\r\n  }, [query]);\r\n\r\n  /**\r\n   * Current value\r\n   */\r\n  const [value, setValue] = useState<boolean>(false);\r\n\r\n  /**\r\n   * Changehandler: sets the current value\r\n   */\r\n  const changeHandler = useCallback(() => {\r\n    setValue(mediaQueryList.matches);\r\n  }, [mediaQueryList]);\r\n\r\n  /**\r\n   * Listening to changes and cleanup\r\n   */\r\n  useEffect(() => {\r\n    changeHandler();\r\n    mediaQueryList.addEventListener(\"change\", changeHandler);\r\n    return () => {\r\n      mediaQueryList.removeEventListener(\"change\", changeHandler);\r\n    };\r\n  }, [mediaQueryList, changeHandler]);\r\n\r\n  /**\r\n   * Returning value\r\n   */\r\n  return value;\r\n}\r\n\r\n/**\r\n * (min-width: $px) media query hook wrapper\r\n */\r\nexport function useMinWidthMedia(minWidth: number) {\r\n  const query = `(min-width: ${minWidth}px)`;\r\n  return useMedia(query);\r\n}\r\n\r\n/**\r\n * (max-width: $px) media query hook wrapper\r\n */\r\nexport function useMaxWidthMedia(maxWidth: number) {\r\n  const query = `(max-width: ${maxWidth}px)`;\r\n  return useMedia(query);\r\n}\r\n","import styles from \"./AppTabs.module.css\"\r\nimport React from \"react\"\r\nimport cx from \"classnames\"\r\nimport { useRouteMatch } from \"react-router-dom\"\r\nimport { routes } from \"../../Routes\"\r\nimport { useRedirect } from \"../../hooks/useRedirect\"\r\nimport {\r\n\tHome as DashboardIcon,\r\n\tBarChart2 as AnalyticsIcon,\r\n\tSettings as SettingsIcon,\r\n\tBriefcase as BudgetIcon,\r\n\tPlus as PlusIcon\r\n} from \"react-feather\"\r\nimport { useMinWidthMedia } from \"../../hooks/useMedia\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport default function AppTabs() {\r\n\r\n\tconst redirect = useRedirect()\r\n\r\n\tconst openTransactionsForm = useStoreActions(_ => _.transactionForm.open)\r\n\r\n\tconst sidebarView = useMinWidthMedia(600)\r\n\r\n\tconst dashboardMatch = useRouteMatch(routes.dashboard)\r\n\tconst analyticsMatch = useRouteMatch(routes.analytics)\r\n\tconst budgetMatch = useRouteMatch(routes.budget)\r\n\tconst settingsMatch = useRouteMatch(routes.settings)\r\n\r\n\treturn <div className={styles.root}>\r\n\r\n\t\t<div className={styles.tabContainer}>\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => redirect(_ => _.dashboard)}\r\n\t\t\t\tclassName={cx(styles.tab, { [styles.tab_active]: !!dashboardMatch })}\r\n\t\t\t>\r\n\t\t\t\t<DashboardIcon />\r\n\t\t\t\t<span>{\"Dashboard\"}</span>\r\n\t\t\t</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => redirect(_ => _.analytics)}\r\n\t\t\t\tclassName={cx(styles.tab, { [styles.tab_active]: !!analyticsMatch })}\r\n\t\t\t>\r\n\t\t\t\t<AnalyticsIcon />\r\n\t\t\t\t<span>{\"Analytics\"}</span>\r\n\t\t\t</button>\r\n\r\n\t\t\t{\r\n\t\t\t\tsidebarView ?\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => openTransactionsForm()}\r\n\t\t\t\t\t\tclassName={cx(styles.tab, styles.addTab)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<PlusIcon />\r\n\t\t\t\t\t\t<span>{\"New transaction\"}</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t: <div className={styles.plusButtonContainer}>\r\n\r\n\t\t\t\t\t\t<svg version=\"1.1\" x=\"0px\" y=\"0px\" width=\"108px\" height=\"60px\" viewBox=\"0 0 108 60\" >\r\n\t\t\t\t\t\t\t<path d={svgPath} />\r\n\t\t\t\t\t\t</svg>\r\n\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => openTransactionsForm()}\r\n\t\t\t\t\t\t\tclassName={styles.plusButton}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<PlusIcon />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => redirect(_ => _.budget)}\r\n\t\t\t\tclassName={cx(styles.tab, { [styles.tab_active]: !!budgetMatch })}\r\n\t\t\t>\r\n\t\t\t\t<BudgetIcon />\r\n\t\t\t\t<span>{\"Budget\"}</span>\r\n\t\t\t</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => redirect(_ => _.settings)}\r\n\t\t\t\tclassName={cx(styles.tab, { [styles.tab_active]: !!settingsMatch })}\r\n\t\t\t>\r\n\t\t\t\t<SettingsIcon />\r\n\t\t\t\t<span>{\"Settings\"}</span>\r\n\t\t\t</button>\r\n\r\n\t\t</div>\r\n\t</div >\r\n\r\n}\r\n\r\n\r\nconst svgPath = `M80.2,23.4C72.9,30.7,64.4,35,54,35s-18.9-4.3-26.2-11.6C20.5,16.1,10,0,0,0v60h54h54V0C98, 0, 87.5, 16.1, 80.2, 23.4z`","import { useCallback, useEffect } from \"react\";\r\n\r\nexport function useOnKeyPress(\r\n  key:\r\n    | string\r\n    | number\r\n    | {\r\n        key: string | number;\r\n        shift?: boolean;\r\n        alt?: boolean;\r\n        ctrl?: boolean;\r\n      },\r\n  callback: Function,\r\n  options?: {\r\n    onKeyUp?: boolean;\r\n    if?: boolean;\r\n    ifNot?: boolean;\r\n  }\r\n) {\r\n  const eventHandler = useCallback(\r\n    (ev: KeyboardEvent) => {\r\n      const matchTarget = typeof key === \"object\" ? key.key : key;\r\n\r\n      const keyMatch = ev.key === matchTarget || ev.keyCode === matchTarget;\r\n\r\n      if (!keyMatch) return;\r\n\r\n      const shiftMatch =\r\n        typeof key !== \"object\" ||\r\n        key.shift === undefined ||\r\n        key.shift === ev.shiftKey;\r\n\r\n      if (!shiftMatch) return;\r\n\r\n      const altMatch =\r\n        typeof key !== \"object\" ||\r\n        key.alt === undefined ||\r\n        key.alt === ev.altKey;\r\n\r\n      if (!altMatch) return;\r\n\r\n      const ctrlMatch =\r\n        typeof key !== \"object\" ||\r\n        key.ctrl === undefined ||\r\n        key.ctrl === ev.ctrlKey;\r\n\r\n      if (!ctrlMatch) return;\r\n\r\n      callback();\r\n    },\r\n    [key, callback]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const ifPassed = options?.if === true || options?.if === undefined;\r\n    const ifNotPassed = options?.ifNot === true || options?.ifNot === undefined;\r\n\r\n    if (ifPassed && ifNotPassed) {\r\n      const onKeyUp = Boolean(options?.onKeyUp);\r\n\r\n      if (onKeyUp) {\r\n        window.addEventListener(\"keyup\", eventHandler);\r\n        return () => window.removeEventListener(\"keyup\", eventHandler);\r\n      } else {\r\n        window.addEventListener(\"keydown\", eventHandler);\r\n        return () => window.removeEventListener(\"keydown\", eventHandler);\r\n      }\r\n    }\r\n  }, [options, eventHandler]);\r\n}\r\n","import styles from \"./Modal.module.css\";\r\nimport React, { useCallback } from \"react\";\r\nimport { createPortal } from \"react-dom\"\r\nimport { useOnKeyPress } from \"../../hooks/useOnKeyPress\";\r\n\r\nexport type ModalProps = {\r\n\topen: boolean;\r\n\tonClose: Function;\r\n\tchildren: React.ReactNode;\r\n\r\n\tdisableBackgroundClick?: boolean;\r\n\tdisableEsc?: boolean;\r\n}\r\n\r\nconst portalElement = document.getElementById(\"_modal\")\r\n\r\nexport function Modal(props: ModalProps) {\r\n\r\n\tconst { onClose, disableBackgroundClick, disableEsc } = props\r\n\r\n\t/**\r\n\t * Unless disabled, pressing ESC will close the modal\r\n\t */\r\n\tconst onEscKeyPressed = useCallback(() => {\r\n\t\tif (!disableEsc) {\r\n\t\t\tonClose()\r\n\t\t}\r\n\t}, [disableEsc, onClose])\r\n\r\n\tuseOnKeyPress(27, onEscKeyPressed, { if: props.open })\r\n\r\n\t/**\r\n\t * Unless disabled, clicking the background will close the modal\r\n\t */\r\n\tconst handleBackgroundClick = useCallback(() => {\r\n\t\tif (!disableBackgroundClick) {\r\n\t\t\tonClose()\r\n\t\t}\r\n\t}, [disableBackgroundClick, onClose])\r\n\r\n\t/**\r\n\t * Ensure portal element exists\r\n\t */\r\n\tif (!portalElement) throw Error(\"Portal element not defined for modal\")\r\n\r\n\t/**\r\n\t * Show only if props are open\r\n\t */\r\n\tif (!props.open) return null\r\n\r\n\t/**\r\n\t * Render modal in portal\r\n\t */\r\n\treturn createPortal(\r\n\t\t<div className={styles.root}>\r\n\t\t\t<div className={styles.background} onClick={handleBackgroundClick} />\r\n\t\t\t<div className={styles.modal}>\r\n\t\t\t\t<div className={styles.modalContent}>\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>,\r\n\t\tportalElement\r\n\t)\r\n}","import styles from \"./TransactionFormModalView.module.css\";\r\nimport React from \"react\"\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { TransactionForm, transactionFormSchema } from \"./TransactionFormModalController\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Modal } from \"../Modal/Modal\";\r\n\r\nexport type TransactionFormModalViewProps = {\r\n\topen: boolean;\r\n\thandleClose: Function;\r\n\thandleSubmit(values: TransactionForm): void;\r\n}\r\n\r\nexport function TransactionFormModalView(props: TransactionFormModalViewProps) {\r\n\r\n\tconst { register, handleSubmit, errors, formState } = useForm<TransactionForm>({\r\n\t\tresolver: yupResolver(transactionFormSchema),\r\n\t})\r\n\r\n\tconst integerAmountError = formState.touched.integerAmount && errors.integerAmount?.message\r\n\tconst categoryError = formState.touched.category && errors.category?.message\r\n\tconst commentError = formState.touched.comment && errors.comment?.message\r\n\r\n\treturn <Modal open={props.open} onClose={props.handleClose}>\r\n\t\t<div className={styles.root}>\r\n\t\t\t<form onSubmit={handleSubmit(props.handleSubmit)}>\r\n\t\t\t\t<p>Integer amount</p>\r\n\t\t\t\t<input type=\"number\" id=\"integerAmount\" name=\"integerAmount\" ref={register} />\r\n\t\t\t\t<p style={{ color: \"#FF6622\" }}>{integerAmountError}</p>\r\n\t\t\t\t<p>Category</p>\r\n\t\t\t\t<input type=\"text\" id=\"category\" name=\"category\" ref={register} />\r\n\t\t\t\t<p style={{ color: \"#FF6622\" }}>{categoryError}</p>\r\n\t\t\t\t<p>Comment</p>\r\n\t\t\t\t<input type=\"text\" id=\"comment\" name=\"comment\" ref={register} />\r\n\t\t\t\t<p style={{ color: \"#FF6622\" }}>{commentError}</p>\r\n\t\t\t\t<button type=\"submit\">submit</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t</Modal>\r\n}","import React, { useCallback } from \"react\"\r\nimport { TransactionFormModalView } from \"./TransactionFormModalView\"\r\nimport { ObjectSchema, object, string, number } from \"yup\"\r\nimport { useStoreState, useStoreActions } from \"../../store\"\r\nimport { useOnKeyPress } from \"../../hooks/useOnKeyPress\"\r\n\r\nexport type TransactionForm = {\r\n\tcomment?: string;\r\n\tcategory: string;\r\n\tintegerAmount: number;\r\n}\r\n\r\nexport const transactionFormSchema: ObjectSchema<TransactionForm> = object({\r\n\tcomment: string(),\r\n\tcategory: string().required(),\r\n\tintegerAmount: number().required().integer()\r\n}).required()\r\n\r\nexport type TransactionFormProps = {\r\n\r\n}\r\n\r\n\r\nexport function TransactionFormModal(props: TransactionFormProps) {\r\n\r\n\tconst open = useStoreState(_ => _.transactionForm.isOpen)\r\n\tconst openForm = useStoreActions(_ => _.transactionForm.open)\r\n\tconst closeForm = useStoreActions(_ => _.transactionForm.close)\r\n\r\n\tconst postTransaction = useStoreActions(_ => _.transactions.postTransaction)\r\n\r\n\tfunction handleClose() {\r\n\t\tcloseForm()\r\n\t}\r\n\r\n\tfunction handleSubmit(values: TransactionForm) {\r\n\t\tpostTransaction({ ...values, time: Date.now() })\r\n\t}\r\n\r\n\tconst handleKeyPressOpen = useCallback(() => {\r\n\t\topenForm()\r\n\t}, [openForm])\r\n\r\n\t// CTRL space opens menu\r\n\tuseOnKeyPress({ key: 32, shift: false, ctrl: true, alt: false }, handleKeyPressOpen)\r\n\r\n\treturn <TransactionFormModalView\r\n\t\topen={open}\r\n\t\thandleClose={handleClose}\r\n\t\thandleSubmit={handleSubmit}\r\n\t/>\r\n}","import styles from \"./AppLayout.module.css\"\r\nimport React from \"react\"\r\nimport AppTabs from \"../AppTabs/AppTabs\"\r\nimport { TransactionFormModal } from \"../TransactionFormModal/TransactionFormModalController\"\r\n\r\ntype AppLayoutProps = {\r\n\tchildren?: React.ReactNode\r\n}\r\n\r\nexport default function AppLayout(props: AppLayoutProps) {\r\n\treturn <>\r\n\r\n\t\t<TransactionFormModal />\r\n\r\n\t\t<div className={styles.root}>\r\n\t\t\t<AppTabs />\r\n\t\t\t<div className={styles.childrenContainer}>\r\n\t\t\t\t{props.children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</>\r\n}\r\n","import React from \"react\";\r\nimport { Route, RouteProps, Redirect } from \"react-router-dom\";\r\nimport { useStoreState } from \"../../store\";\r\nimport { routes } from \"../../Routes\";\r\n\r\nexport type ProtectedRouteProps = {\r\n\tfallbackRoute?: string;\r\n} & RouteProps\r\n\r\nexport default function ProtectedRoute(props: ProtectedRouteProps) {\r\n\r\n\tconst { fallbackRoute, ...routeProps } = props\r\n\r\n\t/**\r\n\t * Default fallback to login on redirect\r\n\t */\r\n\tconst defaultFallbackRoute = routes.login\r\n\r\n\t/**\r\n\t * Get current user details\r\n\t */\r\n\tconst initialized = useStoreState(_ => _.auth.initialized)\r\n\tconst isLoggedIn = useStoreState(_ => _.auth.isLoggedIn)\r\n\r\n\t/**\r\n\t * If the user is being loaded, show nothing\r\n\t */\r\n\tif (!initialized) return null\r\n\r\n\t/**\r\n\t * Else if user is not logged in redirect to fallback route or default fallback route\r\n\t * if none specified in props\r\n\t */\r\n\telse if (!isLoggedIn) return <Redirect to={fallbackRoute || defaultFallbackRoute} />\r\n\r\n\t/**\r\n\t * Else return route as is\r\n\t */\r\n\telse return <Route {...routeProps} />\r\n}","import styles from \"./TransactionListingView.module.css\";\r\nimport React from \"react\"\r\nimport cx from \"classnames\"\r\nimport { Transaction } from \"../../models/transactions/transactions.class\";\r\nimport { Plus as PlusIcon, Minus as MinusIcon } from \"react-feather\"\r\n\r\nexport type TransactionListingViewProps = {\r\n\ttransaction: Transaction;\r\n\thandleDelete: Function;\r\n}\r\n\r\nexport function TransactionListingView(props: TransactionListingViewProps) {\r\n\r\n\treturn <div className={styles.root}>\r\n\t\t<div className={cx(styles.icon, props.transaction.isPositive ? styles.icon_positive : styles.icon_negative)}>\r\n\t\t\t<div className={styles.iconContainer}>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.transaction.isPositive\r\n\t\t\t\t\t\t? <PlusIcon />\r\n\t\t\t\t\t\t: <MinusIcon />\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className={styles.category}>\r\n\t\t\t<span>\r\n\t\t\t\t{props.transaction.category}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div className={styles.comment}>\r\n\t\t\t<span>\r\n\t\t\t\t{props.transaction.comment}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t\t<div className={cx(styles.amount, props.transaction.isPositive ? styles.amount_positive : styles.amount_negative)}>\r\n\t\t\t<span>\r\n\t\t\t\t{props.transaction.formatFull}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t</div>\r\n}","import React, { useCallback } from \"react\"\r\nimport { TransactionListingView } from \"./TransactionListingView\"\r\nimport { Transaction } from \"../../models/transactions/transactions.class\"\r\nimport { useStoreActions } from \"../../store\"\r\n\r\nexport type TransactionListingProps = {\r\n\ttransaction: Transaction;\r\n}\r\n\r\nexport function TransactionListing(props: TransactionListingProps) {\r\n\r\n\tconst deleteTransaction = useStoreActions(_ => _.transactions.deleteTransaction)\r\n\r\n\tconst handleDelete = useCallback(() => {\r\n\t\tdeleteTransaction(props.transaction.id)\r\n\t}, [props.transaction, deleteTransaction])\r\n\r\n\treturn <TransactionListingView\r\n\t\ttransaction={props.transaction}\r\n\t\thandleDelete={handleDelete}\r\n\t/>\r\n}","import styles from \"./TransactionListView.module.css\";\r\nimport React from \"react\"\r\nimport { TransactionListing } from \"../TransactionListing/TransactionListing\";\r\nimport { Transaction } from \"../../models/transactions/transactions.class\";\r\nimport { format } from \"date-fns\"\r\n\r\nexport type TransactionListViewProps = {\r\n\titemsByDates: {\r\n\t\tdate: Date;\r\n\t\titems: Transaction[];\r\n\t}[]\r\n}\r\n\r\nexport function TransactionListView(props: TransactionListViewProps) {\r\n\r\n\tfunction toDatestring(date: Date) {\r\n\t\treturn date.getFullYear() === currentYear\r\n\t\t\t? format(date, \"dd.MM.\")\r\n\t\t\t: format(date, \"dd.MM.yyyy\")\r\n\t}\r\n\r\n\treturn <div className={styles.root}>\r\n\r\n\t\t<ul className={styles.datesList}>\r\n\r\n\t\t\t{\r\n\t\t\t\tprops.itemsByDates.map(entry => {\r\n\r\n\t\t\t\t\tconst datestring = toDatestring(entry.date)\r\n\r\n\t\t\t\t\treturn <li key={datestring} className={styles.dateListing}>\r\n\r\n\t\t\t\t\t\t<p className={styles.datestring}>\r\n\t\t\t\t\t\t\t{datestring}\r\n\t\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t\t<ul className={styles.transactionsList}>\r\n\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tentry.items.map(item => {\r\n\r\n\t\t\t\t\t\t\t\t\treturn <li key={item.id} className={styles.transactionListing}>\r\n\t\t\t\t\t\t\t\t\t\t<TransactionListing transaction={item} />\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t</ul>\r\n\r\n\t\t\t\t\t</li>\r\n\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t</ul>\r\n\r\n\t</div>\r\n}\r\n\r\nconst currentYear = new Date().getFullYear()","import React from \"react\"\r\nimport { TransactionListView } from \"./TransactionListView\"\r\nimport { useStoreState } from \"../../store\"\r\n\r\nexport type TransactionListProps = {\r\n\r\n}\r\n\r\nexport function TransactionList(props: TransactionListProps) {\r\n\r\n\tconst itemsByDates = useStoreState(_ => _.transactions.itemsByDates)\r\n\r\n\treturn <TransactionListView\r\n\t\titemsByDates={itemsByDates}\r\n\t/>\r\n}","import React from \"react\";\r\nimport { TransactionList } from \"../../components/TransactionList/TransactionList\";\r\nimport { Auth } from \"../../models/authentication/auth.class\";\r\n\r\nexport type DashboardTabViewProps = {\r\n\tuser: Auth;\r\n}\r\n\r\nexport function DashboardTabView(props: DashboardTabViewProps) {\r\n\r\n\treturn <div>\r\n\r\n\t\t<header>\r\n\r\n\t\t\t<h1 >\r\n\t\t\t\t{`Welcome back, ${props.user.displayName}`}\r\n\t\t\t</h1>\r\n\r\n\t\t</header>\r\n\r\n\t\t<section>\r\n\r\n\t\t\t<TransactionList />\r\n\r\n\t\t</section>\r\n\r\n\t</div>\r\n\r\n}","import React from \"react\"\r\nimport { DashboardTabView } from \"./DashboardTabView\"\r\nimport { useStoreState } from \"../../store\"\r\n\r\nexport function DashboardTab() {\r\n\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\r\n\tif (!user) return null\r\n\r\n\treturn <DashboardTabView user={user} />\r\n}","import styles from \"./SettingsTabView.module.css\";\r\nimport React from \"react\"\r\nimport { Auth } from \"../../models/authentication/auth.class\";\r\n\r\nexport type SettingsTabViewProps = {\r\n\tuser: Auth;\r\n\thandleLogout(): void;\r\n}\r\n\r\nexport function SettingsTabView(props: SettingsTabViewProps) {\r\n\r\n\treturn <div className={styles.root}>\r\n\r\n\t\t{\r\n\t\t\tprops.user.photoUrl ? <img style={{ width: 64, height: 64 }} alt=\"profile\" src={props.user.photoUrl} /> : null\r\n\t\t}\r\n\r\n\t\t<table>\r\n\t\t\t<tbody>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Display name</td>\r\n\t\t\t\t\t<td>{props.user.displayName}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Email</td>\r\n\t\t\t\t\t<td>{props.user.email}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>ID</td>\r\n\t\t\t\t\t<td>{props.user.id}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<td>Google ID</td>\r\n\t\t\t\t\t<td>{props.user.googleId}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\r\n\t\t<button onClick={props.handleLogout}>Log out</button>\r\n\r\n\t</div>\r\n}","import React from \"react\"\r\nimport { SettingsTabView } from \"./SettingsTabView\"\r\nimport { useStoreState, useStoreActions } from \"../../store\"\r\n\r\nexport type SettingsTabProps = {\r\n\r\n}\r\n\r\nexport function SettingsTab(props: SettingsTabProps) {\r\n\tconst user = useStoreState(_ => _.auth.user)\r\n\tconst logout = useStoreActions(_ => _.auth.logout)\r\n\r\n\tfunction handleLogout() {\r\n\t\tlogout()\r\n\t}\r\n\r\n\tif (!user) return null\r\n\r\n\treturn <SettingsTabView\r\n\t\tuser={user}\r\n\t\thandleLogout={handleLogout}\r\n\t/>\r\n}","import React from \"react\"\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { LoginController } from './views/Login/LoginController';\r\nimport { RegisterController } from './views/Register/RegisterController';\r\nimport AppLayout from './components/AppLayout/AppLayout';\r\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute';\r\nimport { DashboardTab } from './views/DashboardTab/DashboardTabController';\r\nimport { SettingsTab } from \"./views/SettingsTab/SettingsTabController\";\r\n\r\nexport const routes = {\r\n\tapproot: \"/app\",\r\n\tdashboard: \"/app/dashboard\",\r\n\tanalytics: \"/app/analytics\",\r\n\tbudget: \"/app/budget\",\r\n\tsettings: \"/app/settings\",\r\n\tlogin: \"/\",\r\n\tregister: \"/register\",\r\n} as const;\r\n\r\nexport function Routes() {\r\n\r\n\treturn <Switch>\r\n\r\n\t\t<Route exact path={routes.login}>\r\n\t\t\t<LoginController />\r\n\t\t</Route>\r\n\r\n\t\t<Route exact path={routes.register}>\r\n\t\t\t<RegisterController />\r\n\t\t</Route>\r\n\r\n\t\t<ProtectedRoute exact path={routes.dashboard}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<DashboardTab />\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.analytics}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<p>Analytics placeholder</p>\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.budget}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<p>Budget placeholder</p>\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.settings}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<SettingsTab />\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<Route path=\"/\">\r\n\t\t\t<Redirect to={routes.dashboard} />\r\n\t\t</Route>\r\n\t</Switch>\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport { Routes } from './Routes';\r\nimport { useStoreActions } from './store';\r\n\r\nfunction App() {\r\n\r\n\t/**\r\n\t * Initialize by fetching the user's profile if any\r\n\t */\r\n\tconst getProfile = useStoreActions(_ => _.auth.getProfile)\r\n\r\n\tuseEffect(() => {\r\n\t\tgetProfile()\r\n\t}, [getProfile])\r\n\r\n\treturn <Routes />\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import \"./styles/reset.css\"\r\nimport \"./styles/variables.css\"\r\nimport \"./styles/index.css\"\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { StoreProvider } from 'easy-peasy';\r\nimport { store } from './store';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n\t<StoreProvider store={store}>\r\n\t\t<React.StrictMode>\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<App />\r\n\t\t\t</BrowserRouter>\r\n\t\t</React.StrictMode>\r\n\t</StoreProvider>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TransactionListView_root__1rx7K\",\"dateListing\":\"TransactionListView_dateListing__3uzhE\",\"datestring\":\"TransactionListView_datestring__3VHWW\",\"transactionsList\":\"TransactionListView_transactionsList__37_EE\",\"transactionListing\":\"TransactionListView_transactionListing__b05YQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Modal_root__1r1Jt\",\"background\":\"Modal_background__38SYU\",\"modal\":\"Modal_modal__1Y802\",\"modal-in\":\"Modal_modal-in__1B33x\",\"modalContent\":\"Modal_modalContent__2KXGv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"AppLayout_root__HugPe\",\"childrenContainer\":\"AppLayout_childrenContainer__3oGra\"};"],"sourceRoot":""}