{"version":3,"sources":["components/Login/LoginView.tsx","models/transactions/transactions.class.ts","models/transactions/transactions.constructable.ts","config.ts","services/BaseService.ts","models/transactions/transactions.model.ts","services/TransactionService.ts","models/authentication/user.class.ts","models/authentication/user.constructable.ts","models/authentication/auth.model.ts","services/AuthService.ts","store.ts","components/Login/LoginController.tsx","components/Register/RegisterView.tsx","components/Register/RegisterController.tsx","components/AppTabs/AppTabs.tsx","components/AppLayout/AppLayout.tsx","components/ProtectedRoute/ProtectedRoute.tsx","views/HomeScreen/HomeScreenView.tsx","Routes.tsx","App.tsx","serviceWorker.ts","theme.ts","index.tsx"],"names":["LoginView","props","useForm","resolver","yupResolver","loginValidationSchema","register","handleSubmit","errors","formState","emailError","touched","email","message","passwordError","password","className","onSubmit","id","name","type","ref","style","color","e","preventDefault","handleGoogleSubmit","Transaction","constructable","date","category","comment","integerAmount","this","Date","Math","floor","uuid","abs","amount","ceil","euros","toFixed","cents","padStart","formatSign","formatEuros","formatCents","transactionConstructableSchema","yup","uid","defined","integer","optional","nullable","isTransactionConstructable","arg","validateSync","error","config","productionApiBaseURL","developmentApiBaseURL","testApiBaseURL","getApiBaseURL","BaseService","baseURL","axios","Axios","create","withCredentials","path","token","store","getState","authentication","accessToken","payload","jwt","decode","expiresAt","Number","exp","now","console","warn","force","isAccessTokenValid","url","endpoint","get","result","data","getActions","setAccessToken","logOut","attemptRefreshAccessToken","headers","Authorization","String","onBeforeRequest","requestConfig","getDefaultAxiosConfig","onAfterRequest","post","delete","put","patch","transactionService","transactionsModel","items","count","computed","state","length","getTransactions","thunk","actions","a","Array","isArray","every","createTransactions","createTransaction","action","push","constructables","map","_","removeTransaction","filter","updateTransaction","User","displayName","photoUrl","googleId","undefined","isStringOrNullish","authService","values","window","location","href","storeModel","transactions","loading","setLoading","user","isLoggedIn","Boolean","applyUserConstructable","newAccessToken","getProfile","isNonEmptyString","logInWithGoogle","createStore","typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","useStore","min","max","LoginController","log","RegisterView","registerValidationSchema","repeatPasswordError","repeatPassword","oneOf","RegisterController","AppTabs","styles","useStyles","history","useHistory","dashboardMatch","useRouteMatch","routes","dashboard","analyticsMatch","analytics","budgetMatch","budget","settingsMatch","settings","cx","root","content","spacer","tab","active","IconButton","onClick","centerTab","centerTabBackground","version","x","y","width","height","viewBox","d","floatingButton","makeStyles","theme","spacing","background","palette","grey","display","clipPath","position","top","left","transform","borderRadius","primary","main","backgroundColor","light","flex","placeItems","AppLayout","childrenContainer","children","overflow","maxWidth","maxHeight","gridTemplateRows","gridTemplateColumns","gridTemplateAreas","gridArea","ProtectedRoute","fallbackRoute","routeProps","defaultFallbackRoute","login","to","HomeScreenView","header","Typography","headerTitle","padding","fontSize","typography","fontWeight","fontWeightBold","Navigation","margin","flexDirection","alignItems","approot","Routes","exact","App","useEffect","hostname","match","createMuiTheme","dark","contrastText","A100","A200","A400","A700","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.488336bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { loginValidationSchema, LoginFormType } from './LoginController';\r\nimport { yupResolver } from '@hookform/resolvers';\r\n\r\nexport type LoginViewProps = {\r\n\thandleSubmit(values: LoginFormType): Promise<void>;\r\n\thandleGoogleSubmit(): Promise<void>;\r\n}\r\n\r\n\r\nexport const LoginView: React.FC<LoginViewProps> = (props) => {\r\n\r\n\tconst { register, handleSubmit, errors, formState } = useForm<LoginFormType>({\r\n\t\tresolver: yupResolver(loginValidationSchema),\r\n\t})\r\n\r\n\tconst emailError = formState.touched.email && errors.email?.message\r\n\tconst passwordError = formState.touched.password && errors.password?.message\r\n\r\n\treturn <div className=\"LoginView\">\r\n\t\t<form onSubmit={handleSubmit(props.handleSubmit)}>\r\n\r\n\t\t\t<input id=\"login-email\" name=\"email\" type=\"text\" ref={register} />\r\n\t\t\t<p style={{ color: \"#FF6622\" }}>{emailError}</p>\r\n\r\n\t\t\t<input id=\"login-password\" name=\"password\" type=\"password\" ref={register} />\r\n\t\t\t<p style={{ color: \"#FF6622\" }}>{passwordError}</p>\r\n\r\n\t\t\t<button type=\"submit\">{\"Log in\"}</button>\r\n\r\n\t\t</form >\r\n\r\n\t\t<p>{\"or\"}</p>\r\n\r\n\t\t<form onSubmit={e => { e.preventDefault(); props.handleGoogleSubmit() }}>\r\n\t\t\t<button type=\"submit\">{\"Log in with Google\"}</button>\r\n\t\t</form>\r\n\t</div>\r\n}\r\n","import { TransactionConstructable } from \"./transactions.constructable\";\r\nimport * as uuid from \"uuid\";\r\n\r\nexport class Transaction {\r\n  date: Date;\r\n  category: string;\r\n  comment: string;\r\n  integerAmount: number;\r\n  id: string;\r\n\r\n  constructor(constructable: TransactionConstructable) {\r\n    this.date = new Date(constructable.date);\r\n    this.comment = constructable.comment || \"\";\r\n    this.category = constructable.category;\r\n    this.integerAmount = Math.floor(constructable.integerAmount);\r\n    this.id = constructable.id || uuid.v4();\r\n  }\r\n\r\n  get amount() {\r\n    return this.integerAmount / 100;\r\n  }\r\n\r\n  get unsignedIntegerAmount() {\r\n    return Math.abs(this.integerAmount);\r\n  }\r\n\r\n  get unsignedAmount() {\r\n    return Math.abs(this.amount);\r\n  }\r\n\r\n  get euros() {\r\n    if (this.integerAmount > 0) {\r\n      return Math.floor(this.integerAmount / 100);\r\n    } else {\r\n      return Math.ceil(this.integerAmount / 100);\r\n    }\r\n  }\r\n\r\n  get formatEuros() {\r\n    return Math.abs(this.euros).toFixed(0);\r\n  }\r\n\r\n  get cents() {\r\n    return Math.floor(this.integerAmount % 100);\r\n  }\r\n\r\n  get formatCents() {\r\n    return Math.abs(this.cents).toFixed(0).padStart(2, \"0\");\r\n  }\r\n\r\n  get sign(): -1 | 0 | 1 {\r\n    return this.integerAmount === 0 ? 0 : this.integerAmount > 0 ? 1 : -1;\r\n  }\r\n\r\n  get formatSign() {\r\n    return this.integerAmount === 0 ? \"±\" : this.integerAmount > 0 ? \"+\" : \"-\";\r\n  }\r\n\r\n  get formatFull() {\r\n    return this.formatSign + this.formatEuros + \".\" + this.formatCents;\r\n  }\r\n}\r\n","import * as yup from \"yup\";\r\n\r\nexport const transactionConstructableSchema = yup\r\n  .object({\r\n    uid: yup.string().defined(),\r\n    date: yup.number().defined(),\r\n    category: yup.string().defined(),\r\n    integerAmount: yup.number().defined().integer(),\r\n    comment: yup.string().optional().nullable(),\r\n    id: yup.string().optional().nullable(),\r\n  })\r\n  .defined();\r\n\r\nexport type TransactionConstructable = yup.InferType<\r\n  typeof transactionConstructableSchema\r\n>;\r\n\r\nexport function isTransactionConstructable(\r\n  arg: any\r\n): arg is TransactionConstructable {\r\n  try {\r\n    transactionConstructableSchema.validateSync(arg);\r\n    return true;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport function isTransactionConstructableArray(\r\n  arg: any\r\n): arg is TransactionConstructable[] {\r\n  return Array.isArray(arg) && arg.every(isTransactionConstructable);\r\n}\r\n","export const config = {\r\n  productionApiBaseURL: \"https://expenceapp.herokuapp.com\",\r\n  developmentApiBaseURL: \"http://localhost:4000\",\r\n  testApiBaseURL: \"http://localhost:4000\",\r\n  getApiBaseURL() {\r\n    switch (process.env.NODE_ENV) {\r\n      case \"production\":\r\n        return config.productionApiBaseURL;\r\n      case \"development\":\r\n        return config.developmentApiBaseURL;\r\n      case \"test\":\r\n        return config.testApiBaseURL;\r\n    }\r\n  },\r\n};\r\n","import Axios, { AxiosInstance, AxiosRequestConfig } from \"axios\";\r\nimport { config } from \"../config\";\r\nimport { store } from \"../store\";\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nexport class BaseService {\r\n  baseURL: string;\r\n  axios: AxiosInstance;\r\n\r\n  /**\r\n   * Set up base URL and axios instance for service\r\n   */\r\n  constructor() {\r\n    this.baseURL = `${config.getApiBaseURL()}/api`;\r\n    this.axios = Axios.create({ baseURL: this.baseURL, withCredentials: true });\r\n  }\r\n\r\n  /**\r\n   * Construct endpoint from path, base URL already handled\r\n   */\r\n  endpoint(path: string) {\r\n    return `${this.baseURL}${path}`;\r\n  }\r\n\r\n  /**\r\n   * Ensure access token is valid\r\n   */\r\n  isAccessTokenValid() {\r\n    const token = store.getState().authentication.accessToken;\r\n    if (!token) return false;\r\n    try {\r\n      const payload = jwt.decode(token) as any;\r\n      const expiresAt = Number(payload?.exp || 0) * 1000;\r\n      const expirationBuffer = 5000; // Fetch new access token 30 seconds before expiration\r\n      const tokenIsValid = Date.now() < expiresAt - expirationBuffer;\r\n      return tokenIsValid;\r\n    } catch (error) {\r\n      console.warn(\"Error occured while checking access token\", error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attempt refresh access token function\r\n   */\r\n  async attemptRefreshAccessToken(force: boolean = false) {\r\n    const accessTokenIsValid = this.isAccessTokenValid();\r\n    if (!accessTokenIsValid || force) {\r\n      const url = this.endpoint(\"/auth/refresh_token\");\r\n      try {\r\n        const result = await this.axios.get<string>(url);\r\n        const accessToken = result.data;\r\n        store.getActions().authentication.setAccessToken(accessToken);\r\n      } catch (e) {\r\n        if (store.getState().authentication.accessToken) {\r\n          store.getActions().authentication.logOut();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Before request hook\r\n   */\r\n  async onBeforeRequest() {\r\n    await this.attemptRefreshAccessToken();\r\n  }\r\n\r\n  /**\r\n   * After request hook\r\n   */\r\n  async onAfterRequest() {}\r\n\r\n  /**\r\n   * Gets basic axios config\r\n   */\r\n  getDefaultAxiosConfig(): AxiosRequestConfig {\r\n    const accessToken = store.getState().authentication.accessToken;\r\n    return {\r\n      headers: {\r\n        Authorization: `bearer ${String(accessToken)}`,\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Axios typed GET request wrapper with hooks\r\n   */\r\n  async get<T = any>(path: string, config?: AxiosRequestConfig | undefined) {\r\n    const url = this.endpoint(path);\r\n    await this.onBeforeRequest();\r\n    const requestConfig = { ...config, ...this.getDefaultAxiosConfig() };\r\n    const result = await this.axios.get<T>(url, requestConfig);\r\n    await this.onAfterRequest();\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Axios typed POST request wrapper with hooks\r\n   */\r\n  async post<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    const url = this.endpoint(path);\r\n    await this.onBeforeRequest();\r\n    const requestConfig = { ...config, ...this.getDefaultAxiosConfig() };\r\n    const result = await this.axios.post<ResponseData>(url, requestConfig);\r\n    await this.onAfterRequest();\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Axios typed DELETE request wrapper with hooks\r\n   */\r\n  async delete<T = any>(path: string, config?: AxiosRequestConfig | undefined) {\r\n    const url = this.endpoint(path);\r\n    await this.onBeforeRequest();\r\n    const requestConfig = { ...config, ...this.getDefaultAxiosConfig() };\r\n    const result = await this.axios.delete<T>(url, requestConfig);\r\n    await this.onAfterRequest();\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Axios typed PUT request wrapper with hooks\r\n   */\r\n  async put<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    const url = this.endpoint(path);\r\n    await this.onBeforeRequest();\r\n    const requestConfig = { ...config, ...this.getDefaultAxiosConfig() };\r\n    const result = await this.axios.put<ResponseData>(url, data, requestConfig);\r\n    await this.onAfterRequest();\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Axios typed PATCH request wrapper with hooks\r\n   */\r\n  async patch<RequestData = any, ResponseData = any>(\r\n    path: string,\r\n    data?: RequestData,\r\n    config?: AxiosRequestConfig\r\n  ) {\r\n    const url = this.endpoint(path);\r\n    await this.onBeforeRequest();\r\n    const requestConfig = { ...config, ...this.getDefaultAxiosConfig() };\r\n    const result = await this.axios.patch<ResponseData>(\r\n      url,\r\n      data,\r\n      requestConfig\r\n    );\r\n    await this.onAfterRequest();\r\n    return result;\r\n  }\r\n}\r\n","import { Action, action, Computed, computed, Thunk, thunk } from \"easy-peasy\";\r\nimport { Transaction } from \"./transactions.class\";\r\nimport {\r\n  TransactionConstructable,\r\n  isTransactionConstructableArray,\r\n} from \"./transactions.constructable\";\r\nimport { TransactionService } from \"../../services/TransactionService\";\r\n\r\nconst transactionService = new TransactionService();\r\n\r\nexport interface TransactionsModel {\r\n  /**\r\n   * Current transactions\r\n   */\r\n  items: Transaction[];\r\n\r\n  /**\r\n   * Current amount of transactions\r\n   */\r\n  count: Computed<TransactionsModel, number>;\r\n\r\n  /**\r\n   * Fetch all transactions for user from server\r\n   */\r\n  getTransactions: Thunk<TransactionsModel, void>;\r\n\r\n  /**\r\n   * Create a transaction from a transaction constructable\r\n   */\r\n  createTransaction: Action<TransactionsModel, TransactionConstructable>;\r\n\r\n  /**\r\n   * Create multiple transactions from a transaction constructable\r\n   */\r\n  createTransactions: Action<TransactionsModel, TransactionConstructable[]>;\r\n\r\n  /**\r\n   * Removes a single transaction by its ID\r\n   */\r\n  removeTransaction: Action<TransactionsModel, string>;\r\n\r\n  /**\r\n   * Update a signle transaction (transaction constructable argument must contain ID)\r\n   */\r\n  updateTransaction: Action<TransactionsModel, TransactionConstructable>;\r\n}\r\n\r\nexport const transactionsModel: TransactionsModel = {\r\n  items: [],\r\n\r\n  count: computed((state) => state.items.length),\r\n\r\n  getTransactions: thunk(async (actions) => {\r\n    const result = await transactionService.getTransactions();\r\n    if (isTransactionConstructableArray(result.data)) {\r\n      actions.createTransactions(result.data);\r\n    }\r\n  }),\r\n\r\n  createTransaction: action((state, constructable) => {\r\n    state.items.push(new Transaction(constructable));\r\n  }),\r\n\r\n  createTransactions: action((state, constructables) => {\r\n    state.items.push(...constructables.map((_) => new Transaction(_)));\r\n  }),\r\n\r\n  removeTransaction: action((state, id) => {\r\n    state.items = state.items.filter((_) => _.id !== id);\r\n  }),\r\n\r\n  updateTransaction: action((state, constructable) => {\r\n    state.items = state.items.map((_) => {\r\n      return _.id === constructable.id ? new Transaction(constructable) : _;\r\n    });\r\n  }),\r\n};\r\n","import { BaseService } from \"./BaseService\";\r\nimport { TransactionConstructable } from \"../models/transactions/transactions.constructable\";\r\n\r\nexport class TransactionService extends BaseService {\r\n  getTransactions() {\r\n    return this.get<TransactionConstructable[]>(\"/transactions\");\r\n  }\r\n\r\n  postTransaction(constructable: TransactionConstructable) {\r\n    return this.post<TransactionConstructable, TransactionConstructable>(\r\n      \"/transactions\",\r\n      constructable\r\n    );\r\n  }\r\n\r\n  deleteTransaction(id: string) {\r\n    return this.delete(`/transactions/${id}`);\r\n  }\r\n\r\n  patchTransaction(constructable: TransactionConstructable) {\r\n    if (constructable.id) {\r\n      return this.patch<TransactionConstructable, TransactionConstructable>(\r\n        `/transactions/${constructable.id}`\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { UserConstructable } from \"./user.constructable\";\r\n\r\nexport class User {\r\n  id: string;\r\n  displayName?: string;\r\n  email?: string;\r\n  photoUrl?: string;\r\n  googleId?: string;\r\n\r\n  constructor(constructable: UserConstructable) {\r\n    this.id = constructable.id;\r\n    this.displayName = constructable.displayName || undefined;\r\n    this.email = constructable.email || undefined;\r\n    this.photoUrl = constructable.photoUrl || undefined;\r\n    this.googleId = constructable.googleId || undefined;\r\n  }\r\n}\r\n","export interface UserConstructable {\r\n  id: string;\r\n  displayName: string | undefined | null;\r\n  photoUrl: string | undefined | null;\r\n  email: string | undefined | null;\r\n  googleId: string | undefined | null;\r\n}\r\n\r\nfunction isNonEmptyString(arg: any): arg is string {\r\n  return typeof arg === \"string\" && arg.length > 0;\r\n}\r\n\r\nfunction isStringOrNullish(arg: any): arg is string | null | undefined {\r\n  return typeof arg === \"string\" || arg === undefined || arg === null;\r\n}\r\n\r\nexport function isUserConstructable(arg: any): arg is UserConstructable {\r\n  if (typeof arg !== \"object\") return false;\r\n  if (!isNonEmptyString(arg.id)) return false;\r\n  if (!isStringOrNullish(arg.displayName)) return false;\r\n  if (!isStringOrNullish(arg.googleId)) return false;\r\n  if (!isStringOrNullish(arg.photoUrl)) return false;\r\n  if (!isStringOrNullish(arg.email)) return false;\r\n  return true;\r\n}\r\n","import { Action, action, Computed, computed, Thunk, thunk } from \"easy-peasy\";\r\nimport { User } from \"./user.class\";\r\n// import { isUserConstructable } from \"./user.constructable\";\r\n// import jwt from \"jsonwebtoken\";\r\nimport { AuthService } from \"../../services/AuthService\";\r\nimport { isUserConstructable, UserConstructable } from \"./user.constructable\";\r\n\r\n/**\r\n * An instance of the auth service for the authentication model to use\r\n */\r\nexport const authService = new AuthService();\r\n\r\n/**\r\n * Defining the current user, access token and user functions\r\n */\r\nexport interface AuthenticationModel {\r\n  /**\r\n   * Has the application automatically fetched the current user's profile?\r\n   */\r\n  loading: boolean;\r\n\r\n  /**\r\n   * Function to mark as initialized\r\n   */\r\n  setLoading: Action<AuthenticationModel, boolean>;\r\n\r\n  /**\r\n   * Currently loggged in user or null if none logged in\r\n   */\r\n  user: User | null;\r\n\r\n  /**\r\n   * Computed property for whether the user is currently logged in\r\n   */\r\n  isLoggedIn: Computed<AuthenticationModel, boolean>;\r\n\r\n  /**\r\n   * Action to set the current user with partial user data (a constructable)\r\n   */\r\n  applyUserConstructable: Action<AuthenticationModel, UserConstructable>;\r\n\r\n  /**\r\n   * Current access token for authentication in memory for security purposes.\r\n   * This is automatically refreshed when making a request with a service and\r\n   * should not be manually set.\r\n   */\r\n  accessToken: string | null;\r\n\r\n  /**\r\n   * Function to set the access token\r\n   */\r\n  setAccessToken: Action<AuthenticationModel, string>;\r\n\r\n  /**\r\n   * Function to get the currently logged in user's profile data and apply it\r\n   * to the user property. The logged in property is defined by the current\r\n   * refresh token.\r\n   */\r\n  getProfile: Thunk<AuthenticationModel, void>;\r\n\r\n  /**\r\n   * Log in the current user with a Google account\r\n   */\r\n  logInWithGoogle: Thunk<AuthenticationModel, void>;\r\n\r\n  /**\r\n   * Log out the current user\r\n   */\r\n  logOut: Thunk<AuthenticationModel, void>;\r\n}\r\n\r\n/**\r\n * Implementation of the authentication model\r\n */\r\nexport const authenticationModel: AuthenticationModel = {\r\n  loading: true,\r\n\r\n  setLoading: action((state) => {\r\n    state.loading = false;\r\n  }),\r\n\r\n  user: null,\r\n\r\n  isLoggedIn: computed((state) => Boolean(state.user)),\r\n\r\n  applyUserConstructable: action((state, constructable) => {\r\n    state.user = new User(constructable);\r\n  }),\r\n\r\n  accessToken: null,\r\n\r\n  setAccessToken: action((state, newAccessToken) => {\r\n    state.accessToken = newAccessToken;\r\n  }),\r\n\r\n  getProfile: thunk(async (actions) => {\r\n    try {\r\n      const result = await authService.getProfile();\r\n      if (isUserConstructable(result.data)) {\r\n        actions.applyUserConstructable(result.data);\r\n      }\r\n    } catch (error) {\r\n      console.warn(\"Not logged in\");\r\n    } finally {\r\n      actions.setLoading(false);\r\n    }\r\n  }),\r\n\r\n  logInWithGoogle: thunk(() => {\r\n    authService.logInWithGoogle();\r\n  }),\r\n\r\n  logOut: thunk(() => {\r\n    authService.logOut();\r\n  }),\r\n};\r\n","import { BaseService } from \"./BaseService\";\r\nimport { UserConstructable } from \"../models/authentication/user.constructable\";\r\n\r\ntype EmailAndPassword = { email: string; password: string };\r\n\r\nexport class AuthService extends BaseService {\r\n  getProfile() {\r\n    return this.get<UserConstructable>(\"/auth/profile\");\r\n  }\r\n\r\n  registerWithEmailAndPassword(values: EmailAndPassword) {\r\n    return this.post<EmailAndPassword, void>(\"/auth/register\", values);\r\n  }\r\n\r\n  logInWithEmailAndPassword(values: { email: string; password: string }) {\r\n    return this.post<EmailAndPassword, void>(\"/auth/login\", values);\r\n  }\r\n\r\n  logInWithGoogle() {\r\n    window.location.href = this.endpoint(\"/auth/google\");\r\n  }\r\n\r\n  logOut() {\r\n    window.location.href = this.endpoint(\"/auth/logout\");\r\n  }\r\n}\r\n","import { createStore, createTypedHooks } from \"easy-peasy\";\r\nimport {\r\n  TransactionsModel,\r\n  transactionsModel,\r\n} from \"./models/transactions/transactions.model\";\r\nimport {\r\n  AuthenticationModel,\r\n  authenticationModel,\r\n} from \"./models/authentication/auth.model\";\r\n\r\nexport interface StoreModel {\r\n  transactions: TransactionsModel;\r\n  authentication: AuthenticationModel;\r\n}\r\n\r\nconst storeModel: StoreModel = {\r\n  transactions: transactionsModel,\r\n  authentication: authenticationModel,\r\n};\r\n\r\nexport const store = createStore(storeModel);\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).store = store;\r\n}\r\n\r\nexport const typedHooks = createTypedHooks<StoreModel>();\r\n\r\nexport const useStoreActions = typedHooks.useStoreActions;\r\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\r\nexport const useStoreState = typedHooks.useStoreState;\r\nexport const useStore = typedHooks.useStore;\r\n","import React from 'react';\r\nimport { LoginView } from './LoginView';\r\nimport * as yup from \"yup\"\r\nimport { useStoreActions } from '../../store';\r\n\r\nexport const loginValidationSchema = yup.object({\r\n\temail: yup.string().defined().min(3).max(255).email(),\r\n\tpassword: yup.string().defined().min(3).max(255),\r\n}).defined()\r\n\r\nexport type LoginFormType = yup.InferType<typeof loginValidationSchema>\r\n\r\nexport const LoginController: React.FC<{}> = () => {\r\n\r\n\tconst logInWithGoogle = useStoreActions(_ => _.authentication.logInWithGoogle)\r\n\r\n\tasync function handleSubmit(values: LoginFormType) {\r\n\t\tconsole.log(\"Submitted\")\r\n\t}\r\n\r\n\tasync function handleGoogleSubmit() {\r\n\t\tlogInWithGoogle()\r\n\t}\r\n\r\n\treturn <LoginView {...{ handleGoogleSubmit, handleSubmit }} />\r\n}","import React from 'react';\r\nimport { useForm } from \"react-hook-form\"\r\nimport { registerValidationSchema, RegisterFormType } from './RegisterController';\r\nimport { yupResolver } from '@hookform/resolvers';\r\n\r\nexport type RegisterViewProps = {\r\n\thandleSubmit(values: RegisterFormType): Promise<void>;\r\n}\r\n\r\nexport const RegisterView: React.FC<RegisterViewProps> = (props) => {\r\n\r\n\tconst { register, handleSubmit, errors, formState } = useForm<RegisterFormType>({\r\n\t\tresolver: yupResolver(registerValidationSchema),\r\n\r\n\t})\r\n\r\n\tconst emailError = formState.touched.email && errors.email?.message\r\n\tconst passwordError = formState.touched.password && errors.password?.message\r\n\tconst repeatPasswordError = formState.touched.repeatPassword && errors.repeatPassword?.message\r\n\r\n\treturn <form onSubmit={handleSubmit(props.handleSubmit)}>\r\n\r\n\t\t<input id=\"register-email\" name=\"email\" type=\"text\" ref={register} />\r\n\t\t<p style={{ color: \"#FF6622\" }}>{emailError}</p>\r\n\r\n\t\t<input id=\"register-password\" name=\"password\" type=\"password\" ref={register} />\r\n\t\t<p style={{ color: \"#FF6622\" }}>{passwordError}</p>\r\n\r\n\t\t<input id=\"register-repeat-password\" name=\"repeatPassword\" type=\"password\" ref={register} />\r\n\t\t<p style={{ color: \"#FF6622\" }}>{repeatPasswordError}</p>\r\n\r\n\t\t<button type=\"submit\">{\"Register\"}</button>\r\n\r\n\t</form >\r\n}","import React from 'react';\r\nimport { RegisterView } from './RegisterView';\r\nimport * as yup from \"yup\"\r\n\r\nexport const registerValidationSchema = yup.object({\r\n\temail: yup.string().defined().min(3).max(255).email(),\r\n\tpassword: yup.string().defined().min(3).max(255),\r\n\trepeatPassword: yup.string().defined().oneOf([yup.ref(\"password\")], \"passwords must match\")\r\n}).defined()\r\n\r\nexport type RegisterFormType = yup.InferType<typeof registerValidationSchema>\r\n\r\nexport const RegisterController: React.FC<{}> = () => {\r\n\r\n\tasync function handleSubmit(values: RegisterFormType) {\r\n\t\tconsole.log(\"Submitted\")\r\n\t}\r\n\r\n\treturn <RegisterView handleSubmit={handleSubmit} />\r\n}","import React from \"react\"\r\nimport cx from \"classnames\"\r\nimport { makeStyles, IconButton } from \"@material-ui/core\"\r\nimport {\r\n\tHome as DashboardIcon,\r\n\tAssessment as AnalyticsIcon,\r\n\tAccountBalance as BudgetIcon,\r\n\tPerson as UserIcon,\r\n\tAdd as NewTransactionIcon,\r\n} from \"@material-ui/icons\"\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\"\r\nimport { routes } from \"../../Routes\"\r\n\r\nexport default function AppTabs() {\r\n\r\n\tconst styles = useStyles()\r\n\r\n\tconst history = useHistory()\r\n\r\n\tconst dashboardMatch = useRouteMatch(routes.dashboard)\r\n\tconst analyticsMatch = useRouteMatch(routes.analytics)\r\n\tconst budgetMatch = useRouteMatch(routes.budget)\r\n\tconst settingsMatch = useRouteMatch(routes.settings)\r\n\r\n\treturn <div className={cx(styles.root, \"AppTabs\")}>\r\n\r\n\t\t<div className={styles.content}>\r\n\r\n\t\t\t<div className={styles.spacer} />\r\n\t\t\t<div className={cx(styles.tab, { active: !!dashboardMatch })}>\r\n\t\t\t\t<IconButton onClick={() => history.push(routes.dashboard)}>\r\n\t\t\t\t\t<DashboardIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t\t<div className={cx(styles.tab, { active: !!analyticsMatch })}>\r\n\t\t\t\t<IconButton onClick={() => history.push(routes.analytics)}>\r\n\t\t\t\t\t<AnalyticsIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className={cx(styles.centerTab)}>\r\n\r\n\t\t\t\t<div className={cx(styles.centerTabBackground)}>\r\n\t\t\t\t\t<svg id=\"center-tab-svg\" version=\"1.1\" x=\"0px\" y=\"0px\" width=\"100px\" height=\"60px\" viewBox=\"0 0 100 60\">\r\n\t\t\t\t\t\t<defs>\r\n\t\t\t\t\t\t\t<clipPath id=\"center-tab-clip-path\">\r\n\t\t\t\t\t\t\t\t<path d=\"M99.2,0C89.6,0,81,5.5,76.5,14c-5,9.5-15,16-26.5,16s-21.5-6.5-26.5-16C19,5.5,10.4,0,0.8,0L0,0v60h100V0\r\n\tL99.2,0z\"/>\r\n\t\t\t\t\t\t\t</clipPath>\r\n\t\t\t\t\t\t</defs>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<IconButton className={cx(styles.floatingButton)} onClick={() => console.log(\"Clicked\")}>\r\n\t\t\t\t\t<NewTransactionIcon />\r\n\t\t\t\t</IconButton>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div className={cx(styles.tab, { active: !!budgetMatch })}>\r\n\t\t\t\t<IconButton onClick={() => history.push(routes.budget)}>\r\n\t\t\t\t\t<BudgetIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\t\t\t<div className={cx(styles.tab, { active: !!settingsMatch })}>\r\n\t\t\t\t<IconButton onClick={() => history.push(routes.settings)}>\r\n\t\t\t\t\t<UserIcon />\r\n\t\t\t\t</IconButton>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={styles.spacer} />\r\n\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t},\r\n\r\n\tspacer: {\r\n\t\theight: \"100%\",\r\n\t\twidth: theme.spacing(2),\r\n\t\tbackground: theme.palette.grey[50],\r\n\t},\r\n\r\n\tcontent: {\r\n\t\tdisplay: \"flex\",\r\n\t\theight: \"100%\",\r\n\t\tfilter: `drop-shadow(5px 5px 15px rgba(0,0,0,0.16))`,\r\n\t},\r\n\r\n\tcenterTabBackground: {\r\n\t\tbackground: theme.palette.grey[50],\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tclipPath: \"url(#center-tab-clip-path)\",\r\n\r\n\t\t\"#center-tab-svg, #center-tab-clip-path\": {\r\n\t\t\twidth: 100,\r\n\t\t\theight: 60,\r\n\t\t},\r\n\t},\r\n\r\n\tcenterTab: {\r\n\t\tposition: \"relative\",\r\n\t\twidth: 100,\r\n\t\theight: 60,\r\n\t},\r\n\r\n\tfloatingButton: {\r\n\t\tposition: \"absolute\",\r\n\t\ttop: 0,\r\n\t\tleft: \"50%\",\r\n\t\ttransform: \"translate(-50%,-50%)\",\r\n\t\tborderRadius: \"50%\",\r\n\t\tbackground: theme.palette.primary.main,\r\n\t\tfilter: `drop-shadow(5px 5px 15px rgba(0,0,0,0.16))`,\r\n\t\t\"& *\": {\r\n\t\t\tcolor: \"white\",\r\n\t\t},\r\n\t\t\"&:hover\": {\r\n\t\t\tbackgroundColor: theme.palette.primary.light,\r\n\t\t}\r\n\t},\r\n\r\n\ttab: {\r\n\t\tbackground: theme.palette.grey[50],\r\n\t\theight: 60,\r\n\t\twidth: \"100%\",\r\n\t\tflex: 1,\r\n\t\tdisplay: \"grid\",\r\n\t\tplaceItems: \"center\",\r\n\r\n\t\t\"& *\": {\r\n\t\t\tcolor: theme.palette.grey[600],\r\n\t\t},\r\n\r\n\t\t\"&.active *\": {\r\n\t\t\tcolor: theme.palette.primary.main,\r\n\t\t},\r\n\r\n\t\t\"& .MuiIconButton-root\": {\r\n\t\t\theight: \"100%\",\r\n\t\t\twidth: \"100%\",\r\n\t\t\tborderRadius: 0,\r\n\t\t}\r\n\t},\r\n\r\n}))","import React from \"react\"\r\nimport AppTabs from \"../AppTabs/AppTabs\"\r\nimport { makeStyles } from \"@material-ui/core\"\r\nimport cx from \"classnames\"\r\n\r\ntype AppLayoutProps = {\r\n\tchildren?: React.ReactNode\r\n}\r\n\r\nexport default function AppLayout(props: AppLayoutProps) {\r\n\r\n\tconst styles = useStyles()\r\n\r\n\treturn <div className={cx(\"AppLayout\", styles.root)}>\r\n\t\t<AppTabs />\r\n\t\t<div className={styles.childrenContainer}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\toverflow: \"hidden\",\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100vh\",\r\n\t\tmaxWidth: \"100%\",\r\n\t\tmaxHeight: \"100vh\",\r\n\r\n\t\tbackground: \"white\",//theme.palette.grey[200],\r\n\r\n\t\tdisplay: \"grid\",\r\n\r\n\t\tgridTemplateRows: \"auto 60px\",\r\n\t\tgridTemplateColumns: \"1fr\",\r\n\t\tgridTemplateAreas: \"\\\"children\\\" \\\"navbar\\\"\",\r\n\r\n\t\t\"& .AppTabs\": {\r\n\t\t\tgridArea: \"navbar\",\r\n\t\t},\r\n\t},\r\n\r\n\tchildrenContainer: {\r\n\t\tgridArea: \"children\",\r\n\t\theight: \"100%\",\r\n\t\twidth: \"100%\",\r\n\t\toverflow: \"auto\",\r\n\t}\r\n}))","import React from \"react\";\r\nimport { Route, RouteProps, Redirect } from \"react-router-dom\";\r\nimport { useStoreState } from \"../../store\";\r\nimport { routes } from \"../../Routes\";\r\n\r\nexport type ProtectedRouteProps = {\r\n\tfallbackRoute?: string;\r\n} & RouteProps\r\n\r\nexport default function ProtectedRoute(props: ProtectedRouteProps) {\r\n\r\n\tconst { fallbackRoute, ...routeProps } = props\r\n\r\n\t/**\r\n\t * Default fallback to login on redirect\r\n\t */\r\n\tconst defaultFallbackRoute = routes.login\r\n\r\n\t/**\r\n\t * Get current user details\r\n\t */\r\n\tconst loading = useStoreState(_ => _.authentication.loading)\r\n\tconst isLoggedIn = useStoreState(_ => _.authentication.isLoggedIn)\r\n\r\n\t/**\r\n\t * If the user is being loaded, show nothing\r\n\t */\r\n\tif (loading) return null\r\n\r\n\t/**\r\n\t * Else if user is not logged in redirect to fallback route or default fallback route\r\n\t * if none specified in props\r\n\t */\r\n\telse if (!isLoggedIn) return <Redirect to={fallbackRoute || defaultFallbackRoute} />\r\n\r\n\t/**\r\n\t * Else return route as is\r\n\t */\r\n\telse return <Route {...routeProps} />\r\n}","import React from \"react\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\nimport { useStoreState } from \"../../store\";\r\n\r\nexport type HomeScreenViewProps = {}\r\n\r\nexport default function HomeScreenView(props: HomeScreenViewProps) {\r\n\r\n\tconst styles = useStyles()\r\n\r\n\tconst user = useStoreState(_ => _.authentication.user)\r\n\r\n\tif (!user) return null\r\n\r\n\treturn <div className={styles.root}>\r\n\r\n\t\t<header className={styles.header}>\r\n\r\n\t\t\t<Typography className={styles.headerTitle}>\r\n\t\t\t\t{`Welcome back, ${user.displayName}`}\r\n\t\t\t</Typography>\r\n\r\n\t\t</header>\r\n\r\n\t\t<section>\r\n\r\n\t\t\t<Typography>\r\n\t\t\t\t{`Your transactions this month`}\r\n\t\t\t</Typography>\r\n\r\n\t\t</section>\r\n\r\n\t</div>\r\n\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n\troot: {\r\n\t},\r\n\r\n\theader: {\r\n\t\theight: 320,\r\n\t\twidth: \"100%\",\r\n\t\tbackground: theme.palette.primary.main,\r\n\t\tpadding: theme.spacing(2),\r\n\r\n\t\t\"& *\": {\r\n\t\t\tcolor: \"#ffffff\",\r\n\t\t}\r\n\t},\r\n\r\n\theaderTitle: {\r\n\r\n\t\tfontSize: theme.typography.fontSize * 1.5,\r\n\t\tfontWeight: theme.typography.fontWeightBold,\r\n\r\n\t}\r\n\r\n}))","import React from \"react\"\r\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\r\nimport { LoginController } from './components/Login/LoginController';\r\nimport { RegisterController } from './components/Register/RegisterController';\r\nimport AppLayout from './components/AppLayout/AppLayout';\r\nimport ProtectedRoute from './components/ProtectedRoute/ProtectedRoute';\r\nimport HomeScreen from './views/HomeScreen/HomeScreenView';\r\n\r\nfunction Navigation() {\r\n\treturn <nav style={{ margin: \"0 0 16px 0\", display: \"flex\", flexDirection: \"row\", height: 40, background: \"#204aa5\", width: \"100%\", alignItems: \"center\" }}>\r\n\t\t<Link to={routes.login} style={{ color: \"white\", margin: \"0 8px\" }}>Login</Link>\r\n\t\t<Link to={routes.register} style={{ color: \"white\", margin: \"0 8px\" }}>Register</Link>\r\n\t</nav>\r\n}\r\n\r\nexport const routes = {\r\n\tapproot: \"/app\",\r\n\tdashboard: \"/app/dashboard\",\r\n\tanalytics: \"/app/analytics\",\r\n\tbudget: \"/app/budget\",\r\n\tsettings: \"/app/settings\",\r\n\tlogin: \"/\",\r\n\tregister: \"/register\",\r\n} as const;\r\n\r\nexport function Routes() {\r\n\r\n\treturn <Switch>\r\n\t\t<Route exact path={routes.login}>\r\n\t\t\t<Navigation />\r\n\t\t\t<LoginController />\r\n\t\t</Route>\r\n\t\t<Route exact path={routes.register}>\r\n\t\t\t<Navigation />\r\n\t\t\t<RegisterController />\r\n\t\t</Route>\r\n\r\n\t\t<ProtectedRoute exact path={routes.dashboard}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<HomeScreen />\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.analytics}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<p>Analytics placeholder</p>\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.budget}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<p>Budget placeholder</p>\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<ProtectedRoute exact path={routes.settings}>\r\n\t\t\t<AppLayout>\r\n\t\t\t\t<p>Settings placeholder</p>\r\n\t\t\t</AppLayout>\r\n\t\t</ProtectedRoute>\r\n\r\n\t\t<Route path=\"/\">\r\n\t\t\t<Redirect to={routes.dashboard} />\r\n\t\t</Route>\r\n\t</Switch>\r\n\r\n}","import React, { useEffect } from 'react';\nimport { Routes } from './Routes';\nimport { useStoreActions } from './store';\n\nfunction App() {\n\n\t/**\n\t * Initialize by fetching the user's profile if any\n\t */\n\tconst getProfile = useStoreActions(_ => _.authentication.getProfile)\n\n\tuseEffect(() => {\n\t\tgetProfile()\n\t}, [getProfile])\n\n\treturn <Routes />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#5E24FF\",\r\n      light: \"#767EE5\",\r\n      dark: \"#300D94\",\r\n      contrastText: \"#ffffff\",\r\n      A100: \"#5E24FF\",\r\n      A200: \"#5E24FF\",\r\n      A400: \"#5E24FF\",\r\n      A700: \"#5E24FF\",\r\n      \"50\": \"#F7F3FF\",\r\n      \"100\": \"#AEB2EF\",\r\n      \"200\": \"#979DE8\",\r\n      \"300\": \"#767EE5\",\r\n      \"400\": \"#6A4EF6\",\r\n      \"500\": \"#5E24FF\",\r\n      \"600\": \"#420CD8\",\r\n      \"700\": \"#390CB5\",\r\n      \"800\": \"#300D94\",\r\n      \"900\": \"#200D55\",\r\n    },\r\n  },\r\n});\r\n\r\n/**\r\n * Expose theme to window in development\r\n */\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).theme = theme;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from 'easy-peasy';\nimport { store } from './store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { CssBaseline, ThemeProvider } from '@material-ui/core';\nimport { theme } from './theme';\n\nReactDOM.render(\n\t<StoreProvider store={store}>\n\t\t<React.StrictMode>\n\t\t\t<BrowserRouter>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<CssBaseline />\n\t\t\t\t\t<App />\n\t\t\t\t</ThemeProvider>\n\t\t\t</BrowserRouter>\n\t\t</React.StrictMode>\n\t</StoreProvider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}